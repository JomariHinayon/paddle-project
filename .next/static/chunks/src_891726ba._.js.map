{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/Desktop/paddle-project/src/lib/firebase.ts"],"sourcesContent":["\"use client\";\n\n// lib/firebase.ts\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFunctions, connectFunctionsEmulator } from \"firebase/functions\";\nimport { getAnalytics, isSupported } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: \"G-1R6HX54FVL\"\n};\n\n// Initialize Firebase\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApps()[0];\n\n// Authentication\nexport const auth = getAuth(app);\nauth.useDeviceLanguage(); // For better auth flows\n\n// Providers\nexport const googleProvider = new GoogleAuthProvider();\ngoogleProvider.addScope('profile');\ngoogleProvider.addScope('email');\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n}); // Better UX for Google Auth\n\nexport const emailProvider = new EmailAuthProvider();\n\n// Firestore Database\nexport const firestore = getFirestore(app);\n\n// Cloud Storage\nexport const storage = getStorage(app);\n\n// Cloud Functions\nexport const functions = getFunctions(app);\n\n// Analytics (only initialize in client-side)\nexport const analytics = typeof window !== 'undefined' && isSupported() ? getAnalytics(app) : null;\n\n// Performance Monitoring\nexport const performance = typeof window !== 'undefined' ? getPerformance(app) : null;\n\n// Emulator setup (for development)\nif (process.env.NODE_ENV === 'development') {\n  connectFunctionsEmulator(functions, 'localhost', 5001);\n  // Note: Auth emulator needs to be set up in your auth flows\n}\n\n// Utility function to get current user token\nexport const getCurrentUserToken = async (): Promise<string | null> => {\n  try {\n    const user = auth.currentUser;\n    if (!user) return null;\n    return await user.getIdToken();\n  } catch (error) {\n    console.error('Error getting user token:', error);\n    return null;\n  }\n};"],"names":[],"mappings":";;;;;;;;;;;AAaU;AAXV,kBAAkB;AAClB;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AATA;;;;;;;;AAWA,wCAAwC;AACxC,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,eAAe;AACjB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,IAAI,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AAG1E,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAC5B,KAAK,iBAAiB,IAAI,wBAAwB;AAG3C,MAAM,iBAAiB,IAAI,wNAAA,CAAA,qBAAkB;AACpD,eAAe,QAAQ,CAAC;AACxB,eAAe,QAAQ,CAAC;AACxB,eAAe,mBAAmB,CAAC;IACjC,QAAQ;AACV,IAAI,4BAA4B;AAEzB,MAAM,gBAAgB,IAAI,uNAAA,CAAA,oBAAiB;AAG3C,MAAM,YAAY,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AAG/B,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;AAG3B,MAAM,YAAY,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE;AAG/B,MAAM,YAAY,aAAkB,eAAe,CAAA,GAAA,6KAAA,CAAA,cAAW,AAAD,MAAM,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,OAAO;AAGvF,MAAM,cAAc,uCAAgC,CAAA,GAAA,+KAAA,CAAA,iBAAc,AAAD,EAAE;AAE1E,mCAAmC;AACnC,wCAA4C;IAC1C,CAAA,GAAA,6KAAA,CAAA,2BAAwB,AAAD,EAAE,WAAW,aAAa;AACjD,4DAA4D;AAC9D;AAGO,MAAM,sBAAsB;IACjC,IAAI;QACF,MAAM,OAAO,KAAK,WAAW;QAC7B,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,MAAM,KAAK,UAAU;IAC9B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/Desktop/paddle-project/src/lib/session.ts"],"sourcesContent":["'use client';\n\nimport { auth } from './firebase';\n\nexport const setSession = async () => {\n  const user = auth.currentUser;\n  if (user) {\n    const idToken = await user.getIdToken();\n    \n    // Call the session API to create a proper session cookie\n    try {\n      const response = await fetch('/api/auth/session', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ idToken }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to set session');\n      }\n      \n      // The session cookie is now set by the API\n      return true;\n    } catch (error) {\n      console.error('Error setting session:', error);\n      return false;\n    }\n  }\n  return false;\n};\n\nexport const clearSession = async () => {\n  try {\n    // Call the logout API to revoke the session\n    await fetch('/api/auth/logout', {\n      method: 'POST',\n      credentials: 'include',\n    });\n    \n    // Clear local storage and session storage\n    localStorage.removeItem('user');\n    sessionStorage.clear();\n    \n    return true;\n  } catch (error) {\n    console.error('Error clearing session:', error);\n    \n    // Fallback to client-side cookie clearing if the API fails\n    document.cookie = 'session=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT; secure';\n    localStorage.removeItem('user');\n    sessionStorage.clear();\n    \n    return false;\n  }\n};\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAIO,MAAM,aAAa;IACxB,MAAM,OAAO,yHAAA,CAAA,OAAI,CAAC,WAAW;IAC7B,IAAI,MAAM;QACR,MAAM,UAAU,MAAM,KAAK,UAAU;QAErC,yDAAyD;QACzD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,qBAAqB;gBAChD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAQ;YACjC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,2CAA2C;YAC3C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO;QACT;IACF;IACA,OAAO;AACT;AAEO,MAAM,eAAe;IAC1B,IAAI;QACF,4CAA4C;QAC5C,MAAM,MAAM,oBAAoB;YAC9B,QAAQ;YACR,aAAa;QACf;QAEA,0CAA0C;QAC1C,aAAa,UAAU,CAAC;QACxB,eAAe,KAAK;QAEpB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QAEzC,2DAA2D;QAC3D,SAAS,MAAM,GAAG;QAClB,aAAa,UAAU,CAAC;QACxB,eAAe,KAAK;QAEpB,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/Desktop/paddle-project/src/components/LogoutButton.tsx"],"sourcesContent":["'use client';\n\nimport { signOut } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { clearSession } from '@/lib/session';\nimport { useRouter } from 'next/navigation';\nimport { useState } from 'react';\n\ninterface LogoutButtonProps {\n  className?: string;\n}\n\nexport default function LogoutButton({ className = '' }: LogoutButtonProps) {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n\n  const handleLogout = async () => {\n    try {\n      setLoading(true);\n      await signOut(auth);\n      clearSession();\n      router.replace('/login');\n    } catch (error) {\n      console.error('Error signing out:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleLogout}\n      disabled={loading}\n      className={`flex items-center ${className}`}\n    >\n      {loading ? (\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-current\" />\n      ) : (\n        'Logout'\n      )}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAYe,SAAS,aAAa,EAAE,YAAY,EAAE,EAAqB;;IACxE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe;QACnB,IAAI;YACF,WAAW;YACX,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE,yHAAA,CAAA,OAAI;YAClB,CAAA,GAAA,wHAAA,CAAA,eAAY,AAAD;YACX,OAAO,OAAO,CAAC;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;QACtC,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QACC,SAAS;QACT,UAAU;QACV,WAAW,CAAC,kBAAkB,EAAE,WAAW;kBAE1C,wBACC,6LAAC;YAAI,WAAU;;;;;mBAEf;;;;;;AAIR;GA9BwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/Desktop/paddle-project/src/components/UserProfileCard.tsx"],"sourcesContent":["'use client';\n\nimport { User } from 'firebase/auth';\nimport Image from 'next/image';\n\ninterface UserProfileCardProps {\n  user: User | null;\n}\n\nexport default function UserProfileCard({ user }: UserProfileCardProps) {\n  const getProfileImage = () => {\n    if (user?.photoURL) {\n      // Handle Google photo URL\n      return (\n        <Image \n          src={user.photoURL}\n          alt={user.displayName || 'Profile'}\n          width={64}\n          height={64}\n          className=\"rounded-full\"\n          priority\n        />\n      );\n    }\n\n    return (\n      <div className=\"h-16 w-16 rounded-full bg-violet-100 flex items-center justify-center\">\n        <span className=\"text-2xl text-violet-600\">\n          {(user?.displayName?.[0] || user?.email?.[0] || '?').toUpperCase()}\n        </span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <div className=\"flex items-center space-x-4\">\n        {getProfileImage()}\n        <div>\n          <h2 className=\"text-xl font-semibold text-gray-800\">\n            {user?.displayName || user?.email?.split('@')[0] || 'User'}\n          </h2>\n          <p className=\"text-gray-500\">{user?.email}</p>\n        </div>\n      </div>\n      \n      <div className=\"mt-6 border-t pt-4\">\n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-sm text-gray-500\">Account Status</span>\n          <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800\">\n            Active\n          </span>\n        </div>\n        {/* <div className=\"flex justify-between items-center mt-2\">\n          <span className=\"text-sm text-gray-500\">Subscription</span>\n          <span className=\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800\">\n            Free Plan\n          </span>\n        </div> */}\n        <div className=\"flex justify-between items-center mt-2\">\n          <span className=\"text-sm text-gray-500\">Email Verified</span>\n          <span className={`px-2 py-1 text-xs rounded-full ${\n            user?.emailVerified \n              ? 'bg-green-100 text-green-800' \n              : 'bg-yellow-100 text-yellow-800'\n          }`}>\n            {user?.emailVerified ? 'Verified' : 'Pending'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AASe,SAAS,gBAAgB,EAAE,IAAI,EAAwB;IACpE,MAAM,kBAAkB;QACtB,IAAI,MAAM,UAAU;YAClB,0BAA0B;YAC1B,qBACE,6LAAC,gIAAA,CAAA,UAAK;gBACJ,KAAK,KAAK,QAAQ;gBAClB,KAAK,KAAK,WAAW,IAAI;gBACzB,OAAO;gBACP,QAAQ;gBACR,WAAU;gBACV,QAAQ;;;;;;QAGd;QAEA,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAK,WAAU;0BACb,CAAC,MAAM,aAAa,CAAC,EAAE,IAAI,MAAM,OAAO,CAAC,EAAE,IAAI,GAAG,EAAE,WAAW;;;;;;;;;;;IAIxE;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;oBACZ;kCACD,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CACX,MAAM,eAAe,MAAM,OAAO,MAAM,IAAI,CAAC,EAAE,IAAI;;;;;;0CAEtD,6LAAC;gCAAE,WAAU;0CAAiB,MAAM;;;;;;;;;;;;;;;;;;0BAIxC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,6LAAC;gCAAK,WAAU;0CAA6D;;;;;;;;;;;;kCAU/E,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,6LAAC;gCAAK,WAAW,CAAC,+BAA+B,EAC/C,MAAM,gBACF,gCACA,iCACJ;0CACC,MAAM,gBAAgB,aAAa;;;;;;;;;;;;;;;;;;;;;;;;AAMhD;KA/DwB","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/Desktop/paddle-project/src/lib/paddle-config.ts"],"sourcesContent":["export const PADDLE_CONFIG = {\n  clientToken: process.env.NEXT_PUBLIC_PADDLE_CLIENT_TOKEN || '',\n  sellerId: process.env.NEXT_PUBLIC_PADDLE_SELLER_ID || '',\n  prices: {\n    standard: {\n      month: process.env.NEXT_PUBLIC_PADDLE_STANDARD_MONTH_PRICE_ID || 'pri_01h8xz97pj0000000000000000',\n      year: process.env.NEXT_PUBLIC_PADDLE_STANDARD_YEAR_PRICE_ID || 'pri_01h8xz97pj0000000000000000'\n    },\n    premium: {\n      month: process.env.NEXT_PUBLIC_PADDLE_PREMIUM_MONTH_PRICE_ID || 'pri_01h8xz97pj0000000000000000',\n      year: process.env.NEXT_PUBLIC_PADDLE_PREMIUM_YEAR_PRICE_ID || 'pri_01h8xz97pj0000000000000000'\n    }\n  },\n  planDetails: {\n    standard: {\n      name: 'Standard Plan',\n      features: ['Core application features', 'Email support', 'Basic analytics']\n    },\n    premium: {\n      name: 'Premium Plan',\n      features: ['All Standard features', 'Priority support', 'Advanced analytics', 'Custom integrations', 'Team collaboration tools']\n    }\n  },\n  checkoutUrl: 'https://checkout.paddle.com/checkout',\n  customerPortalUrl: 'https://checkout.paddle.com/customer',\n  customerPortalLink: process.env.NEXT_PUBLIC_PADDLE_CUSTOMER_PORTAL_LINK || 'https://sandbox-customer-portal.paddle.com'\n};\n\nexport type PlanType = keyof typeof PADDLE_CONFIG.prices;\nexport type BillingCycle = keyof typeof PADDLE_CONFIG.prices.standard;\n\nexport const identifyPriceId = (priceId: string): { plan: PlanType; cycle: BillingCycle } | null => {\n  for (const [plan, cycles] of Object.entries(PADDLE_CONFIG.prices)) {\n    for (const [cycle, id] of Object.entries(cycles)) {\n      if (id === priceId) {\n        return { \n          plan: plan as PlanType, \n          cycle: cycle as BillingCycle \n        };\n      }\n    }\n  }\n  return null;\n};\n\nexport const getPlanDetails = (priceId: string) => {\n  const identified = identifyPriceId(priceId);\n  if (!identified) return null;\n  \n  return {\n    ...PADDLE_CONFIG.planDetails[identified.plan],\n    billingCycle: identified.cycle,\n    priceId\n  };\n};\n\nexport interface PaddleTransaction {\n  items?: Array<{\n    price?: {\n      id?: string;\n      product_id?: string;\n    }\n  }>;\n  status?: string;\n  total?: number;\n  currency_code?: string;\n}\n\nexport const getPlanFromTransaction = (transaction: PaddleTransaction) => {\n  const priceId = transaction.items?.[0]?.price?.id;\n  if (!priceId) return null;\n  \n  const planInfo = identifyPriceId(priceId);\n  if (!planInfo) return null;\n\n  return {\n    ...PADDLE_CONFIG.planDetails[planInfo.plan],\n    billingCycle: planInfo.cycle,\n    priceId,\n    amount: transaction.total,\n    currency: transaction.currency_code,\n    status: transaction.status\n  };\n};\n\nexport const matchTransactionPlan = (productId: string | undefined) => {\n  if (!productId) return null;\n  \n  // Flatten price IDs for lookup\n  const priceMap = Object.entries(PADDLE_CONFIG.prices).reduce((acc, [plan, cycles]) => {\n    Object.entries(cycles).forEach(([cycle, id]) => {\n      acc[id] = { plan: plan as PlanType, cycle: cycle as BillingCycle };\n    });\n    return acc;\n  }, {} as Record<string, { plan: PlanType; cycle: BillingCycle }>);\n  \n  return priceMap[productId] || null;\n};\n"],"names":[],"mappings":";;;;;;;AACe;AADR,MAAM,gBAAgB;IAC3B,aAAa,wEAA+C;IAC5D,UAAU,6CAA4C;IACtD,QAAQ;QACN,UAAU;YACR,OAAO,sEAA0D;YACjE,MAAM,sEAAyD;QACjE;QACA,SAAS;YACP,OAAO,sEAAyD;YAChE,MAAM,sEAAwD;QAChE;IACF;IACA,aAAa;QACX,UAAU;YACR,MAAM;YACN,UAAU;gBAAC;gBAA6B;gBAAiB;aAAkB;QAC7E;QACA,SAAS;YACP,MAAM;YACN,UAAU;gBAAC;gBAAyB;gBAAoB;gBAAsB;gBAAuB;aAA2B;QAClI;IACF;IACA,aAAa;IACb,mBAAmB;IACnB,oBAAoB,kFAAuD;AAC7E;AAKO,MAAM,kBAAkB,CAAC;IAC9B,KAAK,MAAM,CAAC,MAAM,OAAO,IAAI,OAAO,OAAO,CAAC,cAAc,MAAM,EAAG;QACjE,KAAK,MAAM,CAAC,OAAO,GAAG,IAAI,OAAO,OAAO,CAAC,QAAS;YAChD,IAAI,OAAO,SAAS;gBAClB,OAAO;oBACL,MAAM;oBACN,OAAO;gBACT;YACF;QACF;IACF;IACA,OAAO;AACT;AAEO,MAAM,iBAAiB,CAAC;IAC7B,MAAM,aAAa,gBAAgB;IACnC,IAAI,CAAC,YAAY,OAAO;IAExB,OAAO;QACL,GAAG,cAAc,WAAW,CAAC,WAAW,IAAI,CAAC;QAC7C,cAAc,WAAW,KAAK;QAC9B;IACF;AACF;AAcO,MAAM,yBAAyB,CAAC;IACrC,MAAM,UAAU,YAAY,KAAK,EAAE,CAAC,EAAE,EAAE,OAAO;IAC/C,IAAI,CAAC,SAAS,OAAO;IAErB,MAAM,WAAW,gBAAgB;IACjC,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO;QACL,GAAG,cAAc,WAAW,CAAC,SAAS,IAAI,CAAC;QAC3C,cAAc,SAAS,KAAK;QAC5B;QACA,QAAQ,YAAY,KAAK;QACzB,UAAU,YAAY,aAAa;QACnC,QAAQ,YAAY,MAAM;IAC5B;AACF;AAEO,MAAM,uBAAuB,CAAC;IACnC,IAAI,CAAC,WAAW,OAAO;IAEvB,+BAA+B;IAC/B,MAAM,WAAW,OAAO,OAAO,CAAC,cAAc,MAAM,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,OAAO;QAC/E,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,OAAO,GAAG;YACzC,GAAG,CAAC,GAAG,GAAG;gBAAE,MAAM;gBAAkB,OAAO;YAAsB;QACnE;QACA,OAAO;IACT,GAAG,CAAC;IAEJ,OAAO,QAAQ,CAAC,UAAU,IAAI;AAChC","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/Desktop/paddle-project/src/lib/paddle-utils.ts"],"sourcesContent":["import { PADDLE_CONFIG } from '@/lib/paddle-config';\n\ninterface TransactionData {\n  checkoutId: string;\n  transactionId: string;\n  status: string;\n  total: number;\n  currency: string;\n  items: Array<{\n    price: {\n      product_id: string;\n      description?: string;\n    };\n  }>;\n  paddleEventData: any;\n}\n\ninterface PlanInfo {\n  name: string;\n  tier: 'standard' | 'premium';\n  interval: 'month' | 'year';\n  description?: string;\n  features?: string[];\n}\n\nexport interface PaddlePlan {\n  name: string;\n  features: string[];\n  description?: string;\n  tier?: 'standard' | 'premium';\n  interval?: 'month' | 'year';\n}\n\n// Export the PADDLE_PLANS object\nexport const PADDLE_PLANS: Record<string, PaddlePlan> = {\n  // Standard monthly plan\n  [PADDLE_CONFIG.prices.standard.month]: {\n    name: 'Standard Monthly',\n    tier: 'standard',\n    interval: 'month',\n    description: 'Basic features with monthly billing',\n    features: PADDLE_CONFIG.planDetails.standard.features\n  },\n  \n  // Standard yearly plan\n  [PADDLE_CONFIG.prices.standard.year]: {\n    name: 'Standard Yearly',\n    tier: 'standard',\n    interval: 'year',\n    description: 'Basic features with yearly billing (save 16%)',\n    features: PADDLE_CONFIG.planDetails.standard.features\n  },\n  \n  // Premium monthly plan\n  [PADDLE_CONFIG.prices.premium.month]: {\n    name: 'Premium Monthly',\n    tier: 'premium',\n    interval: 'month',\n    description: 'Advanced features with monthly billing',\n    features: PADDLE_CONFIG.planDetails.premium.features\n  },\n  \n  // Premium yearly plan\n  [PADDLE_CONFIG.prices.premium.year]: {\n    name: 'Premium Yearly',\n    tier: 'premium',\n    interval: 'year',\n    description: 'Advanced features with yearly billing (save 16%)',\n    features: PADDLE_CONFIG.planDetails.premium.features\n  }\n};\n\n/**\n * Identifies a plan based on the planId from Paddle\n * \n * @param planId The Paddle plan ID to identify\n * @returns Information about the plan or null if not found\n */\nexport function identifyPlan(planId: string): PlanInfo | null {\n  // Check standard plans\n  if (planId === PADDLE_CONFIG.prices.standard.month) {\n    return {\n      name: 'Standard Monthly',\n      tier: 'standard',\n      interval: 'month',\n      description: 'Basic features with monthly billing',\n      features: PADDLE_CONFIG.planDetails.standard.features\n    };\n  }\n\n  if (planId === PADDLE_CONFIG.prices.standard.year) {\n    return {\n      name: 'Standard Yearly',\n      tier: 'standard',\n      interval: 'year',\n      description: 'Basic features with yearly billing (save 16%)',\n      features: PADDLE_CONFIG.planDetails.standard.features\n    };\n  }\n\n  // Check premium plans\n  if (planId === PADDLE_CONFIG.prices.premium.month) {\n    return {\n      name: 'Premium Monthly',\n      tier: 'premium',\n      interval: 'month',\n      description: 'Advanced features with monthly billing',\n      features: PADDLE_CONFIG.planDetails.premium.features\n    };\n  }\n\n  if (planId === PADDLE_CONFIG.prices.premium.year) {\n    return {\n      name: 'Premium Yearly',\n      tier: 'premium',\n      interval: 'year',\n      description: 'Advanced features with yearly billing (save 16%)',\n      features: PADDLE_CONFIG.planDetails.premium.features\n    };\n  }\n\n  return null;\n}\n\n/**\n * Formats a Paddle price amount for display\n * \n * @param amount The price amount in cents/smallest currency unit\n * @param currencyCode The currency code (default: USD)\n * @returns Formatted price string\n */\nexport function formatPrice(amount: number, currencyCode: string = 'USD'): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currencyCode,\n    minimumFractionDigits: 2\n  }).format(amount / 100);\n}\n\n/**\n * Creates a valid checkout URL for Paddle\n * \n * @param priceId The Paddle price ID to create checkout for\n * @param customerId Optional customer ID for existing customers\n * @param customerEmail Optional customer email for prefilling checkout\n * @returns Full checkout URL\n */\nexport function createCheckoutUrl(\n  priceId: string, \n  customerId?: string, \n  customerEmail?: string\n): string {\n  const baseUrl = PADDLE_CONFIG.checkoutUrl;\n  const queryParams = new URLSearchParams();\n  \n  // Add the price ID as an item\n  queryParams.append('items[0][priceId]', priceId);\n  queryParams.append('items[0][quantity]', '1');\n  \n  // Add customer ID if provided\n  if (customerId) {\n    queryParams.append('customer[id]', customerId);\n  }\n  \n  // Add customer email if provided\n  if (customerEmail) {\n    queryParams.append('customer[email]', customerEmail);\n  }\n  \n  // Add success and cancel URLs if needed\n  // queryParams.append('successUrl', window.location.origin + '/checkout/success');\n  // queryParams.append('cancelUrl', window.location.origin + '/checkout/cancel');\n  \n  return `${baseUrl}?${queryParams.toString()}`;\n}\n\nexport const getTransactionDetails = (transaction: TransactionData) => {\n  const productId = transaction.items?.[0]?.price?.product_id;\n  const plan = identifyPlan(productId);\n  \n  return {\n    ...plan,\n    amount: `${transaction.total} ${transaction.currency}`,\n    status: transaction.status,\n    checkoutId: transaction.checkoutId,\n    transactionId: transaction.transactionId,\n    rawProductId: productId,\n    purchaseDate: transaction.paddleEventData?.created_at,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/Desktop/paddle-project/src/components/PaddleCheckoutHandler.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getFirestore, doc, setDoc, collection, updateDoc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\n\ninterface PaddleCheckoutHandlerProps {\n  onSuccess?: (subscriptionData: any) => void;\n  onError?: (error: Error) => void;\n}\n\ninterface SubscriptionResponse {\n  subscriptionId: string;\n  status: string;\n  planId: string;\n  nextBillDate: string | null;\n  customerId: string;\n}\n\nexport default function PaddleCheckoutHandler({ onSuccess, onError }: PaddleCheckoutHandlerProps) {\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [checkoutId, setCheckoutId] = useState<string | null>(null);\n  const [customerId, setCustomerId] = useState<string | null>(null);\n  \n  // Get checkout and customer ID from URL if present\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const params = new URLSearchParams(window.location.search);\n      const id = params.get('checkout_id');\n      const customer = params.get('customer_id');\n      \n      if (id) setCheckoutId(id);\n      if (customer) setCustomerId(customer);\n    }\n  }, []);\n  \n  // Process the checkout completion if we have the necessary data\n  useEffect(() => {\n    const processCheckout = async () => {\n      if (!checkoutId || !customerId || isProcessing) return;\n      \n      setIsProcessing(true);\n      \n      try {\n        const auth = getAuth();\n        const user = auth.currentUser;\n        \n        if (!user) {\n          throw new Error('User not authenticated');\n        }\n        \n        // Instead of storing checkout data, we'll just pass it to the verification endpoint\n        console.log('Processing checkout - calling verification endpoint');\n        \n        // Call our server endpoint to verify and process the checkout\n        const response = await fetch('/api/subscriptions/verify-checkout', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            checkoutId,\n            customerId,\n            userId: user.uid,\n            email: user.email\n          }),\n        });\n        \n        if (!response.ok) {\n          // If API call fails, we'll rely on webhooks to update the subscription later\n          console.log('Subscription details not available yet, webhooks will update later');\n          \n          // Clear URL parameters\n          window.history.replaceState({}, document.title, window.location.pathname);\n          \n          if (onSuccess) {\n            onSuccess({\n              subscriptionId: 'pending',\n              status: 'processing',\n              customerId,\n            });\n          }\n          \n          return;\n        }\n        \n        const subscriptionData: SubscriptionResponse = await response.json();\n        console.log('Subscription details retrieved from API:', subscriptionData);\n        \n        // Only update user record if we have a valid subscription ID (not 'pending')\n        if (subscriptionData.subscriptionId && subscriptionData.subscriptionId !== 'pending') {\n          // Update user record with subscription details\n          const db = getFirestore();\n          const userRef = doc(db, 'users', user.uid);\n          await setDoc(userRef, {\n            hasActiveSubscription: true,\n            currentSubscriptionId: subscriptionData.subscriptionId,\n            subscriptionStatus: subscriptionData.status,\n            currentPlan: subscriptionData.planId,\n            nextBillDate: subscriptionData.nextBillDate ? new Date(subscriptionData.nextBillDate) : null,\n            paddleCustomerId: customerId,\n            lastCheckoutDate: new Date()\n          }, { merge: true });\n        } else {\n          console.log('No valid subscription ID received, waiting for webhook events');\n        }\n        \n        // Clear URL parameters\n        window.history.replaceState({}, document.title, window.location.pathname);\n        \n        if (onSuccess) {\n          onSuccess(subscriptionData);\n        }\n      } catch (error: any) {\n        console.error('Error processing checkout:', error);\n        if (onError) {\n          onError(error);\n        }\n      } finally {\n        setIsProcessing(false);\n      }\n    };\n    \n    processCheckout();\n  }, [checkoutId, customerId, isProcessing, onSuccess, onError]);\n  \n  // This component doesn't render anything\n  return null;\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/Desktop/paddle-project/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { auth } from '@/lib/firebase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport LogoutButton from '@/components/LogoutButton';\nimport UserProfileCard from '@/components/UserProfileCard';\nimport Script from 'next/script';\nimport { PADDLE_CONFIG, type PlanType, type BillingCycle } from '@/lib/paddle-config';\nimport { getFirestore, doc, setDoc, collection, addDoc, getDoc, getDocs, query, orderBy, limit, where } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { identifyPlan } from '@/lib/paddle-utils';\nimport Image from 'next/image';\nimport PaddleCheckoutHandler from '@/components/PaddleCheckoutHandler';\n\ndeclare global {\n  interface Window {\n    Paddle: any;\n  }\n}\n\n// Create a theme context\nimport { createContext, useContext } from 'react';\n\ntype ThemeType = 'light' | 'dark';\ntype ThemeContextType = {\n  theme: ThemeType;\n  setTheme: (theme: ThemeType) => void;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nfunction ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<ThemeType>('light');\n\n  useEffect(() => {\n    // Load theme from localStorage if available\n    const savedTheme = localStorage.getItem('theme') as ThemeType;\n    if (savedTheme) {\n      setTheme(savedTheme);\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n    } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      // Use system preference as fallback\n      setTheme('dark');\n      document.documentElement.classList.add('dark');\n    }\n  }, []);\n\n  const changeTheme = (newTheme: ThemeType) => {\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n    \n    if (newTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme: changeTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n\n// Settings Modal Component\nfunction SettingsModal({ isOpen, onClose }: { isOpen: boolean; onClose: () => void }) {\n  const { theme, setTheme } = useTheme();\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\">\n      <div className=\"w-full max-w-md bg-white dark:bg-slate-800 rounded-2xl shadow-xl overflow-hidden transform transition-all\">\n        <div className=\"p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h3 className=\"text-lg font-semibold text-slate-800 dark:text-white\">Settings</h3>\n            <button \n              onClick={onClose}\n              className=\"text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-white transition-colors\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          <div className=\"space-y-6\">\n            {/* Theme Settings */}\n            <div>\n              <h4 className=\"text-md font-medium text-slate-700 dark:text-slate-200 mb-3\">Theme</h4>\n              <div className=\"flex space-x-4\">\n                <button\n                  onClick={() => setTheme('light')}\n                  className={`flex flex-col items-center p-4 rounded-lg border-2 transition-all ${\n                    theme === 'light' \n                      ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\n                      : 'border-slate-200 dark:border-slate-700 hover:border-slate-300 dark:hover:border-slate-600'\n                  }`}\n                >\n                  <div className=\"w-12 h-12 rounded-full bg-white border border-slate-200 flex items-center justify-center mb-2 shadow-sm\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-amber-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-sm font-medium text-slate-800 dark:text-slate-200\">Light Mode</span>\n                </button>\n                \n                <button\n                  onClick={() => setTheme('dark')}\n                  className={`flex flex-col items-center p-4 rounded-lg border-2 transition-all ${\n                    theme === 'dark' \n                      ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\n                      : 'border-slate-200 dark:border-slate-700 hover:border-slate-300 dark:hover:border-slate-600'\n                  }`}\n                >\n                  <div className=\"w-12 h-12 rounded-full bg-slate-800 border border-slate-700 flex items-center justify-center mb-2 shadow-sm\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-slate-200\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-sm font-medium text-slate-800 dark:text-slate-200\">Dark Mode</span>\n                </button>\n              </div>\n            </div>\n            \n            {/* About Section */}\n            <div className=\"pt-4 border-t border-slate-200 dark:border-slate-700\">\n              <h4 className=\"text-md font-medium text-slate-700 dark:text-slate-200 mb-3\">About</h4>\n              <div className=\"p-4 bg-slate-50 dark:bg-slate-700/30 rounded-lg\">\n                <div className=\"flex items-center mb-3\">\n                  <Image \n                    src=\"/paFire_logo.png\" \n                    alt=\"paFire Logo\" \n                    width={24} \n                    height={24}\n                    className=\"mr-2\"\n                  />\n                  <h5 className=\"font-semibold text-slate-900 dark:text-white\">paFire</h5>\n                </div>\n                <p className=\"text-sm text-slate-600 dark:text-slate-300\">\n                  Version 1.0.0\n                </p>\n                <p className=\"text-sm text-slate-600 dark:text-slate-300 mt-2\">\n                  A Firebase & Paddle integration showcase application.\n                </p>\n                <div className=\"mt-4\">\n                  <a \n                    href=\"https://github.com/username/pademo\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline flex items-center\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/>\n                    </svg>\n                    View on GitHub\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Define a type for Firestore timestamp objects\ninterface FirestoreTimestamp {\n  seconds: number;\n  nanoseconds: number;\n  toDate?: () => Date;\n}\n\nexport default function Dashboard() {\n  const router = useRouter();\n  const [user, setUser] = useState(auth.currentUser);\n  const [paddleLoaded, setPaddleLoaded] = useState(false);\n  const [billingCycle, setBillingCycle] = useState<BillingCycle>('month');\n  const [prices, setPrices] = useState<{[key in PlanType]?: string}>({});\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [checkoutStatus, setCheckoutStatus] = useState<string | null>(null);\n  \n  // Add type definition for subscription state\n  interface SubscriptionState {\n    hasActive: boolean;\n    plan?: string | null;\n    status: string;\n    lastTransaction?: Date | FirestoreTimestamp | null;\n    product?: any;\n    customerId?: string | null;\n    subscriptionId?: string | null;\n    nextBillDate?: Date | FirestoreTimestamp | null;\n    canceledAt?: Date | FirestoreTimestamp | null;\n    scheduled_change?: {\n      action?: string;\n      effective_at?: string;\n      resume_at?: string | null;\n    } | null;\n    cancellationEffectiveDate?: Date | FirestoreTimestamp | null;\n  }\n  \n  const [subscription, setSubscription] = useState<SubscriptionState | null>(null);\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [subscriptionDetails, setSubscriptionDetails] = useState<any>(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n      if (!currentUser) {\n        router.replace('/login');\n        return;\n      }\n      \n      setUser(currentUser);\n      const userId = currentUser.uid;\n      \n      // Fetch subscription status directly\n      fetchSubscriptionData(userId);\n      \n      // Wait for Paddle to be ready, then fetch prices\n      if (paddleLoaded) {\n        updatePrices();\n      }\n    });\n\n    // Log Paddle configuration for debugging\n    console.log('Paddle Config:', {\n      clientToken: PADDLE_CONFIG.clientToken ? `${PADDLE_CONFIG.clientToken.substring(0, 5)}...` : 'missing',\n      sellerId: PADDLE_CONFIG.sellerId,\n      standardMonthPrice: PADDLE_CONFIG.prices.standard.month,\n      premiumMonthPrice: PADDLE_CONFIG.prices.premium.month\n    });\n\n    return () => unsubscribe();\n  }, [paddleLoaded, router]);\n\n  const updatePrices = async () => {\n    if (!paddleLoaded) {\n      console.error('Paddle is not loaded yet');\n      return;\n    }\n\n    try {\n      const request = {\n        items: [\n          {\n            quantity: 1,\n            priceId: PADDLE_CONFIG.prices.standard[billingCycle]\n          },\n          {\n            quantity: 1,\n            priceId: PADDLE_CONFIG.prices.premium[billingCycle]\n          }\n        ]\n      };\n\n      const result = await window.Paddle.PricePreview(request);\n      const newPrices: {[key in PlanType]?: string} = {};\n\n      result.data.details.lineItems.forEach((item: any) => {\n        if (item.price.id === PADDLE_CONFIG.prices.standard[billingCycle]) {\n          newPrices.standard = item.formattedTotals.subtotal;\n        } else if (item.price.id === PADDLE_CONFIG.prices.premium[billingCycle]) {\n          newPrices.premium = item.formattedTotals.subtotal;\n        }\n      });\n\n      setPrices(newPrices);\n    } catch (error) {\n      console.error('Error fetching prices:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (paddleLoaded) {\n      updatePrices();\n      \n      // Debug check - print environment variables\n      console.log('Environment Price IDs:', {\n        standardMonth: process.env.NEXT_PUBLIC_PADDLE_STANDARD_MONTH_PRICE_ID,\n        standardYear: process.env.NEXT_PUBLIC_PADDLE_STANDARD_YEAR_PRICE_ID,\n        premiumMonth: process.env.NEXT_PUBLIC_PADDLE_PREMIUM_MONTH_PRICE_ID,\n        premiumYear: process.env.NEXT_PUBLIC_PADDLE_PREMIUM_YEAR_PRICE_ID\n      });\n      \n      console.log('Paddle Config Price IDs:', PADDLE_CONFIG.prices);\n    }\n  }, [paddleLoaded, billingCycle]);\n\n  const handleSubscription = (plan: PlanType) => {\n    if (!paddleLoaded) {\n      console.error('Paddle is not loaded yet');\n      setCheckoutStatus('Error: Paddle is not loaded yet. Please refresh the page.');\n      return;\n    }\n\n    // Set checkout status to show loading\n    setCheckoutStatus('Opening checkout...');\n    \n    // Get price ID from config\n    const priceId = PADDLE_CONFIG.prices[plan][billingCycle];\n    \n    // Hardcoded fallback price ID for testing (Paddle sandbox test product)\n    const fallbackPriceId = 'pri_01h8xz97pj0000000000000000'; \n    \n    console.log(`Starting checkout for plan: ${plan}, cycle: ${billingCycle}`);\n    console.log(`Using price ID: ${priceId} (fallback available: ${fallbackPriceId})`);\n    console.log('User data:', { email: user?.email, uid: user?.uid });\n\n    try {\n      // Display debug info in console\n      console.log('Paddle Config:', {\n        clientToken: PADDLE_CONFIG.clientToken ? `${PADDLE_CONFIG.clientToken.substring(0, 5)}...` : 'missing',\n        sellerId: PADDLE_CONFIG.sellerId,\n        priceId: priceId\n      });\n\n      window.Paddle.Checkout.open({\n        items: [{\n          priceId: priceId, // Use the configured price ID\n          quantity: 1\n        }],\n        settings: {\n          displayMode: 'overlay',\n          theme: 'light',\n          locale: 'en'\n        },\n        customer: {\n          email: user?.email || '',\n        },\n        customData: {\n          userId: user?.uid || ''\n        },\n        successCallback: (data: any) => {\n          console.log('Checkout success callback triggered', data);\n          setCheckoutStatus('Processing your subscription...');\n        },\n        closeCallback: (data: any) => {\n          console.log('Checkout closed', data);\n          // Only clear the message if user manually closes the checkout\n          setCheckoutStatus(null);\n        },\n        errorCallback: (error: any) => {\n          console.error('Checkout error:', error);\n          \n          // If we got a \"product not found\" error, try with the fallback price ID\n          if (error && (error.code === 'product_not_found' || error.message?.includes('product not found'))) {\n            console.log('Trying checkout with fallback price ID...');\n            \n            // Try with fallback price ID\n            setTimeout(() => {\n              try {\n                window.Paddle.Checkout.open({\n                  items: [{\n                    priceId: fallbackPriceId, // Use fallback price ID\n                    quantity: 1\n                  }],\n                  settings: {\n                    displayMode: 'overlay',\n                    theme: 'light',\n                    locale: 'en'\n                  },\n                  customer: {\n                    email: user?.email || '',\n                  },\n                  customData: {\n                    userId: user?.uid || ''\n                  }\n                });\n              } catch (fallbackError) {\n                console.error('Error with fallback price ID:', fallbackError);\n                setCheckoutStatus(`Error with fallback price ID: ${fallbackError instanceof Error ? fallbackError.message : 'Unknown error'}`);\n              }\n            }, 1000);\n          } else {\n            setCheckoutStatus(`Error during checkout: ${error.message || error.reason || 'Unknown error'}`);\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error opening Paddle checkout:', error);\n      setCheckoutStatus(`Failed to open checkout: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n\n  const testFirebaseWrite = async () => {\n    try {\n      const auth = getAuth();\n      const user = auth.currentUser;\n      \n      if (!user) {\n        console.log('No user logged in');\n        return;\n      }\n\n      console.log('Current user UID:', user.uid);\n      \n      const db = getFirestore();\n      const testRef = doc(db, 'users', user.uid, 'tests', new Date().toISOString());\n      \n      await setDoc(testRef, {\n        timestamp: new Date(),\n        testData: 'Test write to Firebase',\n        userId: user.uid\n      });\n      \n      console.log('Test data written successfully');\n    } catch (error) {\n      console.error('Error writing test data:', error);\n    }\n  };\n\n  const handlePaddleEvent = async (event: any) => {\n    console.log('Paddle event:', event);\n\n    // Only process events that have a valid subscription ID - not just checkout completion\n    if (event.name === 'subscription.created' && user) {\n      try {\n        const db = getFirestore();\n        const transactionsRef = collection(db, 'users', user.uid, 'transactions');\n\n        console.log('Full Paddle subscription.created payload:', JSON.stringify(event, null, 2));\n\n        const item = event.data.items?.[0];\n        const subscriptionId = event.data.id;\n        \n        // Ensure we have a valid subscription ID\n        if (!subscriptionId) {\n          console.log('No valid subscription ID in event, not saving to Firebase');\n          return;\n        }\n        \n        const transactionData = {\n          userId: user.uid,\n          subscriptionId: subscriptionId,\n          product: {\n            id: item?.product?.id ?? '',\n            name: item?.product?.name ?? ''\n          },\n          amountPaid: item?.totals?.total ?? 0,\n          currency: item?.price?.unit_price?.currency_code ?? 'USD',\n          paymentStatus: event.data.status ?? 'active',\n          customerEmail: event.data.customer?.email ?? user.email ?? '',\n          customerId: event.data.customer?.id ?? '',\n          nextBillDate: event.data.next_billed_at ? new Date(event.data.next_billed_at) : null,\n          startDate: event.data.started_at ? new Date(event.data.started_at) : null,\n          quantity: item?.quantity ?? 1,\n          timestamp: new Date()\n        };\n\n        console.log('Subscription transaction data:', transactionData);\n\n        // Save transaction with the subscription ID as the document ID.\n        await setDoc(doc(transactionsRef, subscriptionId), transactionData);\n        console.log('Subscription saved to Firebase');\n\n        // Update user's subscription status\n        const userRef = doc(db, 'users', user.uid);\n        await setDoc(userRef, {\n          hasActiveSubscription: true,\n          lastTransactionDate: new Date(),\n          currentPlan: transactionData.product.id,\n          subscriptionStatus: 'active',\n          currentSubscriptionId: subscriptionId\n        }, { merge: true });\n      } catch (error) {\n        console.error('Error saving subscription data:', error);\n        console.error('Event data:', event);\n      }\n    } else if (event.name === 'checkout.completed') {\n      // Just log the checkout completion without saving to Firebase\n      console.log('Checkout completed. Waiting for subscription.created event.');\n    }\n  };\n\n  const fetchSubscriptionStatus = async (userId: string) => {\n    try {\n      const db = getFirestore();\n      const userRef = doc(db, 'users', userId);\n      const userDoc = await getDoc(userRef);\n      \n      if (userDoc.exists()) {\n        const userData = userDoc.data();\n        \n        const subscriptionData = {\n          hasActive: userData.hasActiveSubscription || false,\n          plan: userData.currentPlan || null,\n          status: userData.subscriptionStatus || 'inactive',\n          lastTransaction: userData.lastTransactionDate?.toDate() || null,\n          product: userData.product || null,\n          customerId: userData.paddleCustomerId || null,\n          subscriptionId: userData.currentSubscriptionId || null,\n          nextBillDate: userData.nextBillDate?.toDate() || null,\n          canceledAt: userData.subscriptionCanceledAt?.toDate() || null,\n          scheduled_change: userData.scheduled_change || null,\n          cancellationEffectiveDate: userData.cancellationEffectiveDate?.toDate() || null\n        };\n        \n        setSubscription(subscriptionData);\n      }\n    } catch (error) {\n      console.error('Error fetching subscription:', error);\n    }\n  };\n\n  const fetchTransactionLogs = async (userId: string) => {\n    try {\n      const db = getFirestore();\n      const transactionsRef = collection(db, 'users', userId, 'transactions');\n      // Order by timestamp in descending order and limit to 1\n      const q = query(transactionsRef, orderBy('timestamp', 'desc'), limit(1));\n      const transactionsSnap = await getDocs(q);\n      \n      const logs = transactionsSnap.docs.map(doc => {\n        const data = doc.data();\n        \n        // Check for rawData field which might contain the scheduled_change\n        if (data.rawData) {\n          // The rawData might be stored as a string in some cases\n          let rawDataObj = data.rawData;\n          if (typeof rawDataObj === 'string') {\n            try {\n              rawDataObj = JSON.parse(rawDataObj);\n            } catch (e) {\n              console.error('Failed to parse rawData string:', e);\n            }\n          }\n          \n          // Check for scheduled_change in rawData\n          if (rawDataObj.scheduled_change) {\n            // Update the subscription state with the scheduled change data\n            if (subscription && data.subscriptionId === subscription.subscriptionId) {\n              setSubscription(prev => {\n                const updatedSubscription = {\n                  ...prev as SubscriptionState,\n                  scheduled_change: rawDataObj.scheduled_change\n                };\n                return updatedSubscription;\n              });\n            }\n          }\n        }\n        \n        // Check if there's a direct scheduled_change\n        if (data.scheduled_change) {\n          // Update the subscription state with the scheduled change data\n          if (subscription && data.subscriptionId === subscription.subscriptionId) {\n            setSubscription(prev => {\n              const updatedSubscription = {\n                ...prev as SubscriptionState,\n                scheduled_change: data.scheduled_change\n              };\n              return updatedSubscription;\n            });\n          }\n        }\n        \n        return {\n          id: doc.id,\n          ...data,\n          planDetails: identifyPlan(data.product?.id)\n        };\n      });\n      \n      setTransactions(logs);\n\n      // Now, check subscription collections for the latest state\n      if (subscription?.subscriptionId) {\n        const subscriptionRef = doc(db, 'users', userId, 'subscriptions', subscription.subscriptionId);\n        const subscriptionDoc = await getDoc(subscriptionRef);\n        \n        if (subscriptionDoc.exists()) {\n          const subscriptionData = subscriptionDoc.data();\n          \n          // Check for rawData field in the subscription document\n          if (subscriptionData.rawData) {\n            let rawDataObj = subscriptionData.rawData;\n            if (typeof rawDataObj === 'string') {\n              try {\n                rawDataObj = JSON.parse(rawDataObj);\n              } catch (e) {\n                console.error('Failed to parse subscription rawData string:', e);\n              }\n            }\n            \n            if (rawDataObj.scheduled_change) {\n              setSubscription(prev => {\n                const updatedSubscription = {\n                  ...prev as SubscriptionState,\n                  scheduled_change: rawDataObj.scheduled_change\n                };\n                return updatedSubscription;\n              });\n            }\n          }\n          \n          // Update the subscription state with any cancellation data\n          if (subscriptionData.scheduled_change || subscriptionData.cancellationEffectiveDate) {\n            setSubscription(prev => {\n              const updatedSubscription = {\n                ...prev as SubscriptionState,\n                scheduled_change: subscriptionData.scheduled_change || prev?.scheduled_change,\n                cancellationEffectiveDate: subscriptionData.cancellationEffectiveDate?.toDate() || prev?.cancellationEffectiveDate\n              };\n              return updatedSubscription;\n            });\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n\n  const fetchSubscriptionDetails = async (userId: string, subscriptionId: string) => {\n    try {\n      const db = getFirestore();\n      \n      // Check in transactions collection\n      const transactionRef = doc(db, 'users', userId, 'transactions', subscriptionId);\n      const transactionDoc = await getDoc(transactionRef);\n      \n      if (transactionDoc.exists()) {\n        const data = transactionDoc.data();\n        console.log(\"Direct transaction data fetch:\", data);\n        \n        // If this transaction has rawData with scheduled_change, update subscription\n        if (data.rawData?.scheduled_change || data.scheduled_change) {\n          const scheduled_change = data.rawData?.scheduled_change || data.scheduled_change;\n          console.log(\"Found scheduled_change in transaction:\", scheduled_change);\n          \n          setSubscription(prev => {\n            const updatedSubscription = {\n              ...prev as SubscriptionState,\n              scheduled_change: scheduled_change\n            };\n            console.log('Updated subscription with direct scheduled_change:', updatedSubscription);\n            return updatedSubscription;\n          });\n          \n          return;\n        }\n      }\n      \n      // Also check subscriptions collection\n      const subscriptionRef = doc(db, 'users', userId, 'subscriptions', subscriptionId);\n      const subscriptionDoc = await getDoc(subscriptionRef);\n      \n      if (subscriptionDoc.exists()) {\n        const data = subscriptionDoc.data();\n        console.log(\"Direct subscription data fetch:\", data);\n        \n        if (data.scheduled_change || data.cancellationEffectiveDate) {\n          setSubscription(prev => {\n            const updatedSubscription = {\n              ...prev as SubscriptionState,\n              scheduled_change: data.scheduled_change || prev?.scheduled_change,\n              cancellationEffectiveDate: data.cancellationEffectiveDate?.toDate() || prev?.cancellationEffectiveDate\n            };\n            console.log('Updated subscription with direct subscription data:', updatedSubscription);\n            return updatedSubscription;\n          });\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching subscription details:\", error);\n    }\n  };\n\n  const fetchSubscriptionData = async (userId: string) => {\n    try {\n      const db = getFirestore();\n      \n      // If we have a subscription ID, fetch it directly\n      if (subscription?.subscriptionId) {\n        const subscriptionsRef = doc(db, 'users', userId, 'subscriptions', subscription.subscriptionId);\n        const subscriptionDoc = await getDoc(subscriptionsRef);\n        \n        if (subscriptionDoc.exists()) {\n          const data = subscriptionDoc.data();\n          \n          // Format price data if it exists in different formats\n          let formattedData: any = {\n            ...data,\n            id: subscriptionDoc.id\n          };\n          \n          // Check for different price formats and normalize them\n          if (data.items?.[0]?.price?.unit_price) {\n            formattedData.priceAmount = data.items[0].price.unit_price.amount;\n            formattedData.priceCurrency = data.items[0].price.unit_price.currency_code;\n          } else if (data.price) {\n            if (typeof data.price === 'object') {\n              formattedData.priceAmount = data.price.amount;\n              formattedData.priceCurrency = data.price.currency;\n            } else if (typeof data.price === 'string') {\n              formattedData.formattedPrice = data.price;\n            } else if (typeof data.price === 'number') {\n              formattedData.priceAmount = data.price;\n              formattedData.priceCurrency = data.currency || 'USD';\n            }\n          } else if (data.amount) {\n            formattedData.priceAmount = data.amount;\n            formattedData.priceCurrency = data.currency || 'USD';\n          }\n          \n          // Also check if there are specific billing details\n          if (data.billing_details || data.billingDetails) {\n            const billingDetails = data.billing_details || data.billingDetails;\n            if (billingDetails.amount || billingDetails.total) {\n              formattedData.priceAmount = billingDetails.amount || billingDetails.total;\n              formattedData.priceCurrency = billingDetails.currency || 'USD';\n            }\n          }\n          \n          setSubscriptionDetails(formattedData);\n          return;\n        }\n      }\n      \n      // If no specific subscription ID or it wasn't found, find the most recent active subscription\n      const subscriptionsRef = collection(db, 'users', userId, 'subscriptions');\n      const q = query(\n        subscriptionsRef,\n        where('status', '==', 'active'),\n        orderBy('createdAt', 'desc'),\n        limit(1)\n      );\n      \n      const subscriptionsSnap = await getDocs(q);\n      \n      if (!subscriptionsSnap.empty) {\n        const data = subscriptionsSnap.docs[0].data();\n        \n        // Format price data if it exists in different formats\n        let formattedData: any = {\n          ...data,\n          id: subscriptionsSnap.docs[0].id\n        };\n        \n        // Check for different price formats and normalize them\n        if (data.items?.[0]?.price?.unit_price) {\n          formattedData.priceAmount = data.items[0].price.unit_price.amount;\n          formattedData.priceCurrency = data.items[0].price.unit_price.currency_code;\n        } else if (data.price) {\n          if (typeof data.price === 'object') {\n            formattedData.priceAmount = data.price.amount;\n            formattedData.priceCurrency = data.price.currency;\n          } else if (typeof data.price === 'string') {\n            formattedData.formattedPrice = data.price;\n          } else if (typeof data.price === 'number') {\n            formattedData.priceAmount = data.price;\n            formattedData.priceCurrency = data.currency || 'USD';\n          }\n        } else if (data.amount) {\n          formattedData.priceAmount = data.amount;\n          formattedData.priceCurrency = data.currency || 'USD';\n        }\n        \n        // Also check if there are specific billing details\n        if (data.billing_details || data.billingDetails) {\n          const billingDetails = data.billing_details || data.billingDetails;\n          if (billingDetails.amount || billingDetails.total) {\n            formattedData.priceAmount = billingDetails.amount || billingDetails.total;\n            formattedData.priceCurrency = billingDetails.currency || 'USD';\n          }\n        }\n        \n        setSubscriptionDetails(formattedData);\n      }\n    } catch (error) {\n      console.error('Error fetching subscription data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (user?.uid) {\n      // Define an async function to load all data in sequence\n      const loadAllData = async () => {\n        try {\n          // Step 1: Get basic subscription info\n          await fetchSubscriptionStatus(user.uid);\n          \n          // Step 2: Get subscription data from the subscriptions collection\n          await fetchSubscriptionData(user.uid);\n          \n          // Step 3: Get transaction data that might have scheduled_change\n          await fetchTransactionLogs(user.uid);\n          \n          // Step 3a: Check the user document directly for a scheduled_change\n          const db = getFirestore();\n          \n          const userRef = doc(db, 'users', user.uid);\n          const userDoc = await getDoc(userRef);\n          \n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            \n            // Look for scheduled_change directly on the user document\n            if (userData.scheduled_change) {\n              setSubscription(prev => {\n                if (!prev) return prev;\n                return {\n                  ...prev,\n                  scheduled_change: userData.scheduled_change\n                };\n              });\n            }\n            \n            // Also check rawData if it exists\n            if (userData.rawData) {\n              let rawDataObj = userData.rawData;\n              if (typeof rawDataObj === 'string') {\n                try {\n                  rawDataObj = JSON.parse(rawDataObj);\n                } catch (e) {\n                  console.error('Failed to parse user rawData');\n                }\n              }\n              \n              if (rawDataObj?.scheduled_change) {\n                setSubscription(prev => {\n                  if (!prev) return prev;\n                  return {\n                    ...prev,\n                    scheduled_change: rawDataObj.scheduled_change\n                  };\n                });\n              }\n            }\n          }\n          \n          // Step 3b: Check subscriptions collection if we have a subscription ID\n          if (subscription?.subscriptionId) {\n            const subscriptionRef = doc(db, 'users', user.uid, 'subscriptions', subscription.subscriptionId);\n            const subscriptionDoc = await getDoc(subscriptionRef);\n            \n            if (subscriptionDoc.exists()) {\n              const subscriptionData = subscriptionDoc.data();\n              \n              // Direct check for scheduled_change\n              if (subscriptionData.scheduled_change) {\n                setSubscription(prev => {\n                  if (!prev) return prev;\n                  return {\n                    ...prev,\n                    scheduled_change: subscriptionData.scheduled_change\n                  };\n                });\n              }\n              \n              // Check in rawData\n              if (subscriptionData.rawData) {\n                let rawDataObj = subscriptionData.rawData;\n                if (typeof rawDataObj === 'string') {\n                  try {\n                    rawDataObj = JSON.parse(rawDataObj);\n                  } catch (e) {\n                    console.error('Failed to parse subscription rawData');\n                  }\n                }\n                \n                if (rawDataObj?.scheduled_change) {\n                  setSubscription(prev => {\n                    if (!prev) return prev;\n                    return {\n                      ...prev,\n                      scheduled_change: rawDataObj.scheduled_change\n                    };\n                  });\n                }\n              }\n            }\n          }\n          \n          // Step 3c: Directly query transactions with this user's ID to find scheduled changes\n          const transactionsRef = collection(db, 'users', user.uid, 'transactions');\n          const transactionsSnap = await getDocs(transactionsRef);\n          \n          // Process each transaction looking for scheduled_change\n          for (const doc of transactionsSnap.docs) {\n            const data = doc.data();\n            \n            // Check each potential location for scheduled_change data\n            let scheduled_change = null;\n            \n            // Check in rawData\n            if (data.rawData) {\n              let rawDataObj = data.rawData;\n              if (typeof rawDataObj === 'string') {\n                try {\n                  rawDataObj = JSON.parse(rawDataObj);\n                } catch (e) {\n                  console.error('Failed to parse rawData');\n                }\n              }\n              \n              if (rawDataObj?.scheduled_change) {\n                scheduled_change = rawDataObj.scheduled_change;\n              }\n            }\n            \n            // Check direct scheduled_change\n            if (data.scheduled_change) {\n              scheduled_change = data.scheduled_change;\n            }\n            \n            // If we found scheduled_change data, update subscription state\n            if (scheduled_change) {\n              setSubscription(prev => {\n                if (!prev) return prev;\n                return {\n                  ...prev,\n                  scheduled_change: scheduled_change\n                };\n              });\n              break; // Stop processing once we find valid data\n            }\n          }\n        } catch (error) {\n          console.error('Error loading subscription data:', error);\n        }\n      };\n      \n      // Execute the function\n      loadAllData();\n    }\n  }, [user, subscription?.subscriptionId]);\n  \n  // Remove the separate effects that were causing race conditions\n  // Instead, load all data in sequence in the single effect above\n\n  const extractScheduledChangeFromRawData = (data: any) => {\n    try {\n      console.log(\"Attempting to extract scheduled_change from raw data:\", data);\n      \n      // Handle the nested rawData structure from the example - might be a string or object\n      if (data.rawData) {\n        let rawDataObj = data.rawData;\n        if (typeof rawDataObj === 'string') {\n          try {\n            rawDataObj = JSON.parse(rawDataObj);\n          } catch (e) {\n            console.error('Failed to parse rawData string:', e);\n          }\n        }\n        \n        if (rawDataObj.scheduled_change) {\n          return rawDataObj.scheduled_change;\n        }\n      }\n      \n      // Handle direct scheduled_change property\n      if (data.scheduled_change) {\n        return data.scheduled_change;\n      }\n      \n      // Handle when data itself is the raw structure (like in the example)\n      if (data.status && data.action === 'cancel' && data.effective_at) {\n        return {\n          action: data.action,\n          effective_at: data.effective_at,\n          resume_at: data.resume_at\n        };\n      }\n      \n      return null;\n    } catch (error) {\n      console.error(\"Error extracting scheduled_change:\", error);\n      return null;\n    }\n  };\n\n  const syncRawDataToSubscription = (rawData: any) => {\n    try {\n      console.log(\"Attempting to sync raw data to subscription:\", rawData);\n      \n      if (!rawData) return;\n      \n      // Look for scheduled_change in various places\n      const scheduled_change = extractScheduledChangeFromRawData(rawData);\n      \n      if (scheduled_change) {\n        console.log(\"Found scheduled_change in raw data:\", scheduled_change);\n        \n        setSubscription(prev => {\n          const updatedSubscription = {\n            ...prev as SubscriptionState,\n            scheduled_change: scheduled_change\n          };\n          console.log('Updated subscription with raw data scheduled_change:', updatedSubscription);\n          return updatedSubscription;\n        });\n      }\n    } catch (error) {\n      console.error(\"Error syncing raw data:\", error);\n    }\n  };\n\n  // Add a button to test with the exact provided example structure\n  const testWithProvidedExample = () => {\n    const exampleData = {\n      amount: 1599,\n      billingCycle: {\n        frequency: 1,\n        interval: \"month\"\n      },\n      canceledAt: null,\n      createdAt: new Date(\"2025-04-21T07:06:00.951Z\"),\n      currency: \"USD\",\n      currentPeriod: {\n        end: new Date(\"2025-05-21T07:06:00.292545Z\"),\n        start: new Date(\"2025-04-21T07:06:00.292545Z\")\n      },\n      customData: {\n        userId: \"FE0qnQDim5Thj6wXey4oGdKN7hy1\"\n      },\n      customerId: \"ctm_01jrhz1tf0r5wx62mx6cby456r\",\n      nextBillDate: null,\n      pausedAt: null,\n      planId: \"pro_01jrcyajvbkf83y5ycbnr055hf\",\n      planName: \"monthlyPremium\",\n      priceId: \"pri_01jrcyb5gnfxn2s012n83a2gcf\",\n      rawData: {\n        address_id: \"add_01jsbjn5nr0mbc0kaxgmpmdagj\",\n        billing_cycle: {\n          frequency: 1,\n          interval: \"month\"\n        },\n        billing_details: null,\n        business_id: null,\n        canceled_at: null,\n        collection_mode: \"automatic\",\n        created_at: \"2025-04-21T07:06:00.951Z\",\n        currency_code: \"USD\",\n        current_billing_period: {\n          ends_at: \"2025-05-21T07:06:00.292545Z\",\n          starts_at: \"2025-04-21T07:06:00.292545Z\"\n        },\n        custom_data: {\n          userId: \"FE0qnQDim5Thj6wXey4oGdKN7hy1\"\n        },\n        customer_id: \"ctm_01jrhz1tf0r5wx62mx6cby456r\",\n        discount: null,\n        first_billed_at: \"2025-04-21T07:06:00.292545Z\",\n        id: \"sub_01jsbjp2vqp0ends3ytwb0paej\",\n        import_meta: null,\n        items: [\n          {\n            // Item details omitted for brevity\n          }\n        ],\n        next_billed_at: null,\n        paused_at: null,\n        scheduled_change: {\n          action: \"cancel\",\n          effective_at: \"2025-05-21T07:06:00.292545Z\",\n          resume_at: null\n        },\n        started_at: \"2025-04-21T07:06:00.292545Z\",\n        status: \"active\",\n        transaction_id: \"txn_01jsbjn4a16qagqf32vq4jzwwm\",\n        updated_at: \"2025-04-21T07:07:22.738Z\"\n      },\n      startDate: new Date(\"2025-04-21T07:06:00.292545Z\"),\n      status: \"active\",\n      subscriptionId: \"sub_01jsbjp2vqp0ends3ytwb0paej\",\n      updatedAt: new Date(\"2025-04-21T07:07:24.000Z\"),\n      userId: \"FE0qnQDim5Thj6wXey4oGdKN7hy1\"\n    };\n    \n    syncRawDataToSubscription(exampleData);\n    \n    // Also update the entire subscription object\n    setSubscription(prev => {\n      return {\n        ...prev as SubscriptionState,\n        hasActive: true,\n        status: \"active\",\n        subscriptionId: exampleData.subscriptionId\n      };\n    });\n  };\n\n  // Handle checkout success\n  const handleCheckoutSuccess = (subscriptionData: any) => {\n    console.log('Checkout completed successfully:', subscriptionData);\n    setCheckoutStatus('Subscription checkout completed! Updating your subscription status...');\n    \n    // Try to update subscription data immediately\n    if (user?.uid) {\n      // First attempt to update using the provided subscription data\n      if (subscriptionData?.subscriptionId && subscriptionData.subscriptionId !== 'pending') {\n        try {\n          const db = getFirestore();\n          const userRef = doc(db, 'users', user.uid);\n          setDoc(userRef, {\n            hasActiveSubscription: true,\n            lastTransactionDate: new Date(),\n            currentPlan: subscriptionData.planId || PADDLE_CONFIG.prices.standard.month,\n            subscriptionStatus: 'active',\n            currentSubscriptionId: subscriptionData.subscriptionId,\n            paddleCustomerId: subscriptionData.customerId,\n            lastUpdated: new Date()\n          }, { merge: true })\n            .then(() => {\n              console.log('Successfully updated user subscription from checkout data');\n              // Refresh subscription data\n              fetchSubscriptionStatus(user.uid);\n              fetchTransactionLogs(user.uid);\n            })\n            .catch(error => {\n              console.error('Error updating subscription from checkout data:', error);\n              // If direct update fails, try the manual update as a fallback\n              setTimeout(() => manualCheckSubscriptionStatus(), 2000);\n            });\n        } catch (error) {\n          console.error('Error in immediate subscription update:', error);\n          // If there's an error, try the manual update as a fallback\n          setTimeout(() => manualCheckSubscriptionStatus(), 2000);\n        }\n      } else {\n        // If we don't have subscription data yet, poll for updates or try manual update\n        console.log('No subscription ID received yet, polling for updates...');\n        // Wait a few seconds and then check for subscription updates\n        setTimeout(() => {\n          fetchSubscriptionStatus(user.uid);\n          fetchTransactionLogs(user.uid);\n          \n          // If still no active subscription after a short delay, offer manual update\n          setTimeout(() => {\n            if (!subscription?.hasActive) {\n              setCheckoutStatus('Checkout completed, but subscription status not updated automatically. You can try updating manually.');\n            }\n          }, 5000);\n        }, 3000);\n      }\n    }\n  };\n  \n  // Handle checkout error\n  const handleCheckoutError = (error: Error) => {\n    console.error('Error during checkout:', error);\n    setCheckoutStatus('There was an error processing your subscription. Please try again or contact support.');\n  };\n  \n  // Manually check and update subscription status\n  const manualCheckSubscriptionStatus = async () => {\n    if (!user) {\n      console.error('No logged in user');\n      return;\n    }\n    \n    try {\n      setCheckoutStatus('Manually checking subscription status...');\n      \n      // 1. First verify we can write to Firebase\n      const db = getFirestore();\n      const testRef = doc(db, 'users', user.uid, 'tests', 'manual-check');\n      await setDoc(testRef, {\n        timestamp: new Date(),\n        operation: 'manual-check'\n      });\n      \n      console.log('Firebase test write successful');\n      \n      // 2. Update user profile with a fake subscription for testing\n      const userRef = doc(db, 'users', user.uid);\n      await setDoc(userRef, {\n        hasActiveSubscription: true,\n        lastTransactionDate: new Date(),\n        currentPlan: PADDLE_CONFIG.prices.standard.month,  // Using the standard plan price ID\n        subscriptionStatus: 'active',\n        currentSubscriptionId: 'manual-' + new Date().getTime(),\n        paddleCustomerId: user.email,\n        lastUpdated: new Date()\n      }, { merge: true });\n      \n      console.log('Manually updated subscription status');\n      setCheckoutStatus('Subscription status manually updated. Refreshing data...');\n      \n      // 3. Now fetch the updated subscription data\n      await fetchSubscriptionStatus(user.uid);\n      \n      // 4. Clear status after a moment\n      setTimeout(() => {\n        setCheckoutStatus(null);\n      }, 3000);\n    } catch (error) {\n      console.error('Error in manual subscription update:', error);\n      setCheckoutStatus('Error updating subscription: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  };\n\n  const formatPrice = (amount: number | string, currency: string = 'USD') => {\n    // If it's already a string with formatting, return it\n    if (typeof amount === 'string' && amount.includes('.')) {\n      return amount;\n    }\n    \n    // Convert to number if it's a string\n    const numericAmount = typeof amount === 'string' ? parseInt(amount, 10) : amount;\n    \n    // Format with decimal places - assuming amount is in cents/lowest denomination\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(numericAmount / 100);\n  };\n\n  // Helper function to safely format dates from Firestore Timestamps or Date objects\n  const formatDate = (date: Date | FirestoreTimestamp | string | null | undefined): string => {\n    if (!date) return 'N/A';\n    \n    if (date instanceof Date) {\n      return date.toLocaleDateString();\n    }\n    \n    // Handle Firestore Timestamp\n    if (typeof date === 'object' && 'seconds' in date) {\n      return new Date(date.seconds * 1000).toLocaleDateString();\n    }\n    \n    // Handle ISO date strings\n    if (typeof date === 'string') {\n      return new Date(date).toLocaleDateString();\n    }\n    \n    return 'N/A';\n  };\n\n  const DashboardContent = () => {\n    const { theme } = useTheme();\n    \n    return (\n      <div className={`min-h-screen ${theme === 'dark' ? 'dark bg-slate-900' : 'bg-gradient-to-br from-slate-50 to-slate-100'}`}>\n        <Script \n          src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"\n          onLoad={() => {\n            if (typeof window !== 'undefined' && window.Paddle) {\n              try {\n                // Use sandbox in development mode\n                console.log('Setting Paddle environment to sandbox');\n                window.Paddle.Environment.set('sandbox');\n                \n                console.log('Setting up Paddle with token:', \n                  PADDLE_CONFIG.clientToken ? `${PADDLE_CONFIG.clientToken.substring(0, 5)}...` : 'missing');\n                \n                window.Paddle.Setup({ \n                  token: PADDLE_CONFIG.clientToken,\n                  eventCallback: handlePaddleEvent\n                });\n                \n                console.log('Paddle initialized successfully');\n                setPaddleLoaded(true);\n              } catch (error) {\n                console.error('Error initializing Paddle:', error);\n              }\n            } else {\n              console.error('Paddle not available on window object');\n            }\n          }}\n          onError={() => {\n            console.error('Failed to load Paddle script');\n          }}\n        />\n        \n        {/* Add PaddleCheckoutHandler to handle checkout completion */}\n        <PaddleCheckoutHandler \n          onSuccess={handleCheckoutSuccess}\n          onError={handleCheckoutError}\n        />\n        \n        {/* Modern Navigation Bar with Glass Effect */}\n        <nav className=\"bg-white/80 dark:bg-slate-800/80 backdrop-blur-md sticky top-0 z-30 border-b border-slate-200/80 dark:border-slate-700/80\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex justify-between items-center h-16\">\n              <div className=\"flex items-center space-x-3\">\n                <Image \n                  src=\"/paFire_logo.png\" \n                  alt=\"paFire Logo\" \n                  width={32} \n                  height={32} \n                />\n                <span className=\"text-xl font-semibold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent\">\n                  Dashboard\n                </span>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                {/* Settings Button */}\n                <button\n                  onClick={() => setIsSettingsOpen(true)}\n                  className=\"p-2 rounded-full text-slate-700 hover:text-slate-900 dark:text-slate-300 dark:hover:text-white hover:bg-slate-100 dark:hover:bg-slate-700/50 transition-colors\"\n                  aria-label=\"Settings\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n                <LogoutButton className=\"text-slate-700 hover:text-slate-900 dark:text-slate-300 dark:hover:text-white\" />\n              </div>\n            </div>\n          </div>\n        </nav>\n        \n        <main className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\n          {/* Display checkout status if any */}\n          {checkoutStatus && (\n            <div className=\"mb-4 bg-green-50 border border-green-300 dark:bg-green-900/20 dark:border-green-700/40 text-green-800 dark:text-green-200 px-4 py-3 rounded-lg\">\n              {checkoutStatus}\n            </div>\n          )}\n          \n          {/* Manual subscription update button - for troubleshooting only */}\n          {(!subscription || !subscription.hasActive) && (\n            <div className=\"mb-4 bg-blue-50 border border-blue-300 dark:bg-blue-900/20 dark:border-blue-700/40 text-blue-800 dark:text-blue-200 px-4 py-3 rounded-lg\">\n              <p className=\"mb-2\">If you've completed checkout but your subscription isn't showing:</p>\n              <button \n                onClick={manualCheckSubscriptionStatus}\n                className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md\"\n              >\n                Update Subscription Manually\n              </button>\n            </div>\n          )}\n          \n          {/* Debug Banner - Hidden in production */}\n          {false && subscription && (\n            <div className=\"mb-4 bg-gray-100 border border-gray-300 p-4 rounded-md\">\n              <h3 className=\"text-sm font-semibold mb-2\">Debug Info:</h3>\n              <div className=\"text-xs font-mono overflow-auto max-h-40\">\n                <p className=\"mb-1\"><strong>hasActive:</strong> {String(subscription?.hasActive)}</p>\n                <p className=\"mb-1\"><strong>status:</strong> {subscription?.status}</p>\n                <p className=\"mb-1\">\n                  <strong>scheduled_change:</strong> {subscription?.scheduled_change ? \n                    JSON.stringify(subscription?.scheduled_change, null, 2) : 'null'}\n                </p>\n                \n                {/* Explicit condition checks */}\n                <p className=\"mb-1\"><strong>Condition 1 - hasActive:</strong> {String(Boolean(subscription?.hasActive))}</p>\n                <p className=\"mb-1\"><strong>Condition 2 - has scheduled_change object:</strong> {String(Boolean(subscription?.scheduled_change))}</p>\n                <p className=\"mb-1\"><strong>Condition 3 - action is cancel:</strong> {String(Boolean(subscription?.scheduled_change?.action === \"cancel\"))}</p>\n                <p className=\"mb-1\"><strong>Condition 4 - has effective_at:</strong> {String(Boolean(subscription?.scheduled_change?.effective_at))}</p>\n                \n                <p className=\"mb-1 font-bold text-red-500\">\n                  <strong>ALL CONDITIONS MET:</strong> {String(\n                    Boolean(subscription?.hasActive && \n                    subscription?.scheduled_change && \n                    subscription?.scheduled_change?.action === \"cancel\" && \n                    subscription?.scheduled_change?.effective_at)\n                  )}\n                </p>\n                \n                {/* Add a test banner to check if banners are visible at all */}\n                <div className=\"mt-2 mb-1 p-2 bg-amber-50 border-l-4 border-amber-400 text-amber-800\">\n                  Test banner - if you can see this, banners are rendering correctly\n                </div>\n                \n                {subscription?.scheduled_change && (\n                  <>\n                    <p className=\"mb-1\"><strong>action:</strong> {subscription?.scheduled_change?.action}</p>\n                    <p className=\"mb-1\"><strong>effective_at:</strong> {subscription?.scheduled_change?.effective_at}</p>\n                  </>\n                )}\n                \n                <div className=\"mt-4 flex flex-wrap gap-2\">\n                  <button \n                    className=\"px-2 py-1 bg-blue-500 text-white text-xs rounded\"\n                    onClick={() => {\n                      if (user?.uid) {\n                        fetchSubscriptionStatus(user.uid);\n                        fetchTransactionLogs(user.uid);\n                        if (subscription?.subscriptionId) {\n                          fetchSubscriptionDetails(user.uid, subscription.subscriptionId);\n                        }\n                      }\n                    }}\n                  >\n                    Refresh Data\n                  </button>\n                  \n                  {/* Test button to manually set the example data */}\n                  <button \n                    className=\"px-2 py-1 bg-green-500 text-white text-xs rounded\"\n                    onClick={() => {\n                      // Manually inject the example data structure for testing\n                      setSubscription(prev => {\n                        const testData = {\n                          ...prev as SubscriptionState,\n                          hasActive: true,\n                          status: 'active',\n                          scheduled_change: {\n                            action: 'cancel',\n                            effective_at: '2025-05-21T07:06:00.292545Z',\n                            resume_at: null\n                          }\n                        };\n                        console.log('Manually set test data:', testData);\n                        return testData;\n                      });\n                    }}\n                  >\n                    Test With Example Data\n                  </button>\n                  \n                  {/* Test with the exact example provided */}\n                  <button \n                    className=\"px-2 py-1 bg-purple-500 text-white text-xs rounded\"\n                    onClick={testWithProvidedExample}\n                  >\n                    Test With Full Example\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* Clean banner component without debug logs */}\n          {(() => {\n            if(subscription && subscription.hasActive) {            \n              if(subscription.scheduled_change && \n                 subscription.scheduled_change.action === \"cancel\" && \n                 subscription.scheduled_change.effective_at) {\n                \n                // Return the banner component for scheduled cancel\n                return (\n                  <div className=\"mb-4 bg-amber-50 dark:bg-amber-900/20 border-l-4 border-amber-400 p-4 rounded-md shadow-sm\">\n                    <div className=\"flex items-center\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-amber-400 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <p className=\"text-sm text-amber-800 dark:text-amber-200\">\n                        This subscription is scheduled to be canceled on {subscription.scheduled_change?.effective_at ? formatDate(subscription.scheduled_change.effective_at) : 'soon'}.\n                      </p>\n                    </div>\n                  </div>\n                );\n              }\n              \n              // Backup check for cancellationEffectiveDate\n              if(subscription.cancellationEffectiveDate) {\n                return (\n                  <div className=\"mb-4 bg-amber-50 dark:bg-amber-900/20 border-l-4 border-amber-400 p-4 rounded-md shadow-sm\">\n                    <div className=\"flex items-center\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-amber-400 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <p className=\"text-sm text-amber-800 dark:text-amber-200\">\n                        This subscription is scheduled to be canceled on {formatDate(subscription.cancellationEffectiveDate)}.\n                      </p>\n                    </div>\n                  </div>\n                );\n              }\n            }\n            \n            // No banner needed\n            return null;\n          })()}\n          \n          {subscription && subscription.hasActive && (\n            <div className=\"mb-8 bg-gradient-to-r from-blue-500 to-indigo-600 dark:from-blue-600 dark:to-indigo-700 rounded-2xl shadow-md overflow-hidden\">\n              <div className=\"px-6 py-8 md:px-8 md:py-8 relative\">\n                <div className=\"absolute top-0 right-0 w-64 h-64 -translate-y-24 translate-x-24 rounded-full bg-white/10 opacity-50\" />\n                <div className=\"absolute bottom-0 left-0 w-48 h-48 translate-y-20 -translate-x-16 rounded-full bg-white/5 opacity-50\" />\n                \n                <div className=\"relative z-10 flex flex-col md:flex-row justify-between items-start md:items-center gap-6\">\n                  <div>\n                    <h1 className=\"text-2xl font-bold text-white mb-2\">\n                      Welcome, {user?.displayName || user?.email?.split('@')[0]}!\n                    </h1>\n                    <p className=\"text-blue-100 max-w-md\">\n                      Your subscription is active. \n                      Enjoy full access to all premium features.\n                    </p>\n                  </div>\n                  <div className=\"mt-6 pt-4 \">\n                    <a \n                      href={`${PADDLE_CONFIG.customerPortalLink}?customer_email=${encodeURIComponent(user?.email || '')}${subscription?.customerId ? `&customer_id=${encodeURIComponent(subscription.customerId)}` : ''}`} \n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"flex items-center justify-center w-full py-2 px-4 text-sm font-medium text-blue-600 hover:text-blue-800 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors \"\n                    >\n                      Manage Subscription\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {(!subscription || !subscription.hasActive) && (\n            <div className=\"mb-8 bg-gradient-to-r from-slate-700 to-slate-800 dark:from-slate-800 dark:to-slate-900 rounded-2xl shadow-md overflow-hidden\">\n              <div className=\"px-6 py-8 md:px-8 md:py-8 relative\">\n                <div className=\"absolute top-0 right-0 w-64 h-64 -translate-y-24 translate-x-24 rounded-full bg-white/10 opacity-20\" />\n                \n                <div className=\"relative z-10 flex flex-col md:flex-row items-start md:items-center justify-between gap-6\">\n                  <div>\n                    <h1 className=\"text-2xl font-bold text-white mb-2\">\n                      Welcome to Your Dashboard\n                    </h1>\n                    <p className=\"text-slate-300 max-w-md mb-4\">\n                      Unlock all premium features by subscribing to one of our plans below.\n                      Get started today and experience the full power of our platform.\n                    </p>\n                    <button\n                      onClick={() => {\n                        // Scroll to the subscription plans section\n                        document.getElementById('subscription-plans')?.scrollIntoView({ \n                          behavior: 'smooth',\n                          block: 'center'\n                        });\n                      }}\n                      className=\"px-6 py-2.5 bg-white text-slate-800 hover:bg-slate-100 dark:bg-slate-100 dark:hover:bg-white rounded-lg font-medium transition-colors\"\n                    >\n                      View Plans\n                    </button>\n                  </div>\n                  <div className=\"bg-white/10 backdrop-blur-sm p-5 rounded-xl hidden md:block\">\n                    <div className=\"flex items-center space-x-3 text-white mb-3\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-300\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <span>Access all premium features</span>\n                    </div>\n                    <div className=\"flex items-center space-x-3 text-white mb-3\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-300\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <span>Priority customer support</span>\n                    </div>\n                    <div className=\"flex items-center space-x-3 text-white\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-300\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <span>Cancel anytime</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Profile and Subscription Info Section */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"sticky top-24 space-y-6\">\n                <UserProfileCard user={user} />\n                \n                {/* Subscription Status Card */}\n                {subscription && (\n                  <div className=\"mt-6\">\n                    <div className=\"bg-white dark:bg-slate-800 rounded-lg shadow-sm border border-slate-200/80 dark:border-slate-700/50 p-5\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 dark:text-white mb-4\">Subscription Status</h3>\n                      \n                      {/* Current plan info */}\n                      <div className=\"mb-4 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-100 dark:border-blue-800/30\">\n                        <div className=\"flex justify-between items-center\">\n                          <div>\n                            <span className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">Current Plan</span>\n                            <h4 className=\"text-xl font-bold text-slate-900 dark:text-white\">\n                              {subscription.plan ? identifyPlan(subscription.plan)?.name || 'Standard Plan' : 'Free Plan'}\n                            </h4>\n                          </div>\n                          <div className={`px-3 py-1 rounded-full text-xs font-medium ${\n                            subscription.status === 'active' \n                              ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-200' \n                              : subscription.status === 'paused'\n                                ? 'bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-200'\n                                : subscription.status === 'canceled' \n                                  ? 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-200'\n                                  : 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-200'\n                          }`}>\n                            {subscription.status.charAt(0).toUpperCase() + subscription.status.slice(1)}\n                          </div>\n                        </div>\n                        \n                        <div className=\"mt-4\">\n                          {subscription.nextBillDate && (\n                            <div className=\"flex justify-between items-center mb-2\">\n                              <span className=\"text-sm text-slate-500 dark:text-slate-400\">Next Billing Date</span>\n                              <span className=\"font-medium text-slate-700 dark:text-slate-300\">\n                                {formatDate(subscription.nextBillDate)}\n                              </span>\n                            </div>\n                          )}\n                          \n                          {subscription.lastTransaction && (\n                            <div className=\"flex justify-between items-center mb-2\">\n                              <span className=\"text-sm text-slate-500 dark:text-slate-400\">Last Payment</span>\n                              <span className=\"font-medium text-slate-700 dark:text-slate-300\">\n                                {formatDate(subscription.lastTransaction)}\n                              </span>\n                            </div>\n                          )}\n                          \n                          {subscription.subscriptionId && (\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-slate-500 dark:text-slate-400\">Subscription ID</span>\n                              <span className=\"font-mono text-xs text-slate-600 dark:text-slate-400\">\n                                {subscription.subscriptionId.substring(0, 8)}...\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        \n                        {/* Display scheduled cancellation notice */}\n                        {subscription.scheduled_change && \n                          subscription.scheduled_change.action === 'cancel' && \n                          subscription.status === 'active' && (\n                          <div className=\"mt-4 bg-amber-50 border border-amber-100 dark:bg-amber-900/20 dark:border-amber-800/30 text-amber-800 dark:text-amber-200 px-4 py-3 rounded-lg\">\n                            <div className=\"flex items-start\">\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 mt-0.5 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                              </svg>\n                              <div>\n                                <p className=\"font-medium\">This subscription is scheduled to be canceled on {subscription.scheduled_change?.effective_at ? formatDate(subscription.scheduled_change.effective_at) : 'soon'}</p>\n                                <p className=\"text-sm mt-1\">Your access will continue until this date.</p>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                        \n                        {/* Display cancellation notice if already canceled */}\n                        {subscription.status === 'canceled' && (\n                          <div className=\"mt-4 bg-red-50 border border-red-100 dark:bg-red-900/20 dark:border-red-800/30 text-red-700 dark:text-red-200 px-4 py-3 rounded-lg\">\n                            <p className=\"text-sm\">\n                              Your subscription has been canceled\n                              {subscription.canceledAt \n                                ? ` on ${formatDate(subscription.canceledAt)}`\n                                : ''\n                              }.\n                            </p>\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* Portal access button */}\n                      <div className=\"mt-4\">\n                        <a \n                          href={`${PADDLE_CONFIG.customerPortalLink}?customer_email=${encodeURIComponent(user?.email || '')}${subscription?.customerId ? `&customer_id=${encodeURIComponent(subscription.customerId)}` : ''}`} \n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"flex items-center justify-center w-full py-2 px-4 text-sm font-medium text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 bg-blue-50 hover:bg-blue-100 dark:bg-blue-900/20 dark:hover:bg-blue-900/30 rounded-lg transition-colors\"\n                        >\n                          Manage Subscription\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Removed Subscription Plans Section */}\n              </div>\n            </div>\n\n            {/* Main Content Section */}\n            <div className=\"lg:col-span-2 space-y-8\">\n              {/* Subscription Details Card */}\n              {subscriptionDetails && (\n                <div className=\"bg-white dark:bg-slate-800 rounded-2xl shadow-sm border border-slate-200/80 dark:border-slate-700/50 p-6 overflow-hidden relative\">\n                  <div className=\"absolute top-0 right-0 w-48 h-48 -translate-y-12 translate-x-12\">\n                    <div className=\"w-full h-full rounded-full bg-gradient-to-br from-emerald-50 to-blue-50 dark:from-emerald-900/10 dark:to-blue-900/10 opacity-50\" />\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between mb-6 relative\">\n                    <h2 className=\"text-xl font-semibold text-slate-800 dark:text-white\">Subscription Details</h2>\n                    <span className={`px-3 py-1 rounded-full text-sm font-medium \n                      ${subscriptionDetails.status === 'active' \n                        ? 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-200' \n                        : 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-200'}`\n                    }>\n                      {subscriptionDetails.status ? subscriptionDetails.status.charAt(0).toUpperCase() + subscriptionDetails.status.slice(1) : 'Active'}\n                    </span>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 relative\">\n                    <div className=\"space-y-6\">\n                      <div>\n                        <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-1\">Plan</p>\n                        <div className=\"flex items-center\">\n                          <span className=\"text-lg font-medium text-slate-900 dark:text-white mr-2\">\n                            {subscriptionDetails.planName || \n                             subscriptionDetails.items?.[0]?.price?.product_name || \n                             identifyPlan(subscriptionDetails.planId)?.name || \n                             'Standard'}\n                          </span>\n                         \n                        </div>\n                      </div>\n                      \n                      {subscriptionDetails.priceAmount && (\n                        <div>\n                          <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-1\">Price</p>\n                          <p className=\"text-lg font-medium text-slate-900 dark:text-white\">\n                            {formatPrice(subscriptionDetails.priceAmount, subscriptionDetails.priceCurrency)}\n                          </p>\n                        </div>\n                      )}\n                      \n                      {subscriptionDetails.formattedPrice && (\n                        <div>\n                          <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-1\">Price</p>\n                          <p className=\"text-lg font-medium text-slate-900 dark:text-white\">\n                            {subscriptionDetails.formattedPrice}\n                          </p>\n                        </div>\n                      )}\n                      \n                      {!subscriptionDetails.priceAmount && !subscriptionDetails.formattedPrice && (subscriptionDetails.price || subscriptionDetails.items?.[0]?.price?.unit_price) && (\n                        <div>\n                          <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-1\">Price</p>\n                          <p className=\"text-lg font-medium text-slate-900 dark:text-white\">\n                            {subscriptionDetails.price \n                              ? (typeof subscriptionDetails.price === 'object' \n                                 ? formatPrice(subscriptionDetails.price.amount, subscriptionDetails.price.currency) \n                                 : formatPrice(subscriptionDetails.price, subscriptionDetails.priceCurrency || 'USD'))\n                              : formatPrice(subscriptionDetails.items[0].price.unit_price.amount, subscriptionDetails.items[0].price.unit_price.currency_code)\n                            }\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"space-y-6\">\n                      <div>\n                        <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-1\">Subscription Date</p>\n                        <p className=\"text-lg font-medium text-slate-900 dark:text-white\">\n                          {formatDate(subscriptionDetails.createdAt)}\n                        </p>\n                      </div>\n                      \n                      {subscriptionDetails.startedAt && (\n                        <div>\n                          <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-1\">Subscription Start</p>\n                          <p className=\"text-lg font-medium text-slate-900 dark:text-white\">\n                            {formatDate(subscriptionDetails.startedAt)}\n                          </p>\n                        </div>\n                      )}\n                      \n                      <div>\n                        <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-1\">Subscription ID</p>\n                        <p className=\"text-sm font-mono text-slate-600 dark:text-slate-400 break-all\">\n                          {subscriptionDetails.subscriptionId || subscriptionDetails.id}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Subscription Plans Section */}\n              <div id=\"subscription-plans\" className=\"bg-white dark:bg-slate-800 rounded-2xl shadow-sm border border-slate-200/80 dark:border-slate-700/50 p-6 relative overflow-hidden\">\n                <div className=\"absolute top-0 right-0 w-96 h-96 -translate-y-48 translate-x-48\">\n                  <div className=\"w-full h-full rounded-full bg-gradient-to-br from-violet-50 to-purple-50 dark:from-violet-900/10 dark:to-purple-900/10 opacity-50\" />\n                </div>\n\n                <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-8 relative\">\n                  <div>\n                    <h2 className=\"text-xl font-semibold text-slate-800 dark:text-white\">Subscription Plans</h2>\n                    <p className=\"text-slate-500 dark:text-slate-400 mt-1\">Choose the perfect plan for your needs</p>\n                  </div>\n                  <div className=\"flex p-1 bg-slate-100 dark:bg-slate-700 rounded-lg\">\n                    <button\n                      onClick={() => setBillingCycle('month')}\n                      className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                        billingCycle === 'month'\n                          ? 'bg-white dark:bg-slate-600 shadow-sm text-slate-800 dark:text-white'\n                          : 'text-slate-600 dark:text-slate-300 hover:text-slate-800 dark:hover:text-white'\n                      }`}\n                    >\n                      Monthly\n                    </button>\n                    <button\n                      onClick={() => setBillingCycle('year')}\n                      className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                        billingCycle === 'year'\n                          ? 'bg-white dark:bg-slate-600 shadow-sm text-slate-800 dark:text-white'\n                          : 'text-slate-600 dark:text-slate-300 hover:text-slate-800 dark:hover:text-white'\n                      }`}\n                    >\n                      Yearly <span className=\"text-green-400 text-xs ml-1\">Save 17%</span>\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 relative\">\n                  {/* Standard Plan */}\n                  <div className={`group relative border ${subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' ? 'border-blue-300 bg-blue-50/30 dark:bg-blue-900/20' : 'border-slate-200 dark:border-slate-700'} rounded-2xl p-6 hover:shadow-md hover:border-slate-300 dark:hover:border-slate-600 transition-all duration-300`}>\n                    {subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' && (\n                      <div className=\"absolute -top-3 right-6\">\n                        <span className=\"bg-blue-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow-sm\">\n                          Current Plan\n                        </span>\n                      </div>\n                    )}\n                    <div className=\"absolute inset-0 bg-gradient-to-br from-blue-50 to-slate-50 dark:from-blue-900/10 dark:to-slate-800/10 opacity-0 group-hover:opacity-100 transition-opacity rounded-2xl\" />\n                    \n                    <div className=\"relative\">\n                      <h3 className=\"text-xl font-semibold text-slate-800 dark:text-white mb-2\">Standard Plan</h3>\n                      <p className=\"text-slate-600 dark:text-slate-300 mb-4\">\n                        {billingCycle === 'month' \n                          ? 'Perfect for getting started' \n                          : 'Save more with yearly billing'}\n                      </p>\n                      <div className=\"mb-6\">\n                        <span className=\"text-3xl font-bold text-slate-900 dark:text-white\">\n                          {prices.standard || 'Loading...'}\n                        </span>\n                        <span className=\"text-slate-600 dark:text-slate-400\">/{billingCycle}</span>\n                      </div>\n                      \n                      {/* Feature list for Standard Plan */}\n                      <div className=\"mb-6 space-y-3\">\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\">Access to basic features</span>\n                        </div>\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\">5 projects</span>\n                        </div>\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\">Email support</span>\n                        </div>\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\">1GB storage</span>\n                        </div>\n                      </div>\n                      \n                      <button\n                        onClick={() => handleSubscription('standard')}\n                        disabled={Boolean(!paddleLoaded || (subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' && subscription?.status === 'active'))}\n                        className={`w-full py-3 px-4 rounded-xl transition-all ${\n                          !paddleLoaded \n                            ? 'bg-slate-200 dark:bg-slate-700 cursor-not-allowed text-slate-500 dark:text-slate-400'\n                            : subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' && subscription?.status === 'active'\n                              ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 cursor-not-allowed'\n                              : 'bg-blue-600 hover:bg-blue-700 text-white shadow-sm hover:shadow group-hover:shadow-md'\n                        }`}\n                      >\n                        {!paddleLoaded \n                          ? 'Loading...' \n                          : subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' && subscription?.status === 'active'\n                            ? 'Current Plan'\n                            : `Get Standard ${billingCycle === 'month' ? 'Monthly' : 'Yearly'}`\n                        }\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Premium Plan */}\n                  <div className={`group relative border-2 ${subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' ? 'border-violet-300 bg-violet-50/30 dark:bg-violet-900/20' : 'border-violet-200 dark:border-violet-700'} rounded-2xl p-6 hover:shadow-md hover:border-violet-300 dark:hover:border-violet-600 transition-all duration-300`}>\n                    {subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' ? (\n                      <div className=\"absolute -top-3 right-6\">\n                        <span className=\"bg-gradient-to-r from-violet-600 to-indigo-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow-sm\">\n                          Current Plan\n                        </span>\n                      </div>\n                    ) : (\n                      <div className=\"absolute -top-4 left-4\">\n                        <span className=\"bg-gradient-to-r from-violet-600 to-indigo-600 text-white px-4 py-1 rounded-full text-sm font-medium shadow-sm\">\n                          Popular\n                        </span>\n                      </div>\n                    )}\n                    \n                    <div className=\"absolute inset-0 bg-gradient-to-br from-violet-50 to-indigo-50 dark:from-violet-900/10 dark:to-indigo-900/10 opacity-50 group-hover:opacity-100 transition-opacity rounded-2xl\" />\n                    \n                    <div className=\"relative\">\n                      <h3 className=\"text-xl font-semibold text-slate-800 dark:text-white mb-2\">Premium Plan</h3>\n                      <p className=\"text-slate-600 dark:text-slate-300 mb-4\">\n                        {billingCycle === 'month' \n                          ? 'Access all premium features' \n                          : 'Best value for full access'}\n                      </p>\n                      <div className=\"mb-6\">\n                        <span className=\"text-3xl font-bold text-slate-900 dark:text-white\">\n                          {prices.premium || 'Loading...'}\n                        </span>\n                        <span className=\"text-slate-600 dark:text-slate-400\">/{billingCycle}</span>\n                      </div>\n                      \n                      {/* Feature list for Premium Plan */}\n                      <div className=\"mb-6 space-y-3\">\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-violet-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\"><strong>All Standard features</strong>, plus:</span>\n                        </div>\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-violet-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\">Unlimited projects</span>\n                        </div>\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-violet-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\">Priority support</span>\n                        </div>\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-violet-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\">10GB storage</span>\n                        </div>\n                        <div className=\"flex items-start\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-violet-500 mt-0.5 mr-3 flex-shrink-0\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-slate-700 dark:text-slate-300\">Advanced analytics</span>\n                        </div>\n                      </div>\n                      \n                      <button\n                        onClick={() => handleSubscription('premium')}\n                        disabled={Boolean(!paddleLoaded || (subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' && subscription?.status === 'active'))}\n                        className={`w-full py-3 px-4 rounded-xl transition-all ${\n                          !paddleLoaded \n                            ? 'bg-slate-200 dark:bg-slate-700 cursor-not-allowed text-slate-500 dark:text-slate-400'\n                            : subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' && subscription?.status === 'active'\n                              ? 'bg-violet-100 dark:bg-violet-900/30 text-violet-800 dark:text-violet-200 cursor-not-allowed'\n                              : 'bg-gradient-to-r from-violet-600 to-indigo-600 hover:from-violet-700 hover:to-indigo-700 text-white shadow-sm hover:shadow group-hover:shadow-md'\n                        }`}\n                      >\n                        {!paddleLoaded \n                          ? 'Loading...' \n                          : subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' && subscription?.status === 'active'\n                            ? 'Current Plan'\n                            : `Get Premium ${billingCycle === 'month' ? 'Monthly' : 'Yearly'}`\n                        }\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Recent Transactions */}\n              {transactions && transactions.length > 0 && (\n                <div className=\"bg-white dark:bg-slate-800 rounded-2xl shadow-sm border border-slate-200/80 dark:border-slate-700/50 p-6 overflow-hidden relative\">\n                  <div className=\"absolute top-0 right-0 w-48 h-48 -translate-y-12 translate-x-12\">\n                    <div className=\"w-full h-full rounded-full bg-gradient-to-br from-green-50 to-teal-50 dark:from-green-900/10 dark:to-teal-900/10 opacity-50\" />\n                  </div>\n                  \n                  <div className=\"relative\">\n                    <h2 className=\"text-xl font-semibold text-slate-800 dark:text-white mb-6\">Recent Transactions</h2>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {transactions.map(transaction => (\n                        <div key={transaction.id} className=\"bg-slate-50 dark:bg-slate-700/30 rounded-lg p-4 border border-slate-200 dark:border-slate-700\">\n                          <h4 className=\"text-md font-semibold text-slate-800 dark:text-white mb-2\">{transaction.product?.name || 'Transaction'}</h4>\n                          <div className=\"space-y-2\">\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-sm text-slate-500 dark:text-slate-400\">Status:</span>\n                              <span className={`text-sm font-medium ${\n                                transaction.paymentStatus === 'completed' || transaction.paymentStatus === 'paid'\n                                  ? 'text-green-600 dark:text-green-400'\n                                  : 'text-amber-600 dark:text-amber-400'\n                              }`}>\n                                {transaction.paymentStatus ? transaction.paymentStatus.charAt(0).toUpperCase() + transaction.paymentStatus.slice(1) : 'Pending'}\n                              </span>\n                            </div>\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-sm text-slate-500 dark:text-slate-400\">Amount:</span>\n                              <span className=\"text-sm font-medium text-slate-800 dark:text-slate-200\">\n                                {formatPrice(transaction.amountPaid || transaction.amount, transaction.currency || 'USD')}\n                              </span>\n                            </div>\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-sm text-slate-500 dark:text-slate-400\">Date:</span>\n                              <span className=\"text-sm text-slate-700 dark:text-slate-300\">\n                                {formatDate(transaction.timestamp)}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </main>\n        \n        {/* Settings Modal */}\n        <SettingsModal isOpen={isSettingsOpen} onClose={() => setIsSettingsOpen(false)} />\n      </div>\n    );\n  };\n\n  return (\n    <ThemeProvider>\n      <DashboardContent />\n    </ThemeProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}