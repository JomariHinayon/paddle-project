{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/newPaddle/src/lib/firebase.ts"],"sourcesContent":["\"use client\";\n\n// lib/firebase.ts\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFunctions, connectFunctionsEmulator } from \"firebase/functions\";\nimport { getAnalytics, isSupported } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: \"G-1R6HX54FVL\"\n};\n\n// Initialize Firebase\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApps()[0];\n\n// Authentication\nexport const auth = getAuth(app);\nauth.useDeviceLanguage(); // For better auth flows\n\n// Providers\nexport const googleProvider = new GoogleAuthProvider();\ngoogleProvider.addScope('profile');\ngoogleProvider.addScope('email');\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n}); // Better UX for Google Auth\n\nexport const emailProvider = new EmailAuthProvider();\n\n// Firestore Database\nexport const firestore = getFirestore(app);\n\n// Cloud Storage\nexport const storage = getStorage(app);\n\n// Cloud Functions\nexport const functions = getFunctions(app);\n\n// Analytics (only initialize in client-side)\nexport const analytics = typeof window !== 'undefined' && isSupported() ? getAnalytics(app) : null;\n\n// Performance Monitoring\nexport const performance = typeof window !== 'undefined' ? getPerformance(app) : null;\n\n// Emulator setup (for development)\nif (process.env.NODE_ENV === 'development') {\n  connectFunctionsEmulator(functions, 'localhost', 5001);\n  // Note: Auth emulator needs to be set up in your auth flows\n}\n\n// Utility function to get current user token\nexport const getCurrentUserToken = async (): Promise<string | null> => {\n  try {\n    const user = auth.currentUser;\n    if (!user) return null;\n    return await user.getIdToken();\n  } catch (error) {\n    console.error('Error getting user token:', error);\n    return null;\n  }\n};"],"names":[],"mappings":";;;;;;;;;;;AAaU;AAXV,kBAAkB;AAClB;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AATA;;;;;;;;AAWA,wCAAwC;AACxC,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,eAAe;AACjB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,IAAI,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AAG1E,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAC5B,KAAK,iBAAiB,IAAI,wBAAwB;AAG3C,MAAM,iBAAiB,IAAI,wNAAA,CAAA,qBAAkB;AACpD,eAAe,QAAQ,CAAC;AACxB,eAAe,QAAQ,CAAC;AACxB,eAAe,mBAAmB,CAAC;IACjC,QAAQ;AACV,IAAI,4BAA4B;AAEzB,MAAM,gBAAgB,IAAI,uNAAA,CAAA,oBAAiB;AAG3C,MAAM,YAAY,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AAG/B,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;AAG3B,MAAM,YAAY,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE;AAG/B,MAAM,YAAY,aAAkB,eAAe,CAAA,GAAA,6KAAA,CAAA,cAAW,AAAD,MAAM,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,OAAO;AAGvF,MAAM,cAAc,uCAAgC,CAAA,GAAA,+KAAA,CAAA,iBAAc,AAAD,EAAE;AAE1E,mCAAmC;AACnC,wCAA4C;IAC1C,CAAA,GAAA,6KAAA,CAAA,2BAAwB,AAAD,EAAE,WAAW,aAAa;AACjD,4DAA4D;AAC9D;AAGO,MAAM,sBAAsB;IACjC,IAAI;QACF,MAAM,OAAO,KAAK,WAAW;QAC7B,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,MAAM,KAAK,UAAU;IAC9B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/newPaddle/src/app/dashboard/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { auth, db } from '@/lib/firebase'\nimport {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  orderBy,\n  Timestamp,\n  addDoc,\n  where,\n} from 'firebase/firestore'\nimport { Loader2 } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Switch } from '@/components/ui/switch'\nimport { PADDLE_CONFIG } from '@/lib/constants'\nimport { identifyPlan } from '@/lib/utils'\nimport { PricePreview } from '@/components/dashboard/PricePreview'\nimport { toast } from 'sonner'\n\ntype Subscription = {\n  subscriptionId: string\n  customerId: string\n  status: string\n  planId: string\n  priceId: string\n  productId: string\n  productName: string\n  quantity: number\n  amountPaid: number\n  currency: string\n  nextBillDate: string | null\n  startDate: string\n  billingCycle: {\n    interval: string\n    frequency: number\n  }\n  canceledAt?: string\n  updatedAt: string\n  createdAt: string\n}\n\nexport default function Dashboard() {\n  const [user] = useAuthState(auth)\n  const [transactions, setTransactions] = useState<Subscription[]>([])\n  const [billingCycle, setBillingCycle] = useState<'month' | 'year'>('month')\n  const [loading, setLoading] = useState(true)\n  const [subscription, setSubscription] = useState<Subscription | null>(null)\n\n  useEffect(() => {\n    if (!user) return\n\n    fetchSubscription()\n    fetchTransactions()\n  }, [user])\n\n  const fetchSubscription = async () => {\n    try {\n      const docRef = doc(db, 'users', user!.uid)\n      const docSnap = await getDoc(docRef)\n\n      const data = docSnap.data()\n      if (!data?.currentSubscription) return\n\n      const sub = data.currentSubscription\n      setSubscription({\n        ...sub,\n        createdAt: sub.createdAt?.toDate().toISOString(),\n        updatedAt: sub.updatedAt?.toDate().toISOString(),\n      })\n    } catch (error) {\n      console.error('Error fetching subscription:', error)\n    }\n  }\n\n  const fetchTransactions = async () => {\n    try {\n      const ref = collection(db, 'users', user!.uid, 'transactions')\n      const q = query(ref, orderBy('createdAt', 'desc'))\n      const snapshot = await getDocs(q)\n\n      const txList = snapshot.docs.map((doc) => {\n        const data = doc.data()\n        return {\n          ...data,\n          createdAt: data.createdAt?.toDate().toISOString(),\n          updatedAt: data.updatedAt?.toDate().toISOString(),\n        } as Subscription\n      })\n\n      setTransactions(txList)\n    } catch (error) {\n      console.error('Error fetching transactions:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleCheckout = async (priceId: string) => {\n    if (!user?.email) return\n\n    // @ts-ignore\n    const Paddle = window.Paddle\n\n    Paddle?.Checkout.open({\n      settings: {\n        theme: 'light',\n        displayMode: 'overlay',\n      },\n      items: [\n        {\n          priceId,\n          quantity: 1,\n        },\n      ],\n      customer: {\n        email: user.email,\n      },\n      customData: {\n        userId: user.uid,\n      },\n      onCheckoutComplete: async (event: any) => {\n        try {\n          const { data } = event\n          const txRef = collection(db, 'users', user.uid, 'transactions')\n\n          // Check if transaction already exists\n          const existing = await getDocs(\n            query(txRef, where('subscriptionId', '==', data.subscription.id))\n          )\n          if (!existing.empty) {\n            toast.warning('Transaction already recorded.')\n            return\n          }\n\n          await addDoc(txRef, {\n            subscriptionId: data.subscription.id,\n            customerId: data.customer.id,\n            status: data.subscription.status,\n            planId: data.items[0].price.id,\n            priceId: data.items[0].price.id,\n            productId: data.items[0].product.id,\n            productName: data.items[0].product.name,\n            quantity: data.items[0].quantity,\n            amountPaid: data.items[0].amount,\n            currency: data.items[0].price.currency_code,\n            startDate: data.subscription.start_date,\n            nextBillDate: data.subscription.next_billed_at,\n            billingCycle: {\n              interval: data.items[0].price.billing_cycle?.interval,\n              frequency: data.items[0].price.billing_cycle?.frequency,\n            },\n            updatedAt: Timestamp.now(),\n            createdAt: Timestamp.now(),\n          })\n\n          await fetchSubscription()\n          await fetchTransactions()\n        } catch (error) {\n          console.error('Error saving transaction:', error)\n        }\n      },\n    })\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 py-10\">\n      <div className=\"flex items-center justify-between mb-8\">\n        <h1 className=\"text-3xl font-bold text-slate-900\">Dashboard</h1>\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-slate-700\">Yearly</span>\n          <Switch\n            checked={billingCycle === 'month'}\n            onCheckedChange={(checked) =>\n              setBillingCycle(checked ? 'month' : 'year')\n            }\n          />\n          <span className=\"text-sm text-slate-700\">Monthly</span>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-10\">\n        {PADDLE_CONFIG.products.all.map((product) => {\n          const isCurrent =\n            subscription?.planId === product[billingCycle].priceId\n\n          return (\n            <div\n              key={product.id}\n              className={`rounded-lg border p-4 shadow-sm ${\n                isCurrent ? 'border-emerald-500' : ''\n              }`}\n            >\n              <div className=\"text-lg font-semibold\">{product.name}</div>\n              <div className=\"text-sm text-gray-600\">{product.description}</div>\n              <PricePreview priceId={product[billingCycle].priceId} />\n              <Button\n                className=\"mt-4 w-full\"\n                disabled={isCurrent}\n                onClick={() => handleCheckout(product[billingCycle].priceId)}\n              >\n                {isCurrent ? 'Current Plan' : 'Subscribe'}\n              </Button>\n            </div>\n          )\n        })}\n      </div>\n\n      <div>\n        <h2 className=\"text-xl font-semibold mb-4\">Transactions</h2>\n\n        {loading ? (\n          <div className=\"flex items-center gap-2\">\n            <Loader2 className=\"w-5 h-5 animate-spin\" />\n            <span>Loading transactions...</span>\n          </div>\n        ) : (\n          <ul className=\"space-y-2\">\n            {transactions.map((tx, index) => (\n              <li key={index} className=\"border rounded p-4\">\n                <div className=\"font-medium\">{identifyPlan(tx.productName)}</div>\n                <div className=\"text-sm text-gray-600\">\n                  {tx.currency} {tx.amountPaid}\n                </div>\n                <div className=\"text-sm text-gray-600\">\n                  Start: {tx.startDate}\n                </div>\n                <div className=\"text-sm text-gray-600\">\n                  Next Bill: {tx.nextBillDate || 'N/A'}\n                </div>\n                <div className=\"text-sm text-gray-600\">\n                  Status: {tx.status}\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}