{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\nimport { auth } from '@/lib/firebase-admin';\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  const session = request.cookies.get('session')?.value || '';\r\n\r\n  // Verify the session\r\n  if (!session) {\r\n    return NextResponse.redirect(new URL('/login', request.url));\r\n  }\r\n\r\n  try {\r\n    const decodedClaims = await auth.verifySessionCookie(session, true);\r\n\r\n    // Check if email is verified for protected routes\r\n    if (!decodedClaims.email_verified && !request.nextUrl.pathname.startsWith('/confirm-signup')) {\r\n      return NextResponse.redirect(new URL('/confirm-signup', request.url));\r\n    }\r\n\r\n    return NextResponse.next();\r\n  } catch (error) {\r\n    return NextResponse.redirect(new URL('/login', request.url));\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  matcher: ['/dashboard/:path*', '/profile/:path*'], // Add your protected routes here\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,UAAU,QAAQ,OAAO,CAAC,GAAG,CAAC,YAAY,SAAS;IAEzD,qBAAqB;IACrB,IAAI,CAAC,SAAS;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,IAAI;QACF,MAAM,gBAAgB,MAAM,uIAAA,CAAA,OAAI,CAAC,mBAAmB,CAAC,SAAS;QAE9D,kDAAkD;QAClD,IAAI,CAAC,cAAc,cAAc,IAAI,CAAC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,oBAAoB;YAC5F,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,mBAAmB,QAAQ,GAAG;QACrE;QAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,EAAE,OAAO,OAAO;QACd,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAqB;KAAkB;AACnD"}}]
}