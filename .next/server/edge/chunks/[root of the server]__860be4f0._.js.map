{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nconst publicRoutes = ['/', '/login', '/signup', '/confirm-signup', '/auth/action', '/checkout', '/api/webhook/paddle'];\n\nexport async function middleware(request: NextRequest) {\n  const response = NextResponse.next();\n\n  // Add CSP headers with all required domains\n  const cspHeader = `\n    default-src 'self';\n    script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.paddle.com https://*.datadoghq-browser-agent.com https://*.googletagmanager.com https://core.spreedly.com https://global.localizecdn.com https://js.stripe.com https://*.google.com https://apis.google.com https://*.firebaseio.com https://*.googleapis.com;\n    style-src 'self' 'unsafe-inline' https://*.paddle.com;\n    frame-src 'self' https://*.paddle.com http://localhost:* https://sandbox-buy.paddle.com https://buy.paddle.com https://accounts.google.com https://*.firebaseapp.com https://*.firebase.com;\n    frame-ancestors 'self' http://localhost:* https://*.paddle.com;\n    img-src 'self' data: https: blob:;\n    font-src 'self' https://*.paddle.com;\n    connect-src 'self' https://*.paddle.com https://*.firebaseio.com https://*.googleapis.com https://*.google-analytics.com https://firebaselogging-pa.googleapis.com https://*.cloudfunctions.net https://*.firebase.com https://*.firebaseapp.com wss://*.firebaseio.com https://identitytoolkit.googleapis.com;\n  `.replace(/\\s{2,}/g, ' ').trim();\n\n  response.headers.set('Content-Security-Policy', cspHeader);\n  \n  // Remove COOP and COEP headers completely to allow popups to work properly\n  response.headers.delete('Cross-Origin-Opener-Policy');\n  response.headers.delete('Cross-Origin-Embedder-Policy');\n\n  const { pathname } = request.nextUrl;\n\n  // Allow public routes\n  if (publicRoutes.includes(pathname)) {\n    return response;\n  }\n\n  // Check for session token\n  const session = request.cookies.get('session')?.value;\n\n  if (!session) {\n    return NextResponse.redirect(new URL('/login', request.url));\n  }\n\n  try {\n    // Verify token with Firebase Auth\n    const verifyEndpoint = `https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${process.env.NEXT_PUBLIC_FIREBASE_API_KEY}`;\n    const response = await fetch(verifyEndpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ idToken: session })\n    });\n\n    const data = await response.json();\n    console.log('Firebase Auth Response:', { userId: data.users?.[0]?.localId });\n\n    // No user found or invalid token\n    if (!data.users?.[0]) {\n      throw new Error('Invalid session');\n    }\n\n    const user = data.users[0];\n    console.log('Authenticated User:', { \n      uid: user.localId,\n      email: user.email,\n      emailVerified: user.emailVerified,\n      path: pathname \n    });\n\n    // Redirect unverified users to email verification page\n    if (!user.emailVerified && pathname !== '/confirm-signup') {\n      return NextResponse.redirect(new URL('/confirm-signup', request.url));\n    }\n\n    // Allow access to dashboard routes for verified users\n    if (user.emailVerified && pathname.startsWith('/dashboard')) {\n      const requestHeaders = new Headers(request.headers);\n      requestHeaders.set('user', JSON.stringify(user));\n      \n      return NextResponse.next({\n        headers: requestHeaders,\n      });\n    }\n\n    return response;\n  } catch (error) {\n    // Clear invalid session and redirect to login\n    const redirectResponse = NextResponse.redirect(new URL('/login', request.url));\n    redirectResponse.cookies.delete('session');\n    return redirectResponse;\n  }\n}\n\nexport const config = {\n  matcher: [\n    // Protect all routes except static assets, API routes, and webhooks\n    '/((?!api|_next|static|webhook|.*\\\\.[^/]*$).*)',\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,MAAM,eAAe;IAAC;IAAK;IAAU;IAAW;IAAmB;IAAgB;IAAa;CAAsB;AAE/G,eAAe,WAAW,OAAoB;IACnD,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;IAElC,4CAA4C;IAC5C,MAAM,YAAY,CAAC;;;;;;;;;EASnB,CAAC,CAAC,OAAO,CAAC,WAAW,KAAK,IAAI;IAE9B,SAAS,OAAO,CAAC,GAAG,CAAC,2BAA2B;IAEhD,2EAA2E;IAC3E,SAAS,OAAO,CAAC,MAAM,CAAC;IACxB,SAAS,OAAO,CAAC,MAAM,CAAC;IAExB,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,sBAAsB;IACtB,IAAI,aAAa,QAAQ,CAAC,WAAW;QACnC,OAAO;IACT;IAEA,0BAA0B;IAC1B,MAAM,UAAU,QAAQ,OAAO,CAAC,GAAG,CAAC,YAAY;IAEhD,IAAI,CAAC,SAAS;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,IAAI;QACF,kCAAkC;QAClC,MAAM,iBAAiB,CAAC,8DAA8D,+EAA4C;QAClI,MAAM,WAAW,MAAM,MAAM,gBAAgB;YAC3C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE,SAAS;YAAQ;QAC1C;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,2BAA2B;YAAE,QAAQ,KAAK,KAAK,EAAE,CAAC,EAAE,EAAE;QAAQ;QAE1E,iCAAiC;QACjC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAE,EAAE;YACpB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,KAAK,KAAK,CAAC,EAAE;QAC1B,QAAQ,GAAG,CAAC,uBAAuB;YACjC,KAAK,KAAK,OAAO;YACjB,OAAO,KAAK,KAAK;YACjB,eAAe,KAAK,aAAa;YACjC,MAAM;QACR;QAEA,uDAAuD;QACvD,IAAI,CAAC,KAAK,aAAa,IAAI,aAAa,mBAAmB;YACzD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,mBAAmB,QAAQ,GAAG;QACrE;QAEA,sDAAsD;QACtD,IAAI,KAAK,aAAa,IAAI,SAAS,UAAU,CAAC,eAAe;YAC3D,MAAM,iBAAiB,IAAI,QAAQ,QAAQ,OAAO;YAClD,eAAe,GAAG,CAAC,QAAQ,KAAK,SAAS,CAAC;YAE1C,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;YACX;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,8CAA8C;QAC9C,MAAM,mBAAmB,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC5E,iBAAiB,OAAO,CAAC,MAAM,CAAC;QAChC,OAAO;IACT;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QACP,oEAAoE;QACpE;KACD;AACH"}}]
}