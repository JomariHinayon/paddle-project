{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/newPaddle/src/app/api/webhooks/paddle/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport crypto from 'crypto';\nimport admin from 'firebase-admin';\n\n// Get Firebase private key in the correct format\nconst getFirebasePrivateKey = () => {\n  const privateKey = process.env.FIREBASE_PRIVATE_KEY;\n  return privateKey ? privateKey.replace(/\\\\n/g, '\\n') : '';\n};\n\nif (!admin.apps.length) {\n  admin.initializeApp({\n    credential: admin.credential.cert({\n      projectId: process.env.FIREBASE_PROJECT_ID,\n      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n      privateKey: getFirebasePrivateKey(),\n    }),\n  });\n}\n\nconst db = admin.firestore();\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nconst verifyPaddleSignature = (rawBody: string, signature: string) => {\n  const publicKey = process.env.PADDLE_PUBLIC_KEY;\n  if (!publicKey) throw new Error('Paddle public key not configured');\n\n  const hash = crypto.createHmac('sha256', publicKey).update(rawBody).digest('hex');\n  return hash === signature;\n};\n\nexport async function POST(req: NextRequest) {\n  try {\n    const rawBody = await req.text();\n    const signature = req.headers.get('paddle-signature');\n\n    console.log('Incoming webhook payload:', rawBody);\n\n    if (!signature || !verifyPaddleSignature(rawBody, signature)) {\n      return NextResponse.json({ message: 'Invalid signature' }, { status: 401 });\n    }\n\n    const { event_type, data } = JSON.parse(rawBody);\n    const normalizedEvent = event_type.replace('.', '_');\n\n    switch (normalizedEvent) {\n      case 'subscription_created':\n        await handleSubscriptionTransaction(data);\n        break;\n      case 'subscription_updated':\n        await handleSubscriptionTransaction(data);\n        break;\n      case 'subscription_canceled':\n        await handleSubscriptionCancellation(data);\n        break;\n      case 'checkout_completed':\n        await handleCheckoutCompleted(data);\n        break;\n      default:\n        console.log(`Unhandled event type: ${event_type}`);\n    }\n\n    return NextResponse.json({ message: 'Webhook processed' });\n  } catch (error) {\n    console.error('Webhook Error:', error);\n    return NextResponse.json({ message: 'Webhook processing failed' }, { status: 400 });\n  }\n}\n\nasync function handleSubscriptionTransaction(data: any) {\n  const userId = data.custom_data?.userId;\n  const customerId = data.customer_id;\n  const subscriptionId = data.id;\n  const transactionId = data.transaction_id || subscriptionId;\n\n  if (!userId || !customerId || !subscriptionId) {\n    console.error('Missing required data');\n    return;\n  }\n\n  const item = data.items?.[0];\n  const billingCycle = data.billing_cycle || item?.price?.billing_cycle || {};\n\n  const transactionData = {\n    subscriptionId,\n    customerId,\n    transactionId,\n    status: data.status || 'active',\n    planId: item?.product?.id || '',\n    priceId: item?.price?.id || '',\n    productId: item?.product?.id || '',\n    productName: item?.product?.name || '',\n    quantity: item?.quantity || 1,\n    amountPaid: parseFloat(item?.price?.unit_price?.amount || '0'),\n    currency: item?.price?.unit_price?.currency_code || data.currency_code || 'USD',\n    nextBillDate: data.next_billed_at ? new Date(data.next_billed_at) : null,\n    startDate: data.started_at ? new Date(data.started_at) : null,\n    createdAt: data.created_at ? new Date(data.created_at) : null,\n    updatedAt: data.updated_at ? new Date(data.updated_at) : null,\n    billingCycle: {\n      interval: billingCycle.interval || 'month',\n      frequency: billingCycle.frequency || 1,\n    },\n    customData: data.custom_data || {},\n    customerEmail: data.billing_details?.email || '',\n    addressId: data.address_id || '',\n    discount: data.discount || null,\n    pausedAt: data.paused_at ? new Date(data.paused_at) : null,\n    canceledAt: data.canceled_at ? new Date(data.canceled_at) : null,\n    firstBilledAt: data.first_billed_at ? new Date(data.first_billed_at) : null,\n    currentBillingPeriod: {\n      startsAt: data.current_billing_period?.starts_at ? new Date(data.current_billing_period.starts_at) : null,\n      endsAt: data.current_billing_period?.ends_at ? new Date(data.current_billing_period.ends_at) : null,\n    },\n    collectionMode: data.collection_mode || 'automatic',\n    importMeta: data.import_meta || null,\n    scheduledChange: data.scheduled_change || null,\n  };\n\n  const transRef = db.collection('users').doc(userId).collection('transactions').doc(transactionId);\n  await transRef.set(transactionData, { merge: true });\n}\n\nasync function handleSubscriptionCancellation(data: any) {\n  const userId = data.custom_data?.userId;\n  const customerId = data.customer_id;\n  const subscriptionId = data.id;\n  const transactionId = data.transaction_id || subscriptionId;\n\n  if (!userId || !customerId || !subscriptionId) {\n    console.error('Missing required data');\n    return;\n  }\n\n  const transRef = db.collection('users').doc(userId).collection('transactions').doc(transactionId);\n  await transRef.set({\n    status: 'canceled',\n    canceledAt: admin.firestore.FieldValue.serverTimestamp(),\n    updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n  }, { merge: true });\n}\n\nasync function handleCheckoutCompleted(data: any) {\n  // This event happens when checkout is completed, but before subscription is created\n  const customerId = data.customer_id;\n  const transactionId = data.id || data.transaction_id;\n  const userId = data.custom_data?.userId;\n  const email = data.customer_email || data.custom_data?.email;\n  \n  if (!customerId || !transactionId) {\n    console.error('Missing required data in checkout_completed event');\n    return;\n  }\n  \n  // We won't store the full checkout data in Firebase anymore\n  // Instead, we'll just log the event and keep minimum reference data\n  // for potential matching when subscription.created webhook arrives\n  console.log('Checkout completed event received. Waiting for subscription.created event.');\n  \n  // Store minimal reference data in a temporary collection\n  // This will be used to match with subscription.created events\n  if (userId) {\n    // Create a temporary reference without saving the full transaction data\n    const tempRef = db.collection('pending_subscriptions').doc(transactionId);\n    await tempRef.set({\n      checkoutId: transactionId,\n      customerId,\n      userId,\n      created: admin.firestore.FieldValue.serverTimestamp(),\n      status: 'pending_subscription',\n      // Don't store complete checkout data, just the minimal info needed\n    });\n    \n    console.log(`Created temporary reference for checkout ${transactionId} for user ${userId}`);\n  } else {\n    console.log('No userId in checkout_completed event, cannot create temporary reference');\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}