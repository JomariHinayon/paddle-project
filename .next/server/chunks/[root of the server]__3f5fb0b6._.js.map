{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/lib/firebase.ts/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const analytics = registerClientReference(\n    function() { throw new Error(\"Attempted to call analytics() from the server but analytics is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"analytics\",\n);\nexport const auth = registerClientReference(\n    function() { throw new Error(\"Attempted to call auth() from the server but auth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"auth\",\n);\nexport const emailProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call emailProvider() from the server but emailProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"emailProvider\",\n);\nexport const firestore = registerClientReference(\n    function() { throw new Error(\"Attempted to call firestore() from the server but firestore is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"firestore\",\n);\nexport const functions = registerClientReference(\n    function() { throw new Error(\"Attempted to call functions() from the server but functions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"functions\",\n);\nexport const getCurrentUserToken = registerClientReference(\n    function() { throw new Error(\"Attempted to call getCurrentUserToken() from the server but getCurrentUserToken is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"getCurrentUserToken\",\n);\nexport const googleProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call googleProvider() from the server but googleProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"googleProvider\",\n);\nexport const performance = registerClientReference(\n    function() { throw new Error(\"Attempted to call performance() from the server but performance is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"performance\",\n);\nexport const storage = registerClientReference(\n    function() { throw new Error(\"Attempted to call storage() from the server but storage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts <module evaluation>\",\n    \"storage\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qDACA;AAEG,MAAM,OAAO,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qDACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qDACA;AAEG,MAAM,YAAY,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qDACA;AAEG,MAAM,YAAY,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qDACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qDACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qDACA;AAEG,MAAM,cAAc,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qDACA;AAEG,MAAM,UAAU,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,qDACA","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/lib/firebase.ts/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const analytics = registerClientReference(\n    function() { throw new Error(\"Attempted to call analytics() from the server but analytics is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"analytics\",\n);\nexport const auth = registerClientReference(\n    function() { throw new Error(\"Attempted to call auth() from the server but auth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"auth\",\n);\nexport const emailProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call emailProvider() from the server but emailProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"emailProvider\",\n);\nexport const firestore = registerClientReference(\n    function() { throw new Error(\"Attempted to call firestore() from the server but firestore is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"firestore\",\n);\nexport const functions = registerClientReference(\n    function() { throw new Error(\"Attempted to call functions() from the server but functions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"functions\",\n);\nexport const getCurrentUserToken = registerClientReference(\n    function() { throw new Error(\"Attempted to call getCurrentUserToken() from the server but getCurrentUserToken is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"getCurrentUserToken\",\n);\nexport const googleProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call googleProvider() from the server but googleProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"googleProvider\",\n);\nexport const performance = registerClientReference(\n    function() { throw new Error(\"Attempted to call performance() from the server but performance is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"performance\",\n);\nexport const storage = registerClientReference(\n    function() { throw new Error(\"Attempted to call storage() from the server but storage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebase.ts\",\n    \"storage\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iCACA;AAEG,MAAM,OAAO,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,iCACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iCACA;AAEG,MAAM,YAAY,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iCACA;AAEG,MAAM,YAAY,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iCACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iCACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,iCACA;AAEG,MAAM,cAAc,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,iCACA;AAEG,MAAM,UAAU,CAAA,GAAA,uPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,iCACA","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/app/api/webhooks/paddle/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { db } from '@/lib/firebase-admin';\nimport { getFirestore, collection, addDoc, doc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { firestore } from '@/lib/firebase';\n\nexport async function POST(req: Request) {\n  try {\n    const rawBody = await req.text();\n    const payload = JSON.parse(rawBody);\n    \n    try {\n      switch (payload.event_type) {\n        case 'checkout.completed':\n          // Store transaction data\n          await addDoc(collection(firestore, 'transactions'), {\n            userId: payload.data.custom_data?.userId || '',\n            paddleTransactionId: payload.data.order_id || '',\n            product: {\n              id: payload.data.items?.[0]?.price?.product_id || '',\n              name: payload.data.items?.[0]?.price?.description || ''\n            },\n            amountPaid: payload.data.details?.totals?.total || 0,\n            currency: payload.data.currency_code || '',\n            paymentStatus: payload.data.status || '',\n            customerEmail: payload.data.customer?.email || '',\n            timestamp: serverTimestamp()\n          });\n          \n          // Update user's subscription status\n          if (payload.data.custom_data?.userId) {\n            await setDoc(doc(firestore, 'users', payload.data.custom_data.userId), {\n              hasActiveSubscription: true,\n              lastTransactionDate: serverTimestamp(),\n              currentPlan: payload.data.items?.[0]?.price?.product_id || '',\n              subscriptionStatus: 'active'\n            }, { merge: true });\n          }\n          break;\n\n        case 'subscription.created':\n        case 'subscription.updated':\n          await setDoc(doc(firestore, 'subscriptions', payload.data.id), {\n            userId: payload.data.custom_data?.userId || '',\n            status: payload.data.status || '',\n            product: {\n              id: payload.data.items?.[0]?.price?.product_id || '',\n              name: payload.data.items?.[0]?.price?.description || ''\n            },\n            currentBillAmount: payload.data.items?.[0]?.price?.unit_price?.amount || 0,\n            currency: payload.data.items?.[0]?.price?.unit_price?.currency_code || '',\n            startDate: payload.data.start_date || null,\n            nextBillDate: payload.data.next_billed_at || null,\n            timestamp: serverTimestamp()\n          });\n          break;\n\n        case 'subscription.canceled':\n          await setDoc(doc(firestore, 'subscriptions', payload.data.id), {\n            status: 'canceled',\n            canceledAt: serverTimestamp(),\n            timestamp: serverTimestamp()\n          }, { merge: true });\n          break;\n\n        case 'transaction.completed':\n          await addDoc(collection(firestore, 'transactions'), {\n            userId: payload.data.custom_data?.userId || '',\n            paddleTransactionId: payload.data.id || '',\n            product: {\n              id: payload.data.items?.[0]?.price?.product_id || '',\n              name: payload.data.items?.[0]?.price?.description || ''\n            },\n            amountPaid: payload.data.details?.totals?.total || 0,\n            currency: payload.data.currency_code || '',\n            paymentStatus: payload.data.status || '',\n            customerEmail: payload.data.customer?.email || '',\n            timestamp: serverTimestamp()\n          });\n          \n          // Update user's subscription status\n          if (payload.data.custom_data?.userId) {\n            await setDoc(doc(firestore, 'users', payload.data.custom_data.userId), {\n              hasActiveSubscription: true,\n              lastTransactionDate: serverTimestamp(),\n              currentPlan: payload.data.items?.[0]?.price?.product_id || '',\n              subscriptionStatus: 'active'\n            }, { merge: true });\n          }\n          break;\n\n        default:\n          console.log('Unhandled webhook event:', payload.event_type);\n      }\n\n      return NextResponse.json({ success: true });\n    } catch (error) {\n      console.error('Error processing webhook:', error);\n      // Return 500 to tell Paddle to retry the webhook\n      return NextResponse.json({ error: 'Error processing webhook' }, { status: 500 });\n    }\n  } catch (error) {\n    console.error('Webhook parsing error:', error);\n    return NextResponse.json({ error: 'Invalid webhook payload' }, { status: 400 });\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}