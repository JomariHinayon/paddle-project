{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/newPaddle/src/pages/api/webhook/paddle.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport crypto from 'crypto';\nimport admin from 'firebase-admin';\nimport { buffer } from 'micro';\n\nif (!admin.apps.length) {\n  admin.initializeApp({\n    credential: admin.credential.applicationDefault(),\n  });\n}\n\nconst db = admin.firestore();\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nconst verifyPaddleSignature = (rawBody: string, signature: string) => {\n  const publicKey = process.env.PADDLE_PUBLIC_KEY;\n  if (!publicKey) throw new Error('Paddle public key not configured');\n\n  const hash = crypto\n    .createHmac('sha256', publicKey)\n    .update(rawBody)\n    .digest('hex');\n\n  return hash === signature;\n};\n\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n  if (req.method !== 'POST') return res.status(405).json({ message: 'Method not allowed' });\n\n  try {\n    const rawBody = (await buffer(req)).toString();\n    const signature = req.headers['paddle-signature'] as string;\n\n    // Log the full payload for debugging\n    console.log('Full webhook payload:', rawBody);\n\n    if (!signature || !verifyPaddleSignature(rawBody, signature)) {\n      return res.status(401).json({ message: 'Invalid signature' });\n    }\n\n    const payload = JSON.parse(rawBody);\n    const { event_type, data } = payload;\n\n    console.log('Paddle Webhook:', event_type, JSON.stringify(data, null, 2));\n\n    // Normalize event type (Paddle uses both formats in different contexts)\n    const normalizedEvent = event_type.replace('.', '_');\n\n    switch (normalizedEvent) {\n      case 'checkout_completed':\n        await handleCheckoutCompleted(data);\n        break;\n      case 'subscription_created':\n        await handleSubscriptionCreated(data);\n        break;\n      case 'subscription_updated':\n        await handleSubscriptionUpdated(data);\n        break;\n      case 'subscription_canceled':\n        await handleSubscriptionCanceled(data);\n        break;\n      default:\n        console.log(`Unhandled event type: ${event_type}`);\n    }\n\n    res.status(200).json({ message: 'Webhook processed' });\n  } catch (error) {\n    console.error('Webhook Error:', error);\n    res.status(400).json({ message: 'Webhook processing failed' });\n  }\n}\n\nasync function handleCheckoutCompleted(data: any) {\n  const userId = data.custom_data?.userId;\n\n  if (!userId) {\n    console.error('Missing userId in checkout data', data);\n    return;\n  }\n\n  const userRef = db.collection('users').doc(userId);\n  const batch = db.batch();\n\n  const paddleCustomerId = data.customer?.id || '';\n\n  // Set initial subscription data\n  batch.update(userRef, {\n    hasActiveSubscription: true,\n    subscriptionStatus: 'active',\n    lastCheckout: admin.firestore.FieldValue.serverTimestamp(),\n    updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n    paddleCustomerId, // Save customer ID for future reference\n  });\n\n  const transactionRef = userRef.collection('transactions').doc();\n  batch.set(transactionRef, {\n    userId,\n    paddleTransactionId: data.order_id || data.id || '',\n    subscriptionId: '', // Explicitly set to blank, will be updated in subscription.created\n    product: {\n      id: data.items?.[0]?.price_id || data.items?.[0]?.price?.product_id || '',\n      name: data.items?.[0]?.product?.name || data.items?.[0]?.price?.description || '',\n    },\n    amountPaid: data.totals?.total || data.total || 0,\n    currency: data.currency_code || data.currency || '',\n    paymentStatus: data.status || 'completed',\n    customerEmail: data.customer?.email || '',\n    customerId: paddleCustomerId, // Save customer ID in transaction\n    status: 'pending_subscription', // New status to indicate waiting for subscription\n    timestamp: admin.firestore.FieldValue.serverTimestamp(),\n    checkoutEventProcessed: true,\n  });\n\n  try {\n    await batch.commit();\n    console.log('Checkout saved for user:', userId, 'with customer ID:', paddleCustomerId);\n  } catch (error) {\n    console.error('Error saving checkout data:', error);\n  }\n}\n\nasync function handleSubscriptionCreated(data: any) {\n  const subscriptionId = data.id || data.subscription_id;\n  const customerId = data.customer?.id || data.customer_id;\n\n  console.log('ðŸ”” New subscription created:', {\n    subscriptionId,\n    customerId,\n    fullData: data\n  });\n\n  if (!customerId || !subscriptionId) {\n    console.error('Missing customer ID or subscription ID in subscription_created event', data);\n    return;\n  }\n\n  // Find user by customer ID\n  const usersSnapshot = await db\n    .collection('users')\n    .where('paddleCustomerId', '==', customerId)\n    .limit(1)\n    .get();\n\n  if (usersSnapshot.empty) {\n    console.error('No user found with Paddle customer ID:', customerId);\n    return;\n  }\n\n  const userId = usersSnapshot.docs[0].id;\n  const userRef = db.collection('users').doc(userId);\n\n  // Find the most recent transaction for this customer that's pending subscription\n  const transactionsSnapshot = await userRef\n    .collection('transactions')\n    .where('customerId', '==', customerId)\n    .where('status', '==', 'pending_subscription')\n    .orderBy('timestamp', 'desc')\n    .limit(1)\n    .get();\n\n  const batch = db.batch();\n\n  if (!transactionsSnapshot.empty) {\n    const transactionDoc = transactionsSnapshot.docs[0];\n    batch.update(transactionDoc.ref, {\n      subscriptionId: subscriptionId,\n      status: 'active',\n      updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n      subscriptionEventProcessed: true\n    });\n  } else {\n    console.warn('No pending transaction found for customer ID:', customerId);\n  }\n\n  // Update user subscription status\n  batch.update(userRef, {\n    hasActiveSubscription: true,\n    subscriptionStatus: 'active',\n    updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n    lastSubscriptionId: subscriptionId\n  });\n\n  try {\n    await batch.commit();\n    console.log('Successfully linked subscription', subscriptionId, 'to user:', userId);\n  } catch (error) {\n    console.error('Error updating subscription data:', error);\n  }\n}\n\n// Separate function for subscription updates\nasync function handleSubscriptionUpdated(data: any) {\n  const paddleCustomerId = data.customer?.id || data.customer_id;\n  const subscriptionId = data.subscription_id || data.id;\n  \n  if (!paddleCustomerId || !subscriptionId) {\n    console.error('Missing customer ID or subscription ID in data', data);\n    return;\n  }\n\n  const firebaseUid = await getFirebaseUid(paddleCustomerId);\n  if (!firebaseUid) {\n    console.error('No Firebase user found for Paddle customer ID:', paddleCustomerId);\n    return;\n  }\n\n  // Find transaction with this subscription ID\n  const transactionsSnapshot = await db\n    .collection('users')\n    .doc(firebaseUid)\n    .collection('transactions')\n    .where('subscriptionId', '==', subscriptionId)\n    .limit(1)\n    .get();\n\n  if (!transactionsSnapshot.empty) {\n    const transactionDoc = transactionsSnapshot.docs[0];\n    await transactionDoc.ref.update({\n      status: data.status || 'active',\n      portalUrl: data.portal_url || data.management_url || '',\n      nextBillDate: data.next_billing_date ? new Date(data.next_billing_date) : null,\n      updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n    });\n    console.log('Updated transaction for subscription:', subscriptionId);\n  } else {\n    console.log('No transaction found for subscription ID:', subscriptionId);\n  }\n\n  // Update main user document\n  await db.collection('users').doc(firebaseUid).update({\n    hasActiveSubscription: true,\n    subscriptionStatus: 'active',\n    updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n  });\n\n  console.log('Subscription updated for user:', firebaseUid);\n}\n\nasync function handleSubscriptionCanceled(data: any) {\n  const subscriptionId = data.subscription_id || data.id;\n  const paddleCustomerId = data.customer?.id || data.customer_id;\n  \n  if (!paddleCustomerId || !subscriptionId) {\n    console.error('Missing data in subscription cancellation', data);\n    return;\n  }\n  \n  const firebaseUid = await getFirebaseUid(paddleCustomerId);\n  if (!firebaseUid) {\n    console.error('No Firebase user found for Paddle customer ID:', paddleCustomerId);\n    return;\n  }\n\n  // Find the transaction with this subscription ID\n  const transactionsSnapshot = await db\n    .collection('users')\n    .doc(firebaseUid)\n    .collection('transactions')\n    .where('subscriptionId', '==', subscriptionId)\n    .limit(1)\n    .get();\n  \n  if (!transactionsSnapshot.empty) {\n    const transactionDoc = transactionsSnapshot.docs[0];\n    await transactionDoc.ref.update({\n      status: 'canceled',\n      canceledAt: admin.firestore.FieldValue.serverTimestamp(),\n      updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n    });\n  }\n\n  // Check if user has any other active subscriptions\n  const activeTransactionsSnapshot = await db\n    .collection('users')\n    .doc(firebaseUid)\n    .collection('transactions')\n    .where('status', '==', 'active')\n    .limit(1)\n    .get();\n\n  // Update user status if no active subscriptions remain\n  if (activeTransactionsSnapshot.empty) {\n    await db.collection('users').doc(firebaseUid).update({\n      hasActiveSubscription: false,\n      subscriptionStatus: 'canceled',\n      updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n    });\n  }\n\n  console.log('Subscription canceled for user:', firebaseUid);\n}\n\nasync function getFirebaseUid(paddleCustomerId: string): Promise<string | null> {\n  const snapshot = await db\n    .collection('users')\n    .where('paddleCustomerId', '==', paddleCustomerId)\n    .limit(1)\n    .get();\n\n  if (snapshot.empty) return null;\n  return snapshot.docs[0].id;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/newPaddle/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/newPaddle/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/newPaddle/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/newPaddle/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,mIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,mIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}