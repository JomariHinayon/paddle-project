{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/lib/firebase.ts"],"sourcesContent":["\"use client\";\n\n// lib/firebase.ts\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFunctions, connectFunctionsEmulator } from \"firebase/functions\";\nimport { getAnalytics, isSupported } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: \"G-1R6HX54FVL\"\n};\n\n// Initialize Firebase\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApps()[0];\n\n// Authentication\nexport const auth = getAuth(app);\nauth.useDeviceLanguage(); // For better auth flows\n\n// Providers\nexport const googleProvider = new GoogleAuthProvider();\ngoogleProvider.addScope('profile');\ngoogleProvider.addScope('email');\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n}); // Better UX for Google Auth\n\nexport const emailProvider = new EmailAuthProvider();\n\n// Firestore Database\nexport const firestore = getFirestore(app);\n\n// Cloud Storage\nexport const storage = getStorage(app);\n\n// Cloud Functions\nexport const functions = getFunctions(app);\n\n// Analytics (only initialize in client-side)\nexport const analytics = typeof window !== 'undefined' && isSupported() ? getAnalytics(app) : null;\n\n// Performance Monitoring\nexport const performance = typeof window !== 'undefined' ? getPerformance(app) : null;\n\n// Emulator setup (for development)\nif (process.env.NODE_ENV === 'development') {\n  connectFunctionsEmulator(functions, 'localhost', 5001);\n  // Note: Auth emulator needs to be set up in your auth flows\n}\n\n// Utility function to get current user token\nexport const getCurrentUserToken = async (): Promise<string | null> => {\n  try {\n    const user = auth.currentUser;\n    if (!user) return null;\n    return await user.getIdToken();\n  } catch (error) {\n    console.error('Error getting user token:', error);\n    return null;\n  }\n};"],"names":[],"mappings":";;;;;;;;;;;AAEA,kBAAkB;AAClB;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AATA;;;;;;;;AAWA,wCAAwC;AACxC,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,eAAe;AACjB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,IAAI,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AAG1E,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAC5B,KAAK,iBAAiB,IAAI,wBAAwB;AAG3C,MAAM,iBAAiB,IAAI,wNAAA,CAAA,qBAAkB;AACpD,eAAe,QAAQ,CAAC;AACxB,eAAe,QAAQ,CAAC;AACxB,eAAe,mBAAmB,CAAC;IACjC,QAAQ;AACV,IAAI,4BAA4B;AAEzB,MAAM,gBAAgB,IAAI,uNAAA,CAAA,oBAAiB;AAG3C,MAAM,YAAY,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AAG/B,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;AAG3B,MAAM,YAAY,CAAA,GAAA,0KAAA,CAAA,eAAY,AAAD,EAAE;AAG/B,MAAM,YAAY,gBAAkB,eAAe,CAAA,GAAA,0KAAA,CAAA,cAAW,AAAD,6CAA0B;AAGvF,MAAM,cAAc,6EAAsD;AAEjF,mCAAmC;AACnC,wCAA4C;IAC1C,CAAA,GAAA,0KAAA,CAAA,2BAAwB,AAAD,EAAE,WAAW,aAAa;AACjD,4DAA4D;AAC9D;AAGO,MAAM,sBAAsB;IACjC,IAAI;QACF,MAAM,OAAO,KAAK,WAAW;QAC7B,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,MAAM,KAAK,UAAU;IAC9B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/lib/session.ts"],"sourcesContent":["'use client';\n\nimport { auth } from './firebase';\n\nexport const setSession = async () => {\n  const user = auth.currentUser;\n  if (user) {\n    const idToken = await user.getIdToken();\n    \n    // Call the session API to create a proper session cookie\n    try {\n      const response = await fetch('/api/auth/session', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ idToken }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to set session');\n      }\n      \n      // The session cookie is now set by the API\n      return true;\n    } catch (error) {\n      console.error('Error setting session:', error);\n      return false;\n    }\n  }\n  return false;\n};\n\nexport const clearSession = async () => {\n  try {\n    // Call the logout API to revoke the session\n    await fetch('/api/auth/logout', {\n      method: 'POST',\n      credentials: 'include',\n    });\n    \n    // Clear local storage and session storage\n    localStorage.removeItem('user');\n    sessionStorage.clear();\n    \n    return true;\n  } catch (error) {\n    console.error('Error clearing session:', error);\n    \n    // Fallback to client-side cookie clearing if the API fails\n    document.cookie = 'session=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT; secure';\n    localStorage.removeItem('user');\n    sessionStorage.clear();\n    \n    return false;\n  }\n};\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAIO,MAAM,aAAa;IACxB,MAAM,OAAO,sHAAA,CAAA,OAAI,CAAC,WAAW;IAC7B,IAAI,MAAM;QACR,MAAM,UAAU,MAAM,KAAK,UAAU;QAErC,yDAAyD;QACzD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,qBAAqB;gBAChD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAQ;YACjC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,2CAA2C;YAC3C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO;QACT;IACF;IACA,OAAO;AACT;AAEO,MAAM,eAAe;IAC1B,IAAI;QACF,4CAA4C;QAC5C,MAAM,MAAM,oBAAoB;YAC9B,QAAQ;YACR,aAAa;QACf;QAEA,0CAA0C;QAC1C,aAAa,UAAU,CAAC;QACxB,eAAe,KAAK;QAEpB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QAEzC,2DAA2D;QAC3D,SAAS,MAAM,GAAG;QAClB,aAAa,UAAU,CAAC;QACxB,eAAe,KAAK;QAEpB,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/components/LogoutButton.tsx"],"sourcesContent":["'use client';\n\nimport { signOut } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { clearSession } from '@/lib/session';\nimport { useRouter } from 'next/navigation';\nimport { useState } from 'react';\n\ninterface LogoutButtonProps {\n  className?: string;\n}\n\nexport default function LogoutButton({ className = '' }: LogoutButtonProps) {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n\n  const handleLogout = async () => {\n    try {\n      setLoading(true);\n      await signOut(auth);\n      clearSession();\n      router.replace('/login');\n    } catch (error) {\n      console.error('Error signing out:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleLogout}\n      disabled={loading}\n      className={`flex items-center ${className}`}\n    >\n      {loading ? (\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-current\" />\n      ) : (\n        'Logout'\n      )}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAYe,SAAS,aAAa,EAAE,YAAY,EAAE,EAAqB;IACxE,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe;QACnB,IAAI;YACF,WAAW;YACX,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE,sHAAA,CAAA,OAAI;YAClB,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD;YACX,OAAO,OAAO,CAAC;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;QACtC,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QACC,SAAS;QACT,UAAU;QACV,WAAW,CAAC,kBAAkB,EAAE,WAAW;kBAE1C,wBACC,8OAAC;YAAI,WAAU;;;;;mBAEf;;;;;;AAIR","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/components/UserProfileCard.tsx"],"sourcesContent":["'use client';\n\nimport { User } from 'firebase/auth';\nimport Image from 'next/image';\n\ninterface UserProfileCardProps {\n  user: User | null;\n}\n\nexport default function UserProfileCard({ user }: UserProfileCardProps) {\n  const getProfileImage = () => {\n    if (user?.photoURL) {\n      // Handle Google photo URL\n      return (\n        <Image \n          src={user.photoURL}\n          alt={user.displayName || 'Profile'}\n          width={64}\n          height={64}\n          className=\"rounded-full\"\n          priority\n        />\n      );\n    }\n\n    return (\n      <div className=\"h-16 w-16 rounded-full bg-violet-100 flex items-center justify-center\">\n        <span className=\"text-2xl text-violet-600\">\n          {(user?.displayName?.[0] || user?.email?.[0] || '?').toUpperCase()}\n        </span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <div className=\"flex items-center space-x-4\">\n        {getProfileImage()}\n        <div>\n          <h2 className=\"text-xl font-semibold text-gray-800\">\n            {user?.displayName || user?.email?.split('@')[0] || 'User'}\n          </h2>\n          <p className=\"text-gray-500\">{user?.email}</p>\n        </div>\n      </div>\n      \n      <div className=\"mt-6 border-t pt-4\">\n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-sm text-gray-500\">Account Status</span>\n          <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800\">\n            Active\n          </span>\n        </div>\n        {/* <div className=\"flex justify-between items-center mt-2\">\n          <span className=\"text-sm text-gray-500\">Subscription</span>\n          <span className=\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800\">\n            Free Plan\n          </span>\n        </div> */}\n        <div className=\"flex justify-between items-center mt-2\">\n          <span className=\"text-sm text-gray-500\">Email Verified</span>\n          <span className={`px-2 py-1 text-xs rounded-full ${\n            user?.emailVerified \n              ? 'bg-green-100 text-green-800' \n              : 'bg-yellow-100 text-yellow-800'\n          }`}>\n            {user?.emailVerified ? 'Verified' : 'Pending'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AASe,SAAS,gBAAgB,EAAE,IAAI,EAAwB;IACpE,MAAM,kBAAkB;QACtB,IAAI,MAAM,UAAU;YAClB,0BAA0B;YAC1B,qBACE,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK,KAAK,QAAQ;gBAClB,KAAK,KAAK,WAAW,IAAI;gBACzB,OAAO;gBACP,QAAQ;gBACR,WAAU;gBACV,QAAQ;;;;;;QAGd;QAEA,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAK,WAAU;0BACb,CAAC,MAAM,aAAa,CAAC,EAAE,IAAI,MAAM,OAAO,CAAC,EAAE,IAAI,GAAG,EAAE,WAAW;;;;;;;;;;;IAIxE;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;oBACZ;kCACD,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CACX,MAAM,eAAe,MAAM,OAAO,MAAM,IAAI,CAAC,EAAE,IAAI;;;;;;0CAEtD,8OAAC;gCAAE,WAAU;0CAAiB,MAAM;;;;;;;;;;;;;;;;;;0BAIxC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,8OAAC;gCAAK,WAAU;0CAA6D;;;;;;;;;;;;kCAU/E,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,8OAAC;gCAAK,WAAW,CAAC,+BAA+B,EAC/C,MAAM,gBACF,gCACA,iCACJ;0CACC,MAAM,gBAAgB,aAAa;;;;;;;;;;;;;;;;;;;;;;;;AAMhD","debugId":null}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/lib/paddle-config.ts"],"sourcesContent":["export const PADDLE_CONFIG = {\n  clientToken: process.env.NEXT_PUBLIC_PADDLE_CLIENT_TOKEN || '',\n  sellerId: process.env.NEXT_PUBLIC_PADDLE_SELLER_ID || '',\n  prices: {\n    standard: {\n      month: 'pri_01jqpptmznh4vswj791kdk56q3',\n      year: 'pri_01jqppvckqd321w7vv04yadp72'\n    },\n    premium: {\n      month: 'pri_01jrcyb5gnfxn2s012n83a2gcf',\n      year: 'pri_01jrcyfgfqb3p51a7sfy2y5mav'\n    }\n  },\n  planDetails: {\n    standard: {\n      name: 'Standard Plan',\n      features: ['Core application features', 'Email support', 'Basic analytics']\n    },\n    premium: {\n      name: 'Premium Plan',\n      features: ['All Standard features', 'Priority support', 'Advanced analytics', 'Custom integrations', 'Team collaboration tools']\n    }\n  },\n  checkoutUrl: 'https://checkout.paddle.com/checkout',\n  customerPortalUrl: 'https://checkout.paddle.com/customer',\n  customerPortalLink: process.env.NEXT_PUBLIC_PADDLE_CUSTOMER_PORTAL_LINK || 'https://sandbox-customer-portal.paddle.com'\n};\n\nexport type PlanType = keyof typeof PADDLE_CONFIG.prices;\nexport type BillingCycle = keyof typeof PADDLE_CONFIG.prices.standard;\n\nexport const identifyPriceId = (priceId: string): { plan: PlanType; cycle: BillingCycle } | null => {\n  for (const [plan, cycles] of Object.entries(PADDLE_CONFIG.prices)) {\n    for (const [cycle, id] of Object.entries(cycles)) {\n      if (id === priceId) {\n        return { \n          plan: plan as PlanType, \n          cycle: cycle as BillingCycle \n        };\n      }\n    }\n  }\n  return null;\n};\n\nexport const getPlanDetails = (priceId: string) => {\n  const identified = identifyPriceId(priceId);\n  if (!identified) return null;\n  \n  return {\n    ...PADDLE_CONFIG.planDetails[identified.plan],\n    billingCycle: identified.cycle,\n    priceId\n  };\n};\n\nexport interface PaddleTransaction {\n  items?: Array<{\n    price?: {\n      id?: string;\n      product_id?: string;\n    }\n  }>;\n  status?: string;\n  total?: number;\n  currency_code?: string;\n}\n\nexport const getPlanFromTransaction = (transaction: PaddleTransaction) => {\n  const priceId = transaction.items?.[0]?.price?.id;\n  if (!priceId) return null;\n  \n  const planInfo = identifyPriceId(priceId);\n  if (!planInfo) return null;\n\n  return {\n    ...PADDLE_CONFIG.planDetails[planInfo.plan],\n    billingCycle: planInfo.cycle,\n    priceId,\n    amount: transaction.total,\n    currency: transaction.currency_code,\n    status: transaction.status\n  };\n};\n\nexport const matchTransactionPlan = (productId: string | undefined) => {\n  if (!productId) return null;\n  \n  // Flatten price IDs for lookup\n  const priceMap = Object.entries(PADDLE_CONFIG.prices).reduce((acc, [plan, cycles]) => {\n    Object.entries(cycles).forEach(([cycle, id]) => {\n      acc[id] = { plan: plan as PlanType, cycle: cycle as BillingCycle };\n    });\n    return acc;\n  }, {} as Record<string, { plan: PlanType; cycle: BillingCycle }>);\n  \n  return priceMap[productId] || null;\n};\n"],"names":[],"mappings":";;;;;;;AAAO,MAAM,gBAAgB;IAC3B,aAAa,wEAA+C;IAC5D,UAAU,6CAA4C;IACtD,QAAQ;QACN,UAAU;YACR,OAAO;YACP,MAAM;QACR;QACA,SAAS;YACP,OAAO;YACP,MAAM;QACR;IACF;IACA,aAAa;QACX,UAAU;YACR,MAAM;YACN,UAAU;gBAAC;gBAA6B;gBAAiB;aAAkB;QAC7E;QACA,SAAS;YACP,MAAM;YACN,UAAU;gBAAC;gBAAyB;gBAAoB;gBAAsB;gBAAuB;aAA2B;QAClI;IACF;IACA,aAAa;IACb,mBAAmB;IACnB,oBAAoB,iHAAuD;AAC7E;AAKO,MAAM,kBAAkB,CAAC;IAC9B,KAAK,MAAM,CAAC,MAAM,OAAO,IAAI,OAAO,OAAO,CAAC,cAAc,MAAM,EAAG;QACjE,KAAK,MAAM,CAAC,OAAO,GAAG,IAAI,OAAO,OAAO,CAAC,QAAS;YAChD,IAAI,OAAO,SAAS;gBAClB,OAAO;oBACL,MAAM;oBACN,OAAO;gBACT;YACF;QACF;IACF;IACA,OAAO;AACT;AAEO,MAAM,iBAAiB,CAAC;IAC7B,MAAM,aAAa,gBAAgB;IACnC,IAAI,CAAC,YAAY,OAAO;IAExB,OAAO;QACL,GAAG,cAAc,WAAW,CAAC,WAAW,IAAI,CAAC;QAC7C,cAAc,WAAW,KAAK;QAC9B;IACF;AACF;AAcO,MAAM,yBAAyB,CAAC;IACrC,MAAM,UAAU,YAAY,KAAK,EAAE,CAAC,EAAE,EAAE,OAAO;IAC/C,IAAI,CAAC,SAAS,OAAO;IAErB,MAAM,WAAW,gBAAgB;IACjC,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO;QACL,GAAG,cAAc,WAAW,CAAC,SAAS,IAAI,CAAC;QAC3C,cAAc,SAAS,KAAK;QAC5B;QACA,QAAQ,YAAY,KAAK;QACzB,UAAU,YAAY,aAAa;QACnC,QAAQ,YAAY,MAAM;IAC5B;AACF;AAEO,MAAM,uBAAuB,CAAC;IACnC,IAAI,CAAC,WAAW,OAAO;IAEvB,+BAA+B;IAC/B,MAAM,WAAW,OAAO,OAAO,CAAC,cAAc,MAAM,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,OAAO;QAC/E,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,OAAO,GAAG;YACzC,GAAG,CAAC,GAAG,GAAG;gBAAE,MAAM;gBAAkB,OAAO;YAAsB;QACnE;QACA,OAAO;IACT,GAAG,CAAC;IAEJ,OAAO,QAAQ,CAAC,UAAU,IAAI;AAChC","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/lib/paddle-utils.ts"],"sourcesContent":["import { PADDLE_CONFIG } from '@/lib/paddle-config';\n\ninterface TransactionData {\n  checkoutId: string;\n  transactionId: string;\n  status: string;\n  total: number;\n  currency: string;\n  items: Array<{\n    price: {\n      product_id: string;\n      description?: string;\n    };\n  }>;\n  paddleEventData: any;\n}\n\ninterface PlanInfo {\n  name: string;\n  tier: 'standard' | 'premium';\n  interval: 'month' | 'year';\n  description?: string;\n  features?: string[];\n}\n\n/**\n * Identifies a plan based on the planId from Paddle\n * \n * @param planId The Paddle plan ID to identify\n * @returns Information about the plan or null if not found\n */\nexport function identifyPlan(planId: string): PlanInfo | null {\n  // Check standard plans\n  if (planId === PADDLE_CONFIG.prices.standard.month) {\n    return {\n      name: 'Standard Monthly',\n      tier: 'standard',\n      interval: 'month',\n      description: 'Basic features with monthly billing',\n      features: PADDLE_CONFIG.planDetails.standard.features\n    };\n  }\n\n  if (planId === PADDLE_CONFIG.prices.standard.year) {\n    return {\n      name: 'Standard Yearly',\n      tier: 'standard',\n      interval: 'year',\n      description: 'Basic features with yearly billing (save 16%)',\n      features: PADDLE_CONFIG.planDetails.standard.features\n    };\n  }\n\n  // Check premium plans\n  if (planId === PADDLE_CONFIG.prices.premium.month) {\n    return {\n      name: 'Premium Monthly',\n      tier: 'premium',\n      interval: 'month',\n      description: 'Advanced features with monthly billing',\n      features: PADDLE_CONFIG.planDetails.premium.features\n    };\n  }\n\n  if (planId === PADDLE_CONFIG.prices.premium.year) {\n    return {\n      name: 'Premium Yearly',\n      tier: 'premium',\n      interval: 'year',\n      description: 'Advanced features with yearly billing (save 16%)',\n      features: PADDLE_CONFIG.planDetails.premium.features\n    };\n  }\n\n  return null;\n}\n\n/**\n * Formats a Paddle price amount for display\n * \n * @param amount The price amount in cents/smallest currency unit\n * @param currencyCode The currency code (default: USD)\n * @returns Formatted price string\n */\nexport function formatPrice(amount: number, currencyCode: string = 'USD'): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currencyCode,\n    minimumFractionDigits: 2\n  }).format(amount / 100);\n}\n\n/**\n * Creates a valid checkout URL for Paddle\n * \n * @param priceId The Paddle price ID to create checkout for\n * @param customerId Optional customer ID for existing customers\n * @param customerEmail Optional customer email for prefilling checkout\n * @returns Full checkout URL\n */\nexport function createCheckoutUrl(\n  priceId: string, \n  customerId?: string, \n  customerEmail?: string\n): string {\n  const baseUrl = PADDLE_CONFIG.checkoutUrl;\n  const queryParams = new URLSearchParams();\n  \n  // Add the price ID as an item\n  queryParams.append('items[0][priceId]', priceId);\n  queryParams.append('items[0][quantity]', '1');\n  \n  // Add customer ID if provided\n  if (customerId) {\n    queryParams.append('customer[id]', customerId);\n  }\n  \n  // Add customer email if provided\n  if (customerEmail) {\n    queryParams.append('customer[email]', customerEmail);\n  }\n  \n  // Add success and cancel URLs if needed\n  // queryParams.append('successUrl', window.location.origin + '/checkout/success');\n  // queryParams.append('cancelUrl', window.location.origin + '/checkout/cancel');\n  \n  return `${baseUrl}?${queryParams.toString()}`;\n}\n\nexport const getTransactionDetails = (transaction: TransactionData) => {\n  const productId = transaction.items?.[0]?.price?.product_id;\n  const plan = identifyPlan(productId);\n  \n  return {\n    ...plan,\n    amount: `${transaction.total} ${transaction.currency}`,\n    status: transaction.status,\n    checkoutId: transaction.checkoutId,\n    transactionId: transaction.transactionId,\n    rawProductId: productId,\n    purchaseDate: transaction.paddleEventData?.created_at,\n  };\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AA+BO,SAAS,aAAa,MAAc;IACzC,uBAAuB;IACvB,IAAI,WAAW,8HAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE;QAClD,OAAO;YACL,MAAM;YACN,MAAM;YACN,UAAU;YACV,aAAa;YACb,UAAU,8HAAA,CAAA,gBAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ;QACvD;IACF;IAEA,IAAI,WAAW,8HAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;QACjD,OAAO;YACL,MAAM;YACN,MAAM;YACN,UAAU;YACV,aAAa;YACb,UAAU,8HAAA,CAAA,gBAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ;QACvD;IACF;IAEA,sBAAsB;IACtB,IAAI,WAAW,8HAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;QACjD,OAAO;YACL,MAAM;YACN,MAAM;YACN,UAAU;YACV,aAAa;YACb,UAAU,8HAAA,CAAA,gBAAa,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ;QACtD;IACF;IAEA,IAAI,WAAW,8HAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;QAChD,OAAO;YACL,MAAM;YACN,MAAM;YACN,UAAU;YACV,aAAa;YACb,UAAU,8HAAA,CAAA,gBAAa,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ;QACtD;IACF;IAEA,OAAO;AACT;AASO,SAAS,YAAY,MAAc,EAAE,eAAuB,KAAK;IACtE,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;QACV,uBAAuB;IACzB,GAAG,MAAM,CAAC,SAAS;AACrB;AAUO,SAAS,kBACd,OAAe,EACf,UAAmB,EACnB,aAAsB;IAEtB,MAAM,UAAU,8HAAA,CAAA,gBAAa,CAAC,WAAW;IACzC,MAAM,cAAc,IAAI;IAExB,8BAA8B;IAC9B,YAAY,MAAM,CAAC,qBAAqB;IACxC,YAAY,MAAM,CAAC,sBAAsB;IAEzC,8BAA8B;IAC9B,IAAI,YAAY;QACd,YAAY,MAAM,CAAC,gBAAgB;IACrC;IAEA,iCAAiC;IACjC,IAAI,eAAe;QACjB,YAAY,MAAM,CAAC,mBAAmB;IACxC;IAEA,wCAAwC;IACxC,kFAAkF;IAClF,gFAAgF;IAEhF,OAAO,GAAG,QAAQ,CAAC,EAAE,YAAY,QAAQ,IAAI;AAC/C;AAEO,MAAM,wBAAwB,CAAC;IACpC,MAAM,YAAY,YAAY,KAAK,EAAE,CAAC,EAAE,EAAE,OAAO;IACjD,MAAM,OAAO,aAAa;IAE1B,OAAO;QACL,GAAG,IAAI;QACP,QAAQ,GAAG,YAAY,KAAK,CAAC,CAAC,EAAE,YAAY,QAAQ,EAAE;QACtD,QAAQ,YAAY,MAAM;QAC1B,YAAY,YAAY,UAAU;QAClC,eAAe,YAAY,aAAa;QACxC,cAAc;QACd,cAAc,YAAY,eAAe,EAAE;IAC7C;AACF","debugId":null}},
    {"offset": {"line": 700, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { auth } from '@/lib/firebase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport LogoutButton from '@/components/LogoutButton';\nimport UserProfileCard from '@/components/UserProfileCard';\nimport Script from 'next/script';\nimport { PADDLE_CONFIG, type PlanType, type BillingCycle } from '@/lib/paddle-config';\nimport { getFirestore, doc, setDoc, collection, addDoc, getDoc, getDocs, query, orderBy, limit, where } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { identifyPlan } from '@/lib/paddle-utils';\nimport Image from 'next/image';\n\ndeclare global {\n  interface Window {\n    Paddle: any;\n  }\n}\n\nexport default function Dashboard() {\n  const router = useRouter();\n  const [user, setUser] = useState(auth.currentUser);\n  const [paddleLoaded, setPaddleLoaded] = useState(false);\n  const [billingCycle, setBillingCycle] = useState<BillingCycle>('month');\n  const [prices, setPrices] = useState<{[key in PlanType]?: string}>({});\n  \n  // Add type definition for subscription state\n  interface SubscriptionState {\n    hasActive: boolean;\n    plan?: string | null;\n    status: string;\n    lastTransaction?: Date | null;\n    product?: any;\n    customerId?: string | null;\n    subscriptionId?: string | null;\n    nextBillDate?: Date | null;\n    canceledAt?: Date | null;\n    scheduled_change?: {\n      action?: string;\n      effective_at?: string;\n      resume_at?: string | null;\n    } | null;\n    cancellationEffectiveDate?: Date | null;\n  }\n  \n  const [subscription, setSubscription] = useState<SubscriptionState | null>(null);\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [subscriptionDetails, setSubscriptionDetails] = useState<any>(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (!user) {\n        router.replace('/login');\n        return;\n      }\n      setUser(user);\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  const updatePrices = async () => {\n    if (!paddleLoaded) {\n      console.error('Paddle is not loaded yet');\n      return;\n    }\n\n    try {\n      const request = {\n        items: [\n          {\n            quantity: 1,\n            priceId: PADDLE_CONFIG.prices.standard[billingCycle]\n          },\n          {\n            quantity: 1,\n            priceId: PADDLE_CONFIG.prices.premium[billingCycle]\n          }\n        ]\n      };\n\n      const result = await window.Paddle.PricePreview(request);\n      const newPrices: {[key in PlanType]?: string} = {};\n\n      result.data.details.lineItems.forEach((item: any) => {\n        if (item.price.id === PADDLE_CONFIG.prices.standard[billingCycle]) {\n          newPrices.standard = item.formattedTotals.subtotal;\n        } else if (item.price.id === PADDLE_CONFIG.prices.premium[billingCycle]) {\n          newPrices.premium = item.formattedTotals.subtotal;\n        }\n      });\n\n      setPrices(newPrices);\n    } catch (error) {\n      console.error('Error fetching prices:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (paddleLoaded) {\n      updatePrices();\n    }\n  }, [paddleLoaded, billingCycle]);\n\n  const handleSubscription = (plan: PlanType) => {\n    if (!paddleLoaded) {\n      console.error('Paddle is not loaded yet');\n      return;\n    }\n\n    window.Paddle.Checkout.open({\n      items: [{\n        priceId: PADDLE_CONFIG.prices[plan][billingCycle],\n        quantity: 1\n      }],\n      settings: {\n        displayMode: 'overlay',\n        theme: 'light',\n        variant: 'one-page'\n      },\n      customer: {\n        email: user?.email || '',\n      },\n      customData: {\n        userId: user?.uid || ''\n      }\n    });\n  };\n\n  const testFirebaseWrite = async () => {\n    try {\n      const auth = getAuth();\n      const user = auth.currentUser;\n      \n      if (!user) {\n        console.log('No user logged in');\n        return;\n      }\n\n      console.log('Current user UID:', user.uid);\n      \n      const db = getFirestore();\n      const testRef = doc(db, 'users', user.uid, 'tests', new Date().toISOString());\n      \n      await setDoc(testRef, {\n        timestamp: new Date(),\n        testData: 'Test write to Firebase',\n        userId: user.uid\n      });\n      \n      console.log('Test data written successfully');\n    } catch (error) {\n      console.error('Error writing test data:', error);\n    }\n  };\n\n  const handlePaddleEvent = async (event: any) => {\n    console.log('Paddle event:', event);\n\n    // Only process events that have a valid subscription ID - not just checkout completion\n    if (event.name === 'subscription.created' && user) {\n      try {\n        const db = getFirestore();\n        const transactionsRef = collection(db, 'users', user.uid, 'transactions');\n\n        console.log('Full Paddle subscription.created payload:', JSON.stringify(event, null, 2));\n\n        const item = event.data.items?.[0];\n        const subscriptionId = event.data.id;\n        \n        // Ensure we have a valid subscription ID\n        if (!subscriptionId) {\n          console.log('No valid subscription ID in event, not saving to Firebase');\n          return;\n        }\n        \n        const transactionData = {\n          userId: user.uid,\n          subscriptionId: subscriptionId,\n          product: {\n            id: item?.product?.id ?? '',\n            name: item?.product?.name ?? ''\n          },\n          amountPaid: item?.totals?.total ?? 0,\n          currency: item?.price?.unit_price?.currency_code ?? 'USD',\n          paymentStatus: event.data.status ?? 'active',\n          customerEmail: event.data.customer?.email ?? user.email ?? '',\n          customerId: event.data.customer?.id ?? '',\n          nextBillDate: event.data.next_billed_at ? new Date(event.data.next_billed_at) : null,\n          startDate: event.data.started_at ? new Date(event.data.started_at) : null,\n          quantity: item?.quantity ?? 1,\n          timestamp: new Date()\n        };\n\n        console.log('Subscription transaction data:', transactionData);\n\n        // Save transaction with the subscription ID as the document ID.\n        await setDoc(doc(transactionsRef, subscriptionId), transactionData);\n        console.log('Subscription saved to Firebase');\n\n        // Update user's subscription status\n        const userRef = doc(db, 'users', user.uid);\n        await setDoc(userRef, {\n          hasActiveSubscription: true,\n          lastTransactionDate: new Date(),\n          currentPlan: transactionData.product.id,\n          subscriptionStatus: 'active',\n          currentSubscriptionId: subscriptionId\n        }, { merge: true });\n      } catch (error) {\n        console.error('Error saving subscription data:', error);\n        console.error('Event data:', event);\n      }\n    } else if (event.name === 'checkout.completed') {\n      // Just log the checkout completion without saving to Firebase\n      console.log('Checkout completed. Waiting for subscription.created event.');\n    }\n  };\n\n  const fetchSubscriptionStatus = async (userId: string) => {\n    try {\n      const db = getFirestore();\n      const userRef = doc(db, 'users', userId);\n      const userDoc = await getDoc(userRef);\n      \n      if (userDoc.exists()) {\n        const userData = userDoc.data();\n        \n        const subscriptionData = {\n          hasActive: userData.hasActiveSubscription || false,\n          plan: userData.currentPlan || null,\n          status: userData.subscriptionStatus || 'inactive',\n          lastTransaction: userData.lastTransactionDate?.toDate() || null,\n          product: userData.product || null,\n          customerId: userData.paddleCustomerId || null,\n          subscriptionId: userData.currentSubscriptionId || null,\n          nextBillDate: userData.nextBillDate?.toDate() || null,\n          canceledAt: userData.subscriptionCanceledAt?.toDate() || null,\n          scheduled_change: userData.scheduled_change || null,\n          cancellationEffectiveDate: userData.cancellationEffectiveDate?.toDate() || null\n        };\n        \n        setSubscription(subscriptionData);\n      }\n    } catch (error) {\n      console.error('Error fetching subscription:', error);\n    }\n  };\n\n  const fetchTransactionLogs = async (userId: string) => {\n    try {\n      const db = getFirestore();\n      const transactionsRef = collection(db, 'users', userId, 'transactions');\n      // Order by timestamp in descending order and limit to 1\n      const q = query(transactionsRef, orderBy('timestamp', 'desc'), limit(1));\n      const transactionsSnap = await getDocs(q);\n      \n      const logs = transactionsSnap.docs.map(doc => {\n        const data = doc.data();\n        \n        // Check for rawData field which might contain the scheduled_change\n        if (data.rawData) {\n          // The rawData might be stored as a string in some cases\n          let rawDataObj = data.rawData;\n          if (typeof rawDataObj === 'string') {\n            try {\n              rawDataObj = JSON.parse(rawDataObj);\n            } catch (e) {\n              console.error('Failed to parse rawData string:', e);\n            }\n          }\n          \n          // Check for scheduled_change in rawData\n          if (rawDataObj.scheduled_change) {\n            // Update the subscription state with the scheduled change data\n            if (subscription && data.subscriptionId === subscription.subscriptionId) {\n              setSubscription(prev => {\n                const updatedSubscription = {\n                  ...prev as SubscriptionState,\n                  scheduled_change: rawDataObj.scheduled_change\n                };\n                return updatedSubscription;\n              });\n            }\n          }\n        }\n        \n        // Check if there's a direct scheduled_change\n        if (data.scheduled_change) {\n          // Update the subscription state with the scheduled change data\n          if (subscription && data.subscriptionId === subscription.subscriptionId) {\n            setSubscription(prev => {\n              const updatedSubscription = {\n                ...prev as SubscriptionState,\n                scheduled_change: data.scheduled_change\n              };\n              return updatedSubscription;\n            });\n          }\n        }\n        \n        return {\n          id: doc.id,\n          ...data,\n          planDetails: identifyPlan(data.product?.id)\n        };\n      });\n      \n      setTransactions(logs);\n\n      // Now, check subscription collections for the latest state\n      if (subscription?.subscriptionId) {\n        const subscriptionRef = doc(db, 'users', userId, 'subscriptions', subscription.subscriptionId);\n        const subscriptionDoc = await getDoc(subscriptionRef);\n        \n        if (subscriptionDoc.exists()) {\n          const subscriptionData = subscriptionDoc.data();\n          \n          // Check for rawData field in the subscription document\n          if (subscriptionData.rawData) {\n            let rawDataObj = subscriptionData.rawData;\n            if (typeof rawDataObj === 'string') {\n              try {\n                rawDataObj = JSON.parse(rawDataObj);\n              } catch (e) {\n                console.error('Failed to parse subscription rawData string:', e);\n              }\n            }\n            \n            if (rawDataObj.scheduled_change) {\n              setSubscription(prev => {\n                const updatedSubscription = {\n                  ...prev as SubscriptionState,\n                  scheduled_change: rawDataObj.scheduled_change\n                };\n                return updatedSubscription;\n              });\n            }\n          }\n          \n          // Update the subscription state with any cancellation data\n          if (subscriptionData.scheduled_change || subscriptionData.cancellationEffectiveDate) {\n            setSubscription(prev => {\n              const updatedSubscription = {\n                ...prev as SubscriptionState,\n                scheduled_change: subscriptionData.scheduled_change || prev?.scheduled_change,\n                cancellationEffectiveDate: subscriptionData.cancellationEffectiveDate?.toDate() || prev?.cancellationEffectiveDate\n              };\n              return updatedSubscription;\n            });\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n\n  const fetchSubscriptionDetails = async (userId: string, subscriptionId: string) => {\n    try {\n      const db = getFirestore();\n      \n      // Check in transactions collection\n      const transactionRef = doc(db, 'users', userId, 'transactions', subscriptionId);\n      const transactionDoc = await getDoc(transactionRef);\n      \n      if (transactionDoc.exists()) {\n        const data = transactionDoc.data();\n        console.log(\"Direct transaction data fetch:\", data);\n        \n        // If this transaction has rawData with scheduled_change, update subscription\n        if (data.rawData?.scheduled_change || data.scheduled_change) {\n          const scheduled_change = data.rawData?.scheduled_change || data.scheduled_change;\n          console.log(\"Found scheduled_change in transaction:\", scheduled_change);\n          \n          setSubscription(prev => {\n            const updatedSubscription = {\n              ...prev as SubscriptionState,\n              scheduled_change: scheduled_change\n            };\n            console.log('Updated subscription with direct scheduled_change:', updatedSubscription);\n            return updatedSubscription;\n          });\n          \n          return;\n        }\n      }\n      \n      // Also check subscriptions collection\n      const subscriptionRef = doc(db, 'users', userId, 'subscriptions', subscriptionId);\n      const subscriptionDoc = await getDoc(subscriptionRef);\n      \n      if (subscriptionDoc.exists()) {\n        const data = subscriptionDoc.data();\n        console.log(\"Direct subscription data fetch:\", data);\n        \n        if (data.scheduled_change || data.cancellationEffectiveDate) {\n          setSubscription(prev => {\n            const updatedSubscription = {\n              ...prev as SubscriptionState,\n              scheduled_change: data.scheduled_change || prev?.scheduled_change,\n              cancellationEffectiveDate: data.cancellationEffectiveDate?.toDate() || prev?.cancellationEffectiveDate\n            };\n            console.log('Updated subscription with direct subscription data:', updatedSubscription);\n            return updatedSubscription;\n          });\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching subscription details:\", error);\n    }\n  };\n\n  const fetchSubscriptionData = async (userId: string) => {\n    try {\n      const db = getFirestore();\n      \n      // If we have a subscription ID, fetch it directly\n      if (subscription?.subscriptionId) {\n        const subscriptionsRef = doc(db, 'users', userId, 'subscriptions', subscription.subscriptionId);\n        const subscriptionDoc = await getDoc(subscriptionsRef);\n        \n        if (subscriptionDoc.exists()) {\n          const data = subscriptionDoc.data();\n          \n          // Format price data if it exists in different formats\n          let formattedData: any = {\n            ...data,\n            id: subscriptionDoc.id\n          };\n          \n          // Check for different price formats and normalize them\n          if (data.items?.[0]?.price?.unit_price) {\n            formattedData.priceAmount = data.items[0].price.unit_price.amount;\n            formattedData.priceCurrency = data.items[0].price.unit_price.currency_code;\n          } else if (data.price) {\n            if (typeof data.price === 'object') {\n              formattedData.priceAmount = data.price.amount;\n              formattedData.priceCurrency = data.price.currency;\n            } else if (typeof data.price === 'string') {\n              formattedData.formattedPrice = data.price;\n            } else if (typeof data.price === 'number') {\n              formattedData.priceAmount = data.price;\n              formattedData.priceCurrency = data.currency || 'USD';\n            }\n          } else if (data.amount) {\n            formattedData.priceAmount = data.amount;\n            formattedData.priceCurrency = data.currency || 'USD';\n          }\n          \n          // Also check if there are specific billing details\n          if (data.billing_details || data.billingDetails) {\n            const billingDetails = data.billing_details || data.billingDetails;\n            if (billingDetails.amount || billingDetails.total) {\n              formattedData.priceAmount = billingDetails.amount || billingDetails.total;\n              formattedData.priceCurrency = billingDetails.currency || 'USD';\n            }\n          }\n          \n          setSubscriptionDetails(formattedData);\n          return;\n        }\n      }\n      \n      // If no specific subscription ID or it wasn't found, find the most recent active subscription\n      const subscriptionsRef = collection(db, 'users', userId, 'subscriptions');\n      const q = query(\n        subscriptionsRef,\n        where('status', '==', 'active'),\n        orderBy('createdAt', 'desc'),\n        limit(1)\n      );\n      \n      const subscriptionsSnap = await getDocs(q);\n      \n      if (!subscriptionsSnap.empty) {\n        const data = subscriptionsSnap.docs[0].data();\n        \n        // Format price data if it exists in different formats\n        let formattedData: any = {\n          ...data,\n          id: subscriptionsSnap.docs[0].id\n        };\n        \n        // Check for different price formats and normalize them\n        if (data.items?.[0]?.price?.unit_price) {\n          formattedData.priceAmount = data.items[0].price.unit_price.amount;\n          formattedData.priceCurrency = data.items[0].price.unit_price.currency_code;\n        } else if (data.price) {\n          if (typeof data.price === 'object') {\n            formattedData.priceAmount = data.price.amount;\n            formattedData.priceCurrency = data.price.currency;\n          } else if (typeof data.price === 'string') {\n            formattedData.formattedPrice = data.price;\n          } else if (typeof data.price === 'number') {\n            formattedData.priceAmount = data.price;\n            formattedData.priceCurrency = data.currency || 'USD';\n          }\n        } else if (data.amount) {\n          formattedData.priceAmount = data.amount;\n          formattedData.priceCurrency = data.currency || 'USD';\n        }\n        \n        // Also check if there are specific billing details\n        if (data.billing_details || data.billingDetails) {\n          const billingDetails = data.billing_details || data.billingDetails;\n          if (billingDetails.amount || billingDetails.total) {\n            formattedData.priceAmount = billingDetails.amount || billingDetails.total;\n            formattedData.priceCurrency = billingDetails.currency || 'USD';\n          }\n        }\n        \n        setSubscriptionDetails(formattedData);\n      }\n    } catch (error) {\n      console.error('Error fetching subscription data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (user?.uid) {\n      // Define an async function to load all data in sequence\n      const loadAllData = async () => {\n        try {\n          // Step 1: Get basic subscription info\n          await fetchSubscriptionStatus(user.uid);\n          \n          // Step 2: Get subscription data from the subscriptions collection\n          await fetchSubscriptionData(user.uid);\n          \n          // Step 3: Get transaction data that might have scheduled_change\n          await fetchTransactionLogs(user.uid);\n          \n          // Step 3a: Check the user document directly for a scheduled_change\n          const db = getFirestore();\n          \n          const userRef = doc(db, 'users', user.uid);\n          const userDoc = await getDoc(userRef);\n          \n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            \n            // Look for scheduled_change directly on the user document\n            if (userData.scheduled_change) {\n              setSubscription(prev => {\n                if (!prev) return prev;\n                return {\n                  ...prev,\n                  scheduled_change: userData.scheduled_change\n                };\n              });\n            }\n            \n            // Also check rawData if it exists\n            if (userData.rawData) {\n              let rawDataObj = userData.rawData;\n              if (typeof rawDataObj === 'string') {\n                try {\n                  rawDataObj = JSON.parse(rawDataObj);\n                } catch (e) {\n                  console.error('Failed to parse user rawData');\n                }\n              }\n              \n              if (rawDataObj?.scheduled_change) {\n                setSubscription(prev => {\n                  if (!prev) return prev;\n                  return {\n                    ...prev,\n                    scheduled_change: rawDataObj.scheduled_change\n                  };\n                });\n              }\n            }\n          }\n          \n          // Step 3b: Check subscriptions collection if we have a subscription ID\n          if (subscription?.subscriptionId) {\n            const subscriptionRef = doc(db, 'users', user.uid, 'subscriptions', subscription.subscriptionId);\n            const subscriptionDoc = await getDoc(subscriptionRef);\n            \n            if (subscriptionDoc.exists()) {\n              const subscriptionData = subscriptionDoc.data();\n              \n              // Direct check for scheduled_change\n              if (subscriptionData.scheduled_change) {\n                setSubscription(prev => {\n                  if (!prev) return prev;\n                  return {\n                    ...prev,\n                    scheduled_change: subscriptionData.scheduled_change\n                  };\n                });\n              }\n              \n              // Check in rawData\n              if (subscriptionData.rawData) {\n                let rawDataObj = subscriptionData.rawData;\n                if (typeof rawDataObj === 'string') {\n                  try {\n                    rawDataObj = JSON.parse(rawDataObj);\n                  } catch (e) {\n                    console.error('Failed to parse subscription rawData');\n                  }\n                }\n                \n                if (rawDataObj?.scheduled_change) {\n                  setSubscription(prev => {\n                    if (!prev) return prev;\n                    return {\n                      ...prev,\n                      scheduled_change: rawDataObj.scheduled_change\n                    };\n                  });\n                }\n              }\n            }\n          }\n          \n          // Step 3c: Directly query transactions with this user's ID to find scheduled changes\n          const transactionsRef = collection(db, 'users', user.uid, 'transactions');\n          const transactionsSnap = await getDocs(transactionsRef);\n          \n          // Process each transaction looking for scheduled_change\n          for (const doc of transactionsSnap.docs) {\n            const data = doc.data();\n            \n            // Check each potential location for scheduled_change data\n            let scheduled_change = null;\n            \n            // Check in rawData\n            if (data.rawData) {\n              let rawDataObj = data.rawData;\n              if (typeof rawDataObj === 'string') {\n                try {\n                  rawDataObj = JSON.parse(rawDataObj);\n                } catch (e) {\n                  console.error('Failed to parse rawData');\n                }\n              }\n              \n              if (rawDataObj?.scheduled_change) {\n                scheduled_change = rawDataObj.scheduled_change;\n              }\n            }\n            \n            // Check direct scheduled_change\n            if (data.scheduled_change) {\n              scheduled_change = data.scheduled_change;\n            }\n            \n            // If we found scheduled_change data, update subscription state\n            if (scheduled_change) {\n              setSubscription(prev => {\n                if (!prev) return prev;\n                return {\n                  ...prev,\n                  scheduled_change: scheduled_change\n                };\n              });\n              break; // Stop processing once we find valid data\n            }\n          }\n        } catch (error) {\n          console.error('Error loading subscription data:', error);\n        }\n      };\n      \n      // Execute the function\n      loadAllData();\n    }\n  }, [user, subscription?.subscriptionId]);\n  \n  // Remove the separate effects that were causing race conditions\n  // Instead, load all data in sequence in the single effect above\n\n  const extractScheduledChangeFromRawData = (data: any) => {\n    try {\n      console.log(\"Attempting to extract scheduled_change from raw data:\", data);\n      \n      // Handle the nested rawData structure from the example - might be a string or object\n      if (data.rawData) {\n        let rawDataObj = data.rawData;\n        if (typeof rawDataObj === 'string') {\n          try {\n            rawDataObj = JSON.parse(rawDataObj);\n          } catch (e) {\n            console.error('Failed to parse rawData string:', e);\n          }\n        }\n        \n        if (rawDataObj.scheduled_change) {\n          return rawDataObj.scheduled_change;\n        }\n      }\n      \n      // Handle direct scheduled_change property\n      if (data.scheduled_change) {\n        return data.scheduled_change;\n      }\n      \n      // Handle when data itself is the raw structure (like in the example)\n      if (data.status && data.action === 'cancel' && data.effective_at) {\n        return {\n          action: data.action,\n          effective_at: data.effective_at,\n          resume_at: data.resume_at\n        };\n      }\n      \n      return null;\n    } catch (error) {\n      console.error(\"Error extracting scheduled_change:\", error);\n      return null;\n    }\n  };\n\n  const syncRawDataToSubscription = (rawData: any) => {\n    try {\n      console.log(\"Attempting to sync raw data to subscription:\", rawData);\n      \n      if (!rawData) return;\n      \n      // Look for scheduled_change in various places\n      const scheduled_change = extractScheduledChangeFromRawData(rawData);\n      \n      if (scheduled_change) {\n        console.log(\"Found scheduled_change in raw data:\", scheduled_change);\n        \n        setSubscription(prev => {\n          const updatedSubscription = {\n            ...prev as SubscriptionState,\n            scheduled_change: scheduled_change\n          };\n          console.log('Updated subscription with raw data scheduled_change:', updatedSubscription);\n          return updatedSubscription;\n        });\n      }\n    } catch (error) {\n      console.error(\"Error syncing raw data:\", error);\n    }\n  };\n\n  // Add a button to test with the exact provided example structure\n  const testWithProvidedExample = () => {\n    const exampleData = {\n      amount: 1599,\n      billingCycle: {\n        frequency: 1,\n        interval: \"month\"\n      },\n      canceledAt: null,\n      createdAt: new Date(\"2025-04-21T07:06:00.951Z\"),\n      currency: \"USD\",\n      currentPeriod: {\n        end: new Date(\"2025-05-21T07:06:00.292545Z\"),\n        start: new Date(\"2025-04-21T07:06:00.292545Z\")\n      },\n      customData: {\n        userId: \"FE0qnQDim5Thj6wXey4oGdKN7hy1\"\n      },\n      customerId: \"ctm_01jrhz1tf0r5wx62mx6cby456r\",\n      nextBillDate: null,\n      pausedAt: null,\n      planId: \"pro_01jrcyajvbkf83y5ycbnr055hf\",\n      planName: \"monthlyPremium\",\n      priceId: \"pri_01jrcyb5gnfxn2s012n83a2gcf\",\n      rawData: {\n        address_id: \"add_01jsbjn5nr0mbc0kaxgmpmdagj\",\n        billing_cycle: {\n          frequency: 1,\n          interval: \"month\"\n        },\n        billing_details: null,\n        business_id: null,\n        canceled_at: null,\n        collection_mode: \"automatic\",\n        created_at: \"2025-04-21T07:06:00.951Z\",\n        currency_code: \"USD\",\n        current_billing_period: {\n          ends_at: \"2025-05-21T07:06:00.292545Z\",\n          starts_at: \"2025-04-21T07:06:00.292545Z\"\n        },\n        custom_data: {\n          userId: \"FE0qnQDim5Thj6wXey4oGdKN7hy1\"\n        },\n        customer_id: \"ctm_01jrhz1tf0r5wx62mx6cby456r\",\n        discount: null,\n        first_billed_at: \"2025-04-21T07:06:00.292545Z\",\n        id: \"sub_01jsbjp2vqp0ends3ytwb0paej\",\n        import_meta: null,\n        items: [\n          {\n            // Item details omitted for brevity\n          }\n        ],\n        next_billed_at: null,\n        paused_at: null,\n        scheduled_change: {\n          action: \"cancel\",\n          effective_at: \"2025-05-21T07:06:00.292545Z\",\n          resume_at: null\n        },\n        started_at: \"2025-04-21T07:06:00.292545Z\",\n        status: \"active\",\n        transaction_id: \"txn_01jsbjn4a16qagqf32vq4jzwwm\",\n        updated_at: \"2025-04-21T07:07:22.738Z\"\n      },\n      startDate: new Date(\"2025-04-21T07:06:00.292545Z\"),\n      status: \"active\",\n      subscriptionId: \"sub_01jsbjp2vqp0ends3ytwb0paej\",\n      updatedAt: new Date(\"2025-04-21T07:07:24.000Z\"),\n      userId: \"FE0qnQDim5Thj6wXey4oGdKN7hy1\"\n    };\n    \n    syncRawDataToSubscription(exampleData);\n    \n    // Also update the entire subscription object\n    setSubscription(prev => {\n      return {\n        ...prev as SubscriptionState,\n        hasActive: true,\n        status: \"active\",\n        subscriptionId: exampleData.subscriptionId\n      };\n    });\n  };\n\n  const formatPrice = (amount: number | string, currency: string = 'USD') => {\n    // If it's already a string with formatting, return it\n    if (typeof amount === 'string' && amount.includes('.')) {\n      return amount;\n    }\n    \n    // Convert to number if it's a string\n    const numericAmount = typeof amount === 'string' ? parseInt(amount, 10) : amount;\n    \n    // Format with decimal places - assuming amount is in cents/lowest denomination\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(numericAmount / 100);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100\">\n      <Script \n        src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"\n        onLoad={() => {\n          if (typeof window !== 'undefined' && window.Paddle) {\n            window.Paddle.Environment.set('sandbox');\n            window.Paddle.Setup({ \n              token: PADDLE_CONFIG.clientToken,\n              eventCallback: handlePaddleEvent\n            });\n            setPaddleLoaded(true);\n          }\n        }}\n      />\n      \n      {/* Modern Navigation Bar with Glass Effect */}\n      <nav className=\"bg-white/80 backdrop-blur-md sticky top-0 z-30 border-b border-slate-200/80\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <Image \n                src=\"/paFire_logo.png\" \n                alt=\"paFire Logo\" \n                width={32} \n                height={32} \n              />\n              <span className=\"text-xl font-semibold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent\">\n                Dashboard\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <LogoutButton className=\"text-slate-700 hover:text-slate-900\" />\n            </div>\n          </div>\n        </div>\n      </nav>\n      \n      <main className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\n        {/* Debug Banner - Hidden in production */}\n        {false && subscription && (\n          <div className=\"mb-4 bg-gray-100 border border-gray-300 p-4 rounded-md\">\n            <h3 className=\"text-sm font-semibold mb-2\">Debug Info:</h3>\n            <div className=\"text-xs font-mono overflow-auto max-h-40\">\n              <p className=\"mb-1\"><strong>hasActive:</strong> {String(subscription.hasActive)}</p>\n              <p className=\"mb-1\"><strong>status:</strong> {subscription.status}</p>\n              <p className=\"mb-1\">\n                <strong>scheduled_change:</strong> {subscription.scheduled_change ? \n                  JSON.stringify(subscription.scheduled_change, null, 2) : 'null'}\n              </p>\n              \n              {/* Explicit condition checks */}\n              <p className=\"mb-1\"><strong>Condition 1 - hasActive:</strong> {String(Boolean(subscription.hasActive))}</p>\n              <p className=\"mb-1\"><strong>Condition 2 - has scheduled_change object:</strong> {String(Boolean(subscription.scheduled_change))}</p>\n              <p className=\"mb-1\"><strong>Condition 3 - action is cancel:</strong> {String(Boolean(subscription.scheduled_change?.action === \"cancel\"))}</p>\n              <p className=\"mb-1\"><strong>Condition 4 - has effective_at:</strong> {String(Boolean(subscription.scheduled_change?.effective_at))}</p>\n              \n              <p className=\"mb-1 font-bold text-red-500\">\n                <strong>ALL CONDITIONS MET:</strong> {String(\n                  Boolean(subscription.hasActive && \n                  subscription.scheduled_change && \n                  subscription.scheduled_change.action === \"cancel\" && \n                  subscription.scheduled_change.effective_at)\n                )}\n              </p>\n              \n              {/* Add a test banner to check if banners are visible at all */}\n              <div className=\"mt-2 mb-1 p-2 bg-amber-50 border-l-4 border-amber-400 text-amber-800\">\n                Test banner - if you can see this, banners are rendering correctly\n              </div>\n              \n              {subscription.scheduled_change && (\n                <>\n                  <p className=\"mb-1\"><strong>action:</strong> {subscription.scheduled_change.action}</p>\n                  <p className=\"mb-1\"><strong>effective_at:</strong> {subscription.scheduled_change.effective_at}</p>\n                </>\n              )}\n              \n              <div className=\"mt-4 flex flex-wrap gap-2\">\n                <button \n                  className=\"px-2 py-1 bg-blue-500 text-white text-xs rounded\"\n                  onClick={() => {\n                    if (user?.uid) {\n                      fetchSubscriptionStatus(user.uid);\n                      fetchTransactionLogs(user.uid);\n                      if (subscription?.subscriptionId) {\n                        fetchSubscriptionDetails(user.uid, subscription.subscriptionId);\n                      }\n                    }\n                  }}\n                >\n                  Refresh Data\n                </button>\n                \n                {/* Test button to manually set the example data */}\n                <button \n                  className=\"px-2 py-1 bg-green-500 text-white text-xs rounded\"\n                  onClick={() => {\n                    // Manually inject the example data structure for testing\n                    setSubscription(prev => {\n                      const testData = {\n                        ...prev as SubscriptionState,\n                        hasActive: true,\n                        status: 'active',\n                        scheduled_change: {\n                          action: 'cancel',\n                          effective_at: '2025-05-21T07:06:00.292545Z',\n                          resume_at: null\n                        }\n                      };\n                      console.log('Manually set test data:', testData);\n                      return testData;\n                    });\n                  }}\n                >\n                  Test With Example Data\n                </button>\n                \n                {/* Test with the exact example provided */}\n                <button \n                  className=\"px-2 py-1 bg-purple-500 text-white text-xs rounded\"\n                  onClick={testWithProvidedExample}\n                >\n                  Test With Full Example\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Clean banner component without debug logs */}\n        {(() => {\n          if(subscription && subscription.hasActive) {            \n            if(subscription.scheduled_change && \n               subscription.scheduled_change.action === \"cancel\" && \n               subscription.scheduled_change.effective_at) {\n              \n              // Return the banner component for scheduled cancel\n              return (\n                <div className=\"mb-4 bg-amber-50 border-l-4 border-amber-400 p-4 rounded-md shadow-sm\">\n                  <div className=\"flex items-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-amber-400 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <p className=\"text-sm text-amber-800\">\n                      This subscription is scheduled to be canceled on {new Date(subscription.scheduled_change.effective_at).toLocaleDateString()}.\n                    </p>\n                  </div>\n                </div>\n              );\n            }\n            \n            // Backup check for cancellationEffectiveDate\n            if(subscription.cancellationEffectiveDate) {\n              return (\n                <div className=\"mb-4 bg-amber-50 border-l-4 border-amber-400 p-4 rounded-md shadow-sm\">\n                  <div className=\"flex items-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-amber-400 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <p className=\"text-sm text-amber-800\">\n                      This subscription is scheduled to be canceled on {subscription.cancellationEffectiveDate.toLocaleDateString()}.\n                    </p>\n                  </div>\n                </div>\n              );\n            }\n          }\n          \n          // No banner needed\n          return null;\n        })()}\n        \n        {subscription && subscription.hasActive && (\n          <div className=\"mb-8 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-2xl shadow-md overflow-hidden\">\n            <div className=\"px-6 py-8 md:px-8 md:py-8 relative\">\n              <div className=\"absolute top-0 right-0 w-64 h-64 -translate-y-24 translate-x-24 rounded-full bg-white/10 opacity-50\" />\n              <div className=\"absolute bottom-0 left-0 w-48 h-48 translate-y-20 -translate-x-16 rounded-full bg-white/5 opacity-50\" />\n              \n              <div className=\"relative z-10 flex flex-col md:flex-row justify-between items-start md:items-center gap-6\">\n                <div>\n                  <h1 className=\"text-2xl font-bold text-white mb-2\">\n                    Welcome, {user?.displayName || user?.email?.split('@')[0]}!\n                  </h1>\n                  <p className=\"text-blue-100 max-w-md\">\n                    Your subscription is active. \n                    Enjoy full access to all premium features.\n                  </p>\n                </div>\n                {/* <div className=\"flex flex-wrap gap-3\">\n                  {subscription.nextBillDate && (\n                    <div className=\"bg-white/15 backdrop-blur-sm px-4 py-2 rounded-lg\">\n                      <p className=\"text-xs text-blue-100 font-medium\">NEXT BILLING</p>\n                      <p className=\"text-white font-medium\">\n                        {new Date(subscription.nextBillDate).toLocaleDateString()}\n                      </p>\n                    </div>\n                  )}\n                  <div className=\"bg-white/15 backdrop-blur-sm px-4 py-2 rounded-lg\">\n                    <p className=\"text-xs text-blue-100 font-medium\">STATUS</p>\n                    <p className=\"text-white font-medium capitalize\">{subscription.status}</p>\n                  </div>\n                  {transactions.length > 0 && transactions[0].amountPaid && (\n                    <div className=\"bg-white/15 backdrop-blur-sm px-4 py-2 rounded-lg\">\n                      <p className=\"text-xs text-blue-100 font-medium\">PLAN</p>\n                      <p className=\"text-white font-medium\">\n                        {transactions[0].planDetails?.name || subscription.plan}\n                      </p>\n                    </div>\n                  )}\n                </div> */}\n                 <div className=\"mt-6 pt-4 \">\n                      <a \n                        href={`${PADDLE_CONFIG.customerPortalLink}?customer_email=${encodeURIComponent(user?.email || '')}${subscription?.customerId ? `&customer_id=${encodeURIComponent(subscription.customerId)}` : ''}`} \n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex items-center justify-center w-full py-2 px-4 text-sm font-medium text-blue-600 hover:text-blue-800 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors \"\n                      >\n                        Manage Subscription\n                      </a>\n                    </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {(!subscription || !subscription.hasActive) && (\n          <div className=\"mb-8 bg-gradient-to-r from-slate-700 to-slate-800 rounded-2xl shadow-md overflow-hidden\">\n            <div className=\"px-6 py-8 md:px-8 md:py-8 relative\">\n              <div className=\"absolute top-0 right-0 w-64 h-64 -translate-y-24 translate-x-24 rounded-full bg-white/10 opacity-20\" />\n              \n              <div className=\"relative z-10 flex flex-col md:flex-row items-start md:items-center justify-between gap-6\">\n                <div>\n                  <h1 className=\"text-2xl font-bold text-white mb-2\">\n                    Welcome to Your Dashboard\n                  </h1>\n                  <p className=\"text-slate-300 max-w-md mb-4\">\n                    Unlock all premium features by subscribing to one of our plans below.\n                    Get started today and experience the full power of our platform.\n                  </p>\n                  <button\n                    onClick={() => {\n                      // Scroll to the subscription plans section\n                      document.getElementById('subscription-plans')?.scrollIntoView({ \n                        behavior: 'smooth',\n                        block: 'center'\n                      });\n                    }}\n                    className=\"px-6 py-2.5 bg-white text-slate-800 hover:bg-slate-100 rounded-lg font-medium transition-colors\"\n                  >\n                    View Plans\n                  </button>\n                </div>\n                <div className=\"bg-white/10 backdrop-blur-sm p-5 rounded-xl hidden md:block\">\n                  <div className=\"flex items-center space-x-3 text-white mb-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-300\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <span>Access all premium features</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3 text-white mb-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-300\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <span>Priority customer support</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3 text-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-300\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <span>Cancel anytime</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Profile and Subscription Info Section */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"sticky top-24 space-y-6\">\n              <UserProfileCard user={user} />\n              \n              {/* {subscription && (\n                <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/80 p-6 overflow-hidden relative\">\n                  <div className=\"absolute top-0 right-0 w-32 h-32 -translate-y-8 translate-x-8\">\n                    <div className=\"w-full h-full rounded-full bg-gradient-to-br from-blue-100 to-indigo-100 opacity-50\" />\n                  </div>\n                  \n                  <h2 className=\"text-lg font-semibold text-slate-800 mb-4 relative\">Subscription Status</h2>\n                  <div className=\"space-y-4 relative\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-slate-600\">Status</span>\n                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${\n                        subscription.status === 'active' \n                          ? 'bg-emerald-100 text-emerald-800'\n                          : subscription.status === 'canceled'\n                            ? 'bg-red-100 text-red-800'\n                            : 'bg-slate-100 text-slate-800'\n                      }`}>\n                        {subscription.status.charAt(0).toUpperCase() + subscription.status.slice(1)}\n                      </span>\n                    </div>\n                    \n                    {subscriptionDetails && (\n                      <>\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-slate-600\">Plan</span>\n                          <span className=\"font-medium text-sm px-3 py-1 bg-blue-50 text-blue-700 rounded-full\">\n                            {subscriptionDetails.planName || subscriptionDetails.items?.[0]?.price?.product_name || 'Unknown Plan'}\n                          </span>\n                        </div>\n\n                       \n                        {subscriptionDetails.priceAmount && (\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-slate-600\">Price</span>\n                            <span className=\"font-medium text-slate-800\">\n                              {formatPrice(subscriptionDetails.priceAmount, subscriptionDetails.priceCurrency)}\n                            </span>\n                          </div>\n                        )}\n\n                        {subscriptionDetails.formattedPrice && (\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-slate-600\">Price</span>\n                            <span className=\"font-medium text-slate-800\">\n                              {subscriptionDetails.formattedPrice}\n                            </span>\n                          </div>\n                        )}\n\n                        {!subscriptionDetails.priceAmount && !subscriptionDetails.formattedPrice && (subscriptionDetails.price || subscriptionDetails.items?.[0]?.price?.unit_price) && (\n                          <div>\n                            <p className=\"text-sm text-slate-500 mb-1\">Price</p>\n                            <p className=\"text-lg font-medium text-slate-900\">\n                              {subscriptionDetails.price \n                                ? (typeof subscriptionDetails.price === 'object' \n                                   ? formatPrice(subscriptionDetails.price.amount, subscriptionDetails.price.currency) \n                                   : formatPrice(subscriptionDetails.price, subscriptionDetails.priceCurrency || 'USD'))\n                                : formatPrice(subscriptionDetails.items[0].price.unit_price.amount, subscriptionDetails.items[0].price.unit_price.currency_code)\n                              }\n                            </p>\n                          </div>\n                        )}\n\n                        {subscriptionDetails.createdAt && (\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-slate-600\">Created On</span>\n                            <span className=\"font-medium text-slate-800\">\n                              {typeof subscriptionDetails.createdAt.toDate === 'function' \n                                ? subscriptionDetails.createdAt.toDate().toLocaleDateString() \n                                : new Date(subscriptionDetails.createdAt).toLocaleDateString()}\n                            </span>\n                          </div>\n                        )}\n\n                        {subscriptionDetails.nextBillDate && (\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-slate-600\">Next Billing</span>\n                            <span className=\"font-medium text-slate-800\">\n                              {typeof subscriptionDetails.nextBillDate.toDate === 'function'\n                                ? subscriptionDetails.nextBillDate.toDate().toLocaleDateString()\n                                : new Date(subscriptionDetails.nextBillDate).toLocaleDateString()}\n                            </span>\n                          </div>\n                        )}\n                      </>\n                    )}\n\n                    <div className=\"mt-6 pt-4 border-t border-slate-100\">\n                      <a \n                        href={`${PADDLE_CONFIG.customerPortalLink}?customer_email=${encodeURIComponent(user?.email || '')}${subscription?.customerId ? `&customer_id=${encodeURIComponent(subscription.customerId)}` : ''}`} \n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex items-center justify-center w-full py-2 px-4 text-sm font-medium text-blue-600 hover:text-blue-800 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors\"\n                      >\n                        Manage Subscription\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              )} */}\n            </div>\n          </div>\n\n          {/* Main Content Section */}\n          <div className=\"lg:col-span-2 space-y-8\">\n            {/* Subscription Details Card */}\n            {subscriptionDetails && (\n              <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/80 p-6 overflow-hidden relative\">\n                <div className=\"absolute top-0 right-0 w-48 h-48 -translate-y-12 translate-x-12\">\n                  <div className=\"w-full h-full rounded-full bg-gradient-to-br from-emerald-50 to-blue-50 opacity-50\" />\n                </div>\n                \n                <div className=\"flex items-center justify-between mb-6 relative\">\n                  <h2 className=\"text-xl font-semibold text-slate-800\">Subscription Details</h2>\n                  <span className={`px-3 py-1 rounded-full text-sm font-medium \n                    ${subscriptionDetails.status === 'active' \n                      ? 'bg-emerald-100 text-emerald-800' \n                      : 'bg-blue-100 text-blue-800'}`\n                  }>\n                    {subscriptionDetails.status ? subscriptionDetails.status.charAt(0).toUpperCase() + subscriptionDetails.status.slice(1) : 'Active'}\n                  </span>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 relative\">\n                  <div className=\"space-y-6\">\n                    <div>\n                      <p className=\"text-sm text-slate-500 mb-1\">Plan</p>\n                      <div className=\"flex items-center\">\n                        <span className=\"text-lg font-medium text-slate-900 mr-2\">\n                          {subscriptionDetails.planName || \n                           subscriptionDetails.items?.[0]?.price?.product_name || \n                           identifyPlan(subscriptionDetails.planId)?.name || \n                           'Standard'}\n                        </span>\n                       \n                      </div>\n                    </div>\n                    \n                    {subscriptionDetails.priceAmount && (\n                      <div>\n                        <p className=\"text-sm text-slate-500 mb-1\">Price</p>\n                        <p className=\"text-lg font-medium text-slate-900\">\n                          {formatPrice(subscriptionDetails.priceAmount, subscriptionDetails.priceCurrency)}\n                        </p>\n                      </div>\n                    )}\n                    \n                    {subscriptionDetails.formattedPrice && (\n                      <div>\n                        <p className=\"text-sm text-slate-500 mb-1\">Price</p>\n                        <p className=\"text-lg font-medium text-slate-900\">\n                          {subscriptionDetails.formattedPrice}\n                        </p>\n                      </div>\n                    )}\n                    \n                    {!subscriptionDetails.priceAmount && !subscriptionDetails.formattedPrice && (subscriptionDetails.price || subscriptionDetails.items?.[0]?.price?.unit_price) && (\n                      <div>\n                        <p className=\"text-sm text-slate-500 mb-1\">Price</p>\n                        <p className=\"text-lg font-medium text-slate-900\">\n                          {subscriptionDetails.price \n                            ? (typeof subscriptionDetails.price === 'object' \n                               ? formatPrice(subscriptionDetails.price.amount, subscriptionDetails.price.currency) \n                               : formatPrice(subscriptionDetails.price, subscriptionDetails.priceCurrency || 'USD'))\n                            : formatPrice(subscriptionDetails.items[0].price.unit_price.amount, subscriptionDetails.items[0].price.unit_price.currency_code)\n                          }\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"space-y-6\">\n                    <div>\n                      <p className=\"text-sm text-slate-500 mb-1\">Subscription Date</p>\n                      <p className=\"text-lg font-medium text-slate-900\">\n                        {subscriptionDetails.createdAt \n                          ? (typeof subscriptionDetails.createdAt.toDate === 'function'\n                             ? subscriptionDetails.createdAt.toDate().toLocaleDateString()\n                             : new Date(subscriptionDetails.createdAt).toLocaleDateString())\n                          : 'N/A'}\n                      </p>\n                    </div>\n                    \n                    {subscriptionDetails.startedAt && (\n                      <div>\n                        <p className=\"text-sm text-slate-500 mb-1\">Subscription Start</p>\n                        <p className=\"text-lg font-medium text-slate-900\">\n                          {typeof subscriptionDetails.startedAt.toDate === 'function'\n                            ? subscriptionDetails.startedAt.toDate().toLocaleDateString()\n                            : new Date(subscriptionDetails.startedAt).toLocaleDateString()}\n                        </p>\n                      </div>\n                    )}\n                    \n                    <div>\n                      <p className=\"text-sm text-slate-500 mb-1\">Subscription ID</p>\n                      <p className=\"text-sm font-mono text-slate-600 break-all\">\n                        {subscriptionDetails.subscriptionId || subscriptionDetails.id}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Subscription Plans */}\n            <div id=\"subscription-plans\" className=\"bg-white rounded-2xl shadow-sm border border-slate-200/80 p-6 relative overflow-hidden\">\n              <div className=\"absolute top-0 right-0 w-96 h-96 -translate-y-48 translate-x-48\">\n                <div className=\"w-full h-full rounded-full bg-gradient-to-br from-violet-50 to-purple-50 opacity-50\" />\n              </div>\n\n              <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-8 relative\">\n                <div>\n                  <h2 className=\"text-xl font-semibold text-slate-800\">Subscription Plans</h2>\n                  <p className=\"text-slate-500 mt-1\">Choose the perfect plan for your needs</p>\n                </div>\n                <div className=\"flex p-1 bg-slate-100 rounded-lg\">\n                  <button\n                    onClick={() => setBillingCycle('month')}\n                    className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                      billingCycle === 'month'\n                        ? 'bg-white shadow-sm text-slate-800'\n                        : 'text-slate-600 hover:text-slate-800'\n                    }`}\n                  >\n                    Monthly\n                  </button>\n                  <button\n                    onClick={() => setBillingCycle('year')}\n                    className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                      billingCycle === 'year'\n                        ? 'bg-white shadow-sm text-slate-800'\n                        : 'text-slate-600 hover:text-slate-800'\n                    }`}\n                  >\n                    Yearly\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 relative\">\n                {/* Standard Plan */}\n                <div className={`group relative border ${subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' ? 'border-blue-300 bg-blue-50/30' : 'border-slate-200'} rounded-2xl p-6 hover:shadow-md hover:border-slate-300 transition-all duration-300`}>\n                  {subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' && (\n                    <div className=\"absolute -top-3 right-6\">\n                      <span className=\"bg-blue-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow-sm\">\n                        Current Plan\n                      </span>\n                    </div>\n                  )}\n                  <div className=\"absolute inset-0 bg-gradient-to-br from-blue-50 to-slate-50 opacity-0 group-hover:opacity-100 transition-opacity rounded-2xl\" />\n                  \n                  <div className=\"relative\">\n                    <h3 className=\"text-xl font-semibold text-slate-800 mb-2\">Standard Plan</h3>\n                    <p className=\"text-slate-600 mb-4\">\n                      {billingCycle === 'month' \n                        ? 'Perfect for getting started' \n                        : 'Save more with yearly billing'}\n                    </p>\n                    <div className=\"mb-6\">\n                      <span className=\"text-3xl font-bold text-slate-900\">\n                        {prices.standard || 'Loading...'}\n                      </span>\n                      <span className=\"text-slate-600\">/{billingCycle}</span>\n                    </div>\n                    <button\n                      onClick={() => handleSubscription('standard')}\n                      disabled={Boolean(!paddleLoaded || (subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' && subscription?.status === 'active'))}\n                      className={`w-full py-3 px-4 rounded-xl transition-all ${\n                        !paddleLoaded \n                          ? 'bg-slate-200 cursor-not-allowed text-slate-500'\n                          : subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' && subscription?.status === 'active'\n                            ? 'bg-blue-100 text-blue-800 cursor-not-allowed'\n                            : 'bg-blue-600 hover:bg-blue-700 text-white shadow-sm hover:shadow group-hover:shadow-md'\n                      }`}\n                    >\n                      {!paddleLoaded \n                        ? 'Loading...' \n                        : subscription?.plan && identifyPlan(subscription.plan)?.name === 'Standard Plan' && subscription?.status === 'active'\n                          ? 'Current Plan'\n                          : `Get Standard ${billingCycle === 'month' ? 'Monthly' : 'Yearly'}`\n                      }\n                    </button>\n                  </div>\n                </div>\n\n                {/* Premium Plan */}\n                <div className={`group relative border-2 ${subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' ? 'border-violet-300 bg-violet-50/30' : 'border-violet-200'} rounded-2xl p-6 hover:shadow-md hover:border-violet-300 transition-all duration-300`}>\n                  {subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' ? (\n                    <div className=\"absolute -top-3 right-6\">\n                      <span className=\"bg-gradient-to-r from-violet-600 to-indigo-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow-sm\">\n                        Current Plan\n                      </span>\n                    </div>\n                  ) : (\n                    <div className=\"absolute -top-4 left-4\">\n                      <span className=\"bg-gradient-to-r from-violet-600 to-indigo-600 text-white px-4 py-1 rounded-full text-sm font-medium shadow-sm\">\n                        Popular\n                      </span>\n                    </div>\n                  )}\n                  \n                  <div className=\"absolute inset-0 bg-gradient-to-br from-violet-50 to-indigo-50 opacity-50 group-hover:opacity-100 transition-opacity rounded-2xl\" />\n                  \n                  <div className=\"relative\">\n                    <h3 className=\"text-xl font-semibold text-slate-800 mb-2\">Premium Plan</h3>\n                    <p className=\"text-slate-600 mb-4\">\n                      {billingCycle === 'month' \n                        ? 'Access all premium features' \n                        : 'Best value for full access'}\n                    </p>\n                    <div className=\"mb-6\">\n                      <span className=\"text-3xl font-bold text-slate-900\">\n                        {prices.premium || 'Loading...'}\n                      </span>\n                      <span className=\"text-slate-600\">/{billingCycle}</span>\n                    </div>\n                    <button\n                      onClick={() => handleSubscription('premium')}\n                      disabled={Boolean(!paddleLoaded || (subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' && subscription?.status === 'active'))}\n                      className={`w-full py-3 px-4 rounded-xl transition-all ${\n                        !paddleLoaded \n                          ? 'bg-slate-200 cursor-not-allowed text-slate-500'\n                          : subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' && subscription?.status === 'active'\n                            ? 'bg-violet-100 text-violet-800 cursor-not-allowed'\n                            : 'bg-gradient-to-r from-violet-600 to-indigo-600 hover:from-violet-700 hover:to-indigo-700 text-white shadow-sm hover:shadow group-hover:shadow-md'\n                      }`}\n                    >\n                      {!paddleLoaded \n                        ? 'Loading...' \n                        : subscription?.plan && identifyPlan(subscription.plan)?.name === 'Premium Plan' && subscription?.status === 'active'\n                          ? 'Current Plan'\n                          : `Get Premium ${billingCycle === 'month' ? 'Monthly' : 'Yearly'}`\n                      }\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}