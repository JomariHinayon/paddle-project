{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/lib/firebase-admin.ts"],"sourcesContent":["import admin from 'firebase-admin';\n\n// Initialize Firebase Admin if not already initialized\nexport const getFirebaseAdmin = () => {\n  if (!admin.apps.length) {\n    const privateKey = process.env.FIREBASE_PRIVATE_KEY;\n    admin.initializeApp({\n      credential: admin.credential.cert({\n        projectId: process.env.FIREBASE_PROJECT_ID,\n        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n        privateKey: privateKey ? privateKey.replace(/\\\\n/g, '\\n') : '',\n      }),\n    });\n  }\n  return admin;\n};\n\n// Helper to get auth instance\nexport const getAuth = () => getFirebaseAdmin().auth();\n\n// Helper to get Firestore instance\nexport const getFirestore = () => getFirebaseAdmin().firestore();\n"],"names":[],"mappings":";;;;;AAAA;;AAGO,MAAM,mBAAmB;IAC9B,IAAI,CAAC,2HAAA,CAAA,UAAK,CAAC,IAAI,CAAC,MAAM,EAAE;QACtB,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB;QACnD,2HAAA,CAAA,UAAK,CAAC,aAAa,CAAC;YAClB,YAAY,2HAAA,CAAA,UAAK,CAAC,UAAU,CAAC,IAAI,CAAC;gBAChC,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;gBAC9C,YAAY,aAAa,WAAW,OAAO,CAAC,QAAQ,QAAQ;YAC9D;QACF;IACF;IACA,OAAO,2HAAA,CAAA,UAAK;AACd;AAGO,MAAM,UAAU,IAAM,mBAAmB,IAAI;AAG7C,MAAM,eAAe,IAAM,mBAAmB,SAAS","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/elevate/.ssh/paddle-project/src/app/api/auth/logout/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getAuth } from '@/lib/firebase-admin';\n\n// Configure this route to use Node.js runtime\nexport const runtime = 'nodejs';\n\nexport async function POST(req: NextRequest) {\n  try {\n    // Get the session cookie\n    const sessionCookie = req.cookies.get('session')?.value;\n\n    if (sessionCookie) {\n      // Verify the session cookie\n      const auth = getAuth();\n      const decodedClaims = await auth.verifySessionCookie(sessionCookie);\n      \n      // Revoke all sessions for the user\n      await auth.revokeRefreshTokens(decodedClaims.sub);\n    }\n\n    // Clear the session cookie\n    const response = NextResponse.json({ success: true });\n    response.cookies.delete('session');\n    \n    return response;\n  } catch (error: any) {\n    console.error('Error logging out:', error);\n    \n    // Even if verification fails, still clear the cookie\n    const response = NextResponse.json({ success: true });\n    response.cookies.delete('session');\n    \n    return response;\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,MAAM,UAAU;AAEhB,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,yBAAyB;QACzB,MAAM,gBAAgB,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY;QAElD,IAAI,eAAe;YACjB,4BAA4B;YAC5B,MAAM,OAAO,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;YACnB,MAAM,gBAAgB,MAAM,KAAK,mBAAmB,CAAC;YAErD,mCAAmC;YACnC,MAAM,KAAK,mBAAmB,CAAC,cAAc,GAAG;QAClD;QAEA,2BAA2B;QAC3B,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;QACnD,SAAS,OAAO,CAAC,MAAM,CAAC;QAExB,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,sBAAsB;QAEpC,qDAAqD;QACrD,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;QACnD,SAAS,OAAO,CAAC,MAAM,CAAC;QAExB,OAAO;IACT;AACF","debugId":null}}]
}