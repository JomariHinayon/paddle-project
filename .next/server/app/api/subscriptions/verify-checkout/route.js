(()=>{var e={};e.id=1,e.ids=[1],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12412:e=>{"use strict";e.exports=require("assert")},21820:e=>{"use strict";e.exports=require("os")},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29021:e=>{"use strict";e.exports=require("fs")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},46675:e=>{"use strict";e.exports=require("firebase-admin")},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},64731:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>f,routeModule:()=>x,serverHooks:()=>m,workAsyncStorage:()=>I,workUnitAsyncStorage:()=>h});var s={};r.r(s),r.d(s,{POST:()=>l});var i=r(96559),o=r(48088),a=r(37719),n=r(32190),c=r(46675),u=r.n(c),p=r(94612);u().apps.length||u().initializeApp({credential:process.env.FIREBASE_PRIVATE_KEY?u().credential.cert({projectId:process.env.FIREBASE_PROJECT_ID,clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY.replace(/\\n/g,"\n")}):u().credential.applicationDefault()});let d=u().firestore();async function l(e){try{let{checkoutId:t,customerId:r,userId:s,email:i}=await e.json();if(!t||!r||!s)return n.NextResponse.json({error:"Checkout ID, Customer ID, and User ID are required"},{status:400});console.log(`Verifying checkout for: ${t}, Customer: ${r}, User: ${s}`);let o=d.collection("users").doc(s).collection("transactions"),a=await o.where("customerId","==",r).orderBy("createdAt","desc").limit(1).get();if(!a.empty){console.log("Found existing transaction for this customer");let e=a.docs[0].data();return n.NextResponse.json({subscriptionId:e.subscriptionId,status:e.status,planId:e.planId,nextBillDate:e.nextBillDate,customerId:e.customerId})}let c=process.env.PADDLE_API_KEY,l=process.env.PADDLE_VENDOR_ID;if(!c||!l)throw Error("Paddle API credentials not configured");let x=null,I=null;try{let e=await p.A.post("https://api.paddle.com/checkout/completed",{checkout_id:t},{headers:{Authorization:`Bearer ${c}`,"Content-Type":"application/json"}});if(console.log("Paddle checkout response:",e.data),e.data?.data){let t=e.data.data;if(t.subscription_id){x=t.subscription_id;let e=await p.A.get(`https://api.paddle.com/subscriptions/${x}`,{headers:{Authorization:`Bearer ${c}`,"Content-Type":"application/json"}});console.log("Paddle subscription response:",e.data),I=e.data?.data}}}catch(e){console.error("Error fetching data from Paddle API:",e)}if(!I){let e=await d.collection("checkouts").doc(t).get();if(e.exists){let t=e.data();t&&t.subscriptionId&&(x=t.subscriptionId,I=t)}}if(!x){console.log("No subscription ID found for checkout. Waiting for subscription.created webhook.");let e=d.collection("pending_subscriptions").doc(t);return await e.set({checkoutId:t,customerId:r,userId:s,email:i,created:u().firestore.FieldValue.serverTimestamp(),status:"pending_subscription"}),n.NextResponse.json({error:"Subscription not yet available",subscriptionId:"pending",status:"processing",customerId:r,planId:"pending",nextBillDate:null},{status:202})}let h={subscriptionId:x,customerId:r,userId:s,status:I.status||"active",planId:I.items?.[0]?.price?.product_id||"",productId:I.items?.[0]?.product?.id||"",priceId:I.items?.[0]?.price?.id||"",nextBillDate:I.next_billed_at?new Date(I.next_billed_at):null,createdAt:I.created_at?new Date(I.created_at):u().firestore.FieldValue.serverTimestamp(),updatedAt:u().firestore.FieldValue.serverTimestamp(),customData:{userId:s,email:i,checkoutId:t}};return await d.collection("users").doc(s).collection("transactions").doc(x).set(h),await d.collection("users").doc(s).set({hasActiveSubscription:!0,currentSubscriptionId:x,subscriptionStatus:h.status,paddleCustomerId:r,currentPlan:h.planId},{merge:!0}),n.NextResponse.json({subscriptionId:x,status:h.status,planId:h.planId,nextBillDate:h.nextBillDate,customerId:r})}catch(e){return console.error("Error verifying checkout:",e),n.NextResponse.json({error:"Failed to verify checkout"},{status:500})}}let x=new i.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/subscriptions/verify-checkout/route",pathname:"/api/subscriptions/verify-checkout",filename:"route",bundlePath:"app/api/subscriptions/verify-checkout/route"},resolvedPagePath:"/Users/elevate/newPaddle/src/app/api/subscriptions/verify-checkout/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:I,workUnitAsyncStorage:h,serverHooks:m}=x;function f(){return(0,a.patchFetch)({workAsyncStorage:I,workUnitAsyncStorage:h})}},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},79551:e=>{"use strict";e.exports=require("url")},81630:e=>{"use strict";e.exports=require("http")},83997:e=>{"use strict";e.exports=require("tty")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,199,612],()=>r(64731));module.exports=s})();